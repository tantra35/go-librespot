// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: spotify/extendedmetadata/extended_metadata.proto

package extendedmetadata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExtensionType int32

const (
	ExtensionType_UNKNOWN ExtensionType = 0
	ExtensionType_GENERIC ExtensionType = 1
	ExtensionType_ASSOC   ExtensionType = 2
)

// Enum value maps for ExtensionType.
var (
	ExtensionType_name = map[int32]string{
		0: "UNKNOWN",
		1: "GENERIC",
		2: "ASSOC",
	}
	ExtensionType_value = map[string]int32{
		"UNKNOWN": 0,
		"GENERIC": 1,
		"ASSOC":   2,
	}
)

func (x ExtensionType) Enum() *ExtensionType {
	p := new(ExtensionType)
	*p = x
	return p
}

func (x ExtensionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExtensionType) Descriptor() protoreflect.EnumDescriptor {
	return file_spotify_extendedmetadata_extended_metadata_proto_enumTypes[0].Descriptor()
}

func (ExtensionType) Type() protoreflect.EnumType {
	return &file_spotify_extendedmetadata_extended_metadata_proto_enumTypes[0]
}

func (x ExtensionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExtensionType.Descriptor instead.
func (ExtensionType) EnumDescriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_extended_metadata_proto_rawDescGZIP(), []int{0}
}

type ExtensionQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExtensionKind ExtensionKind          `protobuf:"varint,1,opt,name=extension_kind,json=extensionKind,proto3,enum=spotify.extendedmetadata.ExtensionKind" json:"extension_kind,omitempty"`
	Etag          string                 `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtensionQuery) Reset() {
	*x = ExtensionQuery{}
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtensionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionQuery) ProtoMessage() {}

func (x *ExtensionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionQuery.ProtoReflect.Descriptor instead.
func (*ExtensionQuery) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_extended_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *ExtensionQuery) GetExtensionKind() ExtensionKind {
	if x != nil {
		return x.ExtensionKind
	}
	return ExtensionKind_UNKNOWN_EXTENSION
}

func (x *ExtensionQuery) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type EntityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityUri     string                 `protobuf:"bytes,1,opt,name=entity_uri,json=entityUri,proto3" json:"entity_uri,omitempty"`
	Query         []*ExtensionQuery      `protobuf:"bytes,2,rep,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityRequest) Reset() {
	*x = EntityRequest{}
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityRequest) ProtoMessage() {}

func (x *EntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityRequest.ProtoReflect.Descriptor instead.
func (*EntityRequest) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_extended_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *EntityRequest) GetEntityUri() string {
	if x != nil {
		return x.EntityUri
	}
	return ""
}

func (x *EntityRequest) GetQuery() []*ExtensionQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type BatchedEntityRequestHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Country       string                 `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Catalogue     string                 `protobuf:"bytes,2,opt,name=catalogue,proto3" json:"catalogue,omitempty"`
	TaskId        []byte                 `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchedEntityRequestHeader) Reset() {
	*x = BatchedEntityRequestHeader{}
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchedEntityRequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchedEntityRequestHeader) ProtoMessage() {}

func (x *BatchedEntityRequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchedEntityRequestHeader.ProtoReflect.Descriptor instead.
func (*BatchedEntityRequestHeader) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_extended_metadata_proto_rawDescGZIP(), []int{2}
}

func (x *BatchedEntityRequestHeader) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *BatchedEntityRequestHeader) GetCatalogue() string {
	if x != nil {
		return x.Catalogue
	}
	return ""
}

func (x *BatchedEntityRequestHeader) GetTaskId() []byte {
	if x != nil {
		return x.TaskId
	}
	return nil
}

type BatchedEntityRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Header        *BatchedEntityRequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	EntityRequest []*EntityRequest            `protobuf:"bytes,2,rep,name=entity_request,json=entityRequest,proto3" json:"entity_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchedEntityRequest) Reset() {
	*x = BatchedEntityRequest{}
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchedEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchedEntityRequest) ProtoMessage() {}

func (x *BatchedEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchedEntityRequest.ProtoReflect.Descriptor instead.
func (*BatchedEntityRequest) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_extended_metadata_proto_rawDescGZIP(), []int{3}
}

func (x *BatchedEntityRequest) GetHeader() *BatchedEntityRequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BatchedEntityRequest) GetEntityRequest() []*EntityRequest {
	if x != nil {
		return x.EntityRequest
	}
	return nil
}

type EntityExtensionDataArrayHeader struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ProviderErrorStatus int32                  `protobuf:"varint,1,opt,name=provider_error_status,json=providerErrorStatus,proto3" json:"provider_error_status,omitempty"`
	CacheTtlInSeconds   int64                  `protobuf:"varint,2,opt,name=cache_ttl_in_seconds,json=cacheTtlInSeconds,proto3" json:"cache_ttl_in_seconds,omitempty"`
	OfflineTtlInSeconds int64                  `protobuf:"varint,3,opt,name=offline_ttl_in_seconds,json=offlineTtlInSeconds,proto3" json:"offline_ttl_in_seconds,omitempty"`
	ExtensionType       ExtensionType          `protobuf:"varint,4,opt,name=extension_type,json=extensionType,proto3,enum=spotify.extendedmetadata.ExtensionType" json:"extension_type,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EntityExtensionDataArrayHeader) Reset() {
	*x = EntityExtensionDataArrayHeader{}
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityExtensionDataArrayHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityExtensionDataArrayHeader) ProtoMessage() {}

func (x *EntityExtensionDataArrayHeader) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityExtensionDataArrayHeader.ProtoReflect.Descriptor instead.
func (*EntityExtensionDataArrayHeader) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_extended_metadata_proto_rawDescGZIP(), []int{4}
}

func (x *EntityExtensionDataArrayHeader) GetProviderErrorStatus() int32 {
	if x != nil {
		return x.ProviderErrorStatus
	}
	return 0
}

func (x *EntityExtensionDataArrayHeader) GetCacheTtlInSeconds() int64 {
	if x != nil {
		return x.CacheTtlInSeconds
	}
	return 0
}

func (x *EntityExtensionDataArrayHeader) GetOfflineTtlInSeconds() int64 {
	if x != nil {
		return x.OfflineTtlInSeconds
	}
	return 0
}

func (x *EntityExtensionDataArrayHeader) GetExtensionType() ExtensionType {
	if x != nil {
		return x.ExtensionType
	}
	return ExtensionType_UNKNOWN
}

type EntityExtensionDataArray struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Header        *EntityExtensionDataArrayHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ExtensionKind ExtensionKind                   `protobuf:"varint,2,opt,name=extension_kind,json=extensionKind,proto3,enum=spotify.extendedmetadata.ExtensionKind" json:"extension_kind,omitempty"`
	ExtensionData []*EntityExtensionData          `protobuf:"bytes,3,rep,name=extension_data,json=extensionData,proto3" json:"extension_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityExtensionDataArray) Reset() {
	*x = EntityExtensionDataArray{}
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityExtensionDataArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityExtensionDataArray) ProtoMessage() {}

func (x *EntityExtensionDataArray) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityExtensionDataArray.ProtoReflect.Descriptor instead.
func (*EntityExtensionDataArray) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_extended_metadata_proto_rawDescGZIP(), []int{5}
}

func (x *EntityExtensionDataArray) GetHeader() *EntityExtensionDataArrayHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EntityExtensionDataArray) GetExtensionKind() ExtensionKind {
	if x != nil {
		return x.ExtensionKind
	}
	return ExtensionKind_UNKNOWN_EXTENSION
}

func (x *EntityExtensionDataArray) GetExtensionData() []*EntityExtensionData {
	if x != nil {
		return x.ExtensionData
	}
	return nil
}

type BatchedExtensionResponseHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchedExtensionResponseHeader) Reset() {
	*x = BatchedExtensionResponseHeader{}
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchedExtensionResponseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchedExtensionResponseHeader) ProtoMessage() {}

func (x *BatchedExtensionResponseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchedExtensionResponseHeader.ProtoReflect.Descriptor instead.
func (*BatchedExtensionResponseHeader) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_extended_metadata_proto_rawDescGZIP(), []int{6}
}

type BatchedExtensionResponse struct {
	state            protoimpl.MessageState          `protogen:"open.v1"`
	Header           *BatchedExtensionResponseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	ExtendedMetadata []*EntityExtensionDataArray     `protobuf:"bytes,2,rep,name=extended_metadata,json=extendedMetadata,proto3" json:"extended_metadata,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BatchedExtensionResponse) Reset() {
	*x = BatchedExtensionResponse{}
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchedExtensionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchedExtensionResponse) ProtoMessage() {}

func (x *BatchedExtensionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_extendedmetadata_extended_metadata_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchedExtensionResponse.ProtoReflect.Descriptor instead.
func (*BatchedExtensionResponse) Descriptor() ([]byte, []int) {
	return file_spotify_extendedmetadata_extended_metadata_proto_rawDescGZIP(), []int{7}
}

func (x *BatchedExtensionResponse) GetHeader() *BatchedExtensionResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BatchedExtensionResponse) GetExtendedMetadata() []*EntityExtensionDataArray {
	if x != nil {
		return x.ExtendedMetadata
	}
	return nil
}

var File_spotify_extendedmetadata_extended_metadata_proto protoreflect.FileDescriptor

const file_spotify_extendedmetadata_extended_metadata_proto_rawDesc = "" +
	"\n" +
	"0spotify/extendedmetadata/extended_metadata.proto\x12\x18spotify.extendedmetadata\x1a4spotify/extendedmetadata/entity_extension_data.proto\x1a-spotify/extendedmetadata/extension_kind.proto\"t\n" +
	"\x0eExtensionQuery\x12N\n" +
	"\x0eextension_kind\x18\x01 \x01(\x0e2'.spotify.extendedmetadata.ExtensionKindR\rextensionKind\x12\x12\n" +
	"\x04etag\x18\x02 \x01(\tR\x04etag\"n\n" +
	"\rEntityRequest\x12\x1d\n" +
	"\n" +
	"entity_uri\x18\x01 \x01(\tR\tentityUri\x12>\n" +
	"\x05query\x18\x02 \x03(\v2(.spotify.extendedmetadata.ExtensionQueryR\x05query\"m\n" +
	"\x1aBatchedEntityRequestHeader\x12\x18\n" +
	"\acountry\x18\x01 \x01(\tR\acountry\x12\x1c\n" +
	"\tcatalogue\x18\x02 \x01(\tR\tcatalogue\x12\x17\n" +
	"\atask_id\x18\x03 \x01(\fR\x06taskId\"\xb4\x01\n" +
	"\x14BatchedEntityRequest\x12L\n" +
	"\x06header\x18\x01 \x01(\v24.spotify.extendedmetadata.BatchedEntityRequestHeaderR\x06header\x12N\n" +
	"\x0eentity_request\x18\x02 \x03(\v2'.spotify.extendedmetadata.EntityRequestR\rentityRequest\"\x8a\x02\n" +
	"\x1eEntityExtensionDataArrayHeader\x122\n" +
	"\x15provider_error_status\x18\x01 \x01(\x05R\x13providerErrorStatus\x12/\n" +
	"\x14cache_ttl_in_seconds\x18\x02 \x01(\x03R\x11cacheTtlInSeconds\x123\n" +
	"\x16offline_ttl_in_seconds\x18\x03 \x01(\x03R\x13offlineTtlInSeconds\x12N\n" +
	"\x0eextension_type\x18\x04 \x01(\x0e2'.spotify.extendedmetadata.ExtensionTypeR\rextensionType\"\x92\x02\n" +
	"\x18EntityExtensionDataArray\x12P\n" +
	"\x06header\x18\x01 \x01(\v28.spotify.extendedmetadata.EntityExtensionDataArrayHeaderR\x06header\x12N\n" +
	"\x0eextension_kind\x18\x02 \x01(\x0e2'.spotify.extendedmetadata.ExtensionKindR\rextensionKind\x12T\n" +
	"\x0eextension_data\x18\x03 \x03(\v2-.spotify.extendedmetadata.EntityExtensionDataR\rextensionData\" \n" +
	"\x1eBatchedExtensionResponseHeader\"\xcd\x01\n" +
	"\x18BatchedExtensionResponse\x12P\n" +
	"\x06header\x18\x01 \x01(\v28.spotify.extendedmetadata.BatchedExtensionResponseHeaderR\x06header\x12_\n" +
	"\x11extended_metadata\x18\x02 \x03(\v22.spotify.extendedmetadata.EntityExtensionDataArrayR\x10extendedMetadata*4\n" +
	"\rExtensionType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aGENERIC\x10\x01\x12\t\n" +
	"\x05ASSOC\x10\x02B\xfd\x01\n" +
	"\x1ccom.spotify.extendedmetadataB\x15ExtendedMetadataProtoH\x01P\x01Z@github.com/devgianlu/go-librespot/proto/spotify/extendedmetadata\xf8\x01\x01\xa2\x02\x03SEX\xaa\x02\x18Spotify.Extendedmetadata\xca\x02\x18Spotify\\Extendedmetadata\xe2\x02$Spotify\\Extendedmetadata\\GPBMetadata\xea\x02\x19Spotify::Extendedmetadatab\x06proto3"

var (
	file_spotify_extendedmetadata_extended_metadata_proto_rawDescOnce sync.Once
	file_spotify_extendedmetadata_extended_metadata_proto_rawDescData []byte
)

func file_spotify_extendedmetadata_extended_metadata_proto_rawDescGZIP() []byte {
	file_spotify_extendedmetadata_extended_metadata_proto_rawDescOnce.Do(func() {
		file_spotify_extendedmetadata_extended_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spotify_extendedmetadata_extended_metadata_proto_rawDesc), len(file_spotify_extendedmetadata_extended_metadata_proto_rawDesc)))
	})
	return file_spotify_extendedmetadata_extended_metadata_proto_rawDescData
}

var file_spotify_extendedmetadata_extended_metadata_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spotify_extendedmetadata_extended_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_spotify_extendedmetadata_extended_metadata_proto_goTypes = []any{
	(ExtensionType)(0),                     // 0: spotify.extendedmetadata.ExtensionType
	(*ExtensionQuery)(nil),                 // 1: spotify.extendedmetadata.ExtensionQuery
	(*EntityRequest)(nil),                  // 2: spotify.extendedmetadata.EntityRequest
	(*BatchedEntityRequestHeader)(nil),     // 3: spotify.extendedmetadata.BatchedEntityRequestHeader
	(*BatchedEntityRequest)(nil),           // 4: spotify.extendedmetadata.BatchedEntityRequest
	(*EntityExtensionDataArrayHeader)(nil), // 5: spotify.extendedmetadata.EntityExtensionDataArrayHeader
	(*EntityExtensionDataArray)(nil),       // 6: spotify.extendedmetadata.EntityExtensionDataArray
	(*BatchedExtensionResponseHeader)(nil), // 7: spotify.extendedmetadata.BatchedExtensionResponseHeader
	(*BatchedExtensionResponse)(nil),       // 8: spotify.extendedmetadata.BatchedExtensionResponse
	(ExtensionKind)(0),                     // 9: spotify.extendedmetadata.ExtensionKind
	(*EntityExtensionData)(nil),            // 10: spotify.extendedmetadata.EntityExtensionData
}
var file_spotify_extendedmetadata_extended_metadata_proto_depIdxs = []int32{
	9,  // 0: spotify.extendedmetadata.ExtensionQuery.extension_kind:type_name -> spotify.extendedmetadata.ExtensionKind
	1,  // 1: spotify.extendedmetadata.EntityRequest.query:type_name -> spotify.extendedmetadata.ExtensionQuery
	3,  // 2: spotify.extendedmetadata.BatchedEntityRequest.header:type_name -> spotify.extendedmetadata.BatchedEntityRequestHeader
	2,  // 3: spotify.extendedmetadata.BatchedEntityRequest.entity_request:type_name -> spotify.extendedmetadata.EntityRequest
	0,  // 4: spotify.extendedmetadata.EntityExtensionDataArrayHeader.extension_type:type_name -> spotify.extendedmetadata.ExtensionType
	5,  // 5: spotify.extendedmetadata.EntityExtensionDataArray.header:type_name -> spotify.extendedmetadata.EntityExtensionDataArrayHeader
	9,  // 6: spotify.extendedmetadata.EntityExtensionDataArray.extension_kind:type_name -> spotify.extendedmetadata.ExtensionKind
	10, // 7: spotify.extendedmetadata.EntityExtensionDataArray.extension_data:type_name -> spotify.extendedmetadata.EntityExtensionData
	7,  // 8: spotify.extendedmetadata.BatchedExtensionResponse.header:type_name -> spotify.extendedmetadata.BatchedExtensionResponseHeader
	6,  // 9: spotify.extendedmetadata.BatchedExtensionResponse.extended_metadata:type_name -> spotify.extendedmetadata.EntityExtensionDataArray
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_spotify_extendedmetadata_extended_metadata_proto_init() }
func file_spotify_extendedmetadata_extended_metadata_proto_init() {
	if File_spotify_extendedmetadata_extended_metadata_proto != nil {
		return
	}
	file_spotify_extendedmetadata_entity_extension_data_proto_init()
	file_spotify_extendedmetadata_extension_kind_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spotify_extendedmetadata_extended_metadata_proto_rawDesc), len(file_spotify_extendedmetadata_extended_metadata_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spotify_extendedmetadata_extended_metadata_proto_goTypes,
		DependencyIndexes: file_spotify_extendedmetadata_extended_metadata_proto_depIdxs,
		EnumInfos:         file_spotify_extendedmetadata_extended_metadata_proto_enumTypes,
		MessageInfos:      file_spotify_extendedmetadata_extended_metadata_proto_msgTypes,
	}.Build()
	File_spotify_extendedmetadata_extended_metadata_proto = out.File
	file_spotify_extendedmetadata_extended_metadata_proto_goTypes = nil
	file_spotify_extendedmetadata_extended_metadata_proto_depIdxs = nil
}
