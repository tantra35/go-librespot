// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: spotify/event_sender/gabito.proto

package event_sender

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Application struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{0}
}

func (x *Application) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ApplicationDesktop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VersionString string                 `protobuf:"bytes,1,opt,name=version_string,json=versionString,proto3" json:"version_string,omitempty"`
	VersionCode   int64                  `protobuf:"varint,2,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	SessionId     []byte                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationDesktop) Reset() {
	*x = ApplicationDesktop{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationDesktop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDesktop) ProtoMessage() {}

func (x *ApplicationDesktop) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDesktop.ProtoReflect.Descriptor instead.
func (*ApplicationDesktop) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{1}
}

func (x *ApplicationDesktop) GetVersionString() string {
	if x != nil {
		return x.VersionString
	}
	return ""
}

func (x *ApplicationDesktop) GetVersionCode() int64 {
	if x != nil {
		return x.VersionCode
	}
	return 0
}

func (x *ApplicationDesktop) GetSessionId() []byte {
	if x != nil {
		return x.SessionId
	}
	return nil
}

type ClientContextId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientContextId) Reset() {
	*x = ClientContextId{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientContextId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientContextId) ProtoMessage() {}

func (x *ClientContextId) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientContextId.ProtoReflect.Descriptor instead.
func (*ClientContextId) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{2}
}

func (x *ClientContextId) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ClientId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientId) Reset() {
	*x = ClientId{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientId) ProtoMessage() {}

func (x *ClientId) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientId.ProtoReflect.Descriptor instead.
func (*ClientId) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{3}
}

func (x *ClientId) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Manufacturer  string                 `protobuf:"bytes,1,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Model         string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Device) Reset() {
	*x = Device{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{4}
}

func (x *Device) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type DeviceDesktop struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PlatformType       string                 `protobuf:"bytes,1,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`
	DeviceManufacturer string                 `protobuf:"bytes,2,opt,name=device_manufacturer,json=deviceManufacturer,proto3" json:"device_manufacturer,omitempty"`
	DeviceModel        string                 `protobuf:"bytes,3,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	DeviceId           string                 `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	OsVersion          string                 `protobuf:"bytes,5,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DeviceDesktop) Reset() {
	*x = DeviceDesktop{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceDesktop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceDesktop) ProtoMessage() {}

func (x *DeviceDesktop) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceDesktop.ProtoReflect.Descriptor instead.
func (*DeviceDesktop) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{5}
}

func (x *DeviceDesktop) GetPlatformType() string {
	if x != nil {
		return x.PlatformType
	}
	return ""
}

func (x *DeviceDesktop) GetDeviceManufacturer() string {
	if x != nil {
		return x.DeviceManufacturer
	}
	return ""
}

func (x *DeviceDesktop) GetDeviceModel() string {
	if x != nil {
		return x.DeviceModel
	}
	return ""
}

func (x *DeviceDesktop) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceDesktop) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

type InstallationId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallationId) Reset() {
	*x = InstallationId{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallationId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallationId) ProtoMessage() {}

func (x *InstallationId) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallationId.ProtoReflect.Descriptor instead.
func (*InstallationId) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{6}
}

func (x *InstallationId) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type MonotonicClock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value         int64                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonotonicClock) Reset() {
	*x = MonotonicClock{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonotonicClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonotonicClock) ProtoMessage() {}

func (x *MonotonicClock) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonotonicClock.ProtoReflect.Descriptor instead.
func (*MonotonicClock) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{7}
}

func (x *MonotonicClock) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MonotonicClock) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Os struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Os) Reset() {
	*x = Os{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Os) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Os) ProtoMessage() {}

func (x *Os) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Os.ProtoReflect.Descriptor instead.
func (*Os) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{8}
}

func (x *Os) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Os) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Sdk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VersionName   string                 `protobuf:"bytes,1,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sdk) Reset() {
	*x = Sdk{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sdk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sdk) ProtoMessage() {}

func (x *Sdk) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sdk.ProtoReflect.Descriptor instead.
func (*Sdk) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{9}
}

func (x *Sdk) GetVersionName() string {
	if x != nil {
		return x.VersionName
	}
	return ""
}

func (x *Sdk) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Time struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int64                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Time) Reset() {
	*x = Time{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Time) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time) ProtoMessage() {}

func (x *Time) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time.ProtoReflect.Descriptor instead.
func (*Time) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{10}
}

func (x *Time) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DroppedEvents struct {
	state                     protoimpl.MessageState              `protogen:"open.v1"`
	DroppedEventsBySequenceId map[string]*DroppedEventByEventName `protobuf:"bytes,1,rep,name=dropped_events_by_sequence_id,json=droppedEventsBySequenceId,proto3" json:"dropped_events_by_sequence_id,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DroppedEvents) Reset() {
	*x = DroppedEvents{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DroppedEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DroppedEvents) ProtoMessage() {}

func (x *DroppedEvents) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DroppedEvents.ProtoReflect.Descriptor instead.
func (*DroppedEvents) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{11}
}

func (x *DroppedEvents) GetDroppedEventsBySequenceId() map[string]*DroppedEventByEventName {
	if x != nil {
		return x.DroppedEventsBySequenceId
	}
	return nil
}

type DroppedEventByEventName struct {
	state               protoimpl.MessageState                                `protogen:"open.v1"`
	DroppedEventsByName map[string]*DroppedEventByEventName_DroppedEventsInfo `protobuf:"bytes,1,rep,name=dropped_events_by_name,json=droppedEventsByName,proto3" json:"dropped_events_by_name,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DroppedEventByEventName) Reset() {
	*x = DroppedEventByEventName{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DroppedEventByEventName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DroppedEventByEventName) ProtoMessage() {}

func (x *DroppedEventByEventName) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DroppedEventByEventName.ProtoReflect.Descriptor instead.
func (*DroppedEventByEventName) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{12}
}

func (x *DroppedEventByEventName) GetDroppedEventsByName() map[string]*DroppedEventByEventName_DroppedEventsInfo {
	if x != nil {
		return x.DroppedEventsByName
	}
	return nil
}

type EventEntity struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FileFormatVersion uint32                 `protobuf:"varint,1,opt,name=file_format_version,json=fileFormatVersion,proto3" json:"file_format_version,omitempty"`
	EventName         string                 `protobuf:"bytes,2,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	SequenceId        []byte                 `protobuf:"bytes,3,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	SequenceNumber    uint64                 `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Payload           []byte                 `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	Owner             string                 `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	Authenticated     bool                   `protobuf:"varint,7,opt,name=authenticated,proto3" json:"authenticated,omitempty"`
	RecordId          uint64                 `protobuf:"varint,8,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EventEntity) Reset() {
	*x = EventEntity{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEntity) ProtoMessage() {}

func (x *EventEntity) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEntity.ProtoReflect.Descriptor instead.
func (*EventEntity) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{13}
}

func (x *EventEntity) GetFileFormatVersion() uint32 {
	if x != nil {
		return x.FileFormatVersion
	}
	return 0
}

func (x *EventEntity) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *EventEntity) GetSequenceId() []byte {
	if x != nil {
		return x.SequenceId
	}
	return nil
}

func (x *EventEntity) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *EventEntity) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *EventEntity) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *EventEntity) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

func (x *EventEntity) GetRecordId() uint64 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

type EventEnvelope struct {
	state          protoimpl.MessageState         `protogen:"open.v1"`
	EventName      string                         `protobuf:"bytes,2,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	EventFragment  []*EventEnvelope_EventFragment `protobuf:"bytes,3,rep,name=event_fragment,json=eventFragment,proto3" json:"event_fragment,omitempty"`
	SequenceId     []byte                         `protobuf:"bytes,4,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	SequenceNumber int64                          `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventEnvelope) Reset() {
	*x = EventEnvelope{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEnvelope) ProtoMessage() {}

func (x *EventEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEnvelope.ProtoReflect.Descriptor instead.
func (*EventEnvelope) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{14}
}

func (x *EventEnvelope) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *EventEnvelope) GetEventFragment() []*EventEnvelope_EventFragment {
	if x != nil {
		return x.EventFragment
	}
	return nil
}

func (x *EventEnvelope) GetSequenceId() []byte {
	if x != nil {
		return x.SequenceId
	}
	return nil
}

func (x *EventEnvelope) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type PublishEventsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Event           []*EventEnvelope       `protobuf:"bytes,1,rep,name=event,proto3" json:"event,omitempty"`
	SuppressPersist bool                   `protobuf:"varint,2,opt,name=suppress_persist,json=suppressPersist,proto3" json:"suppress_persist,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PublishEventsRequest) Reset() {
	*x = PublishEventsRequest{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishEventsRequest) ProtoMessage() {}

func (x *PublishEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishEventsRequest.ProtoReflect.Descriptor instead.
func (*PublishEventsRequest) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{15}
}

func (x *PublishEventsRequest) GetEvent() []*EventEnvelope {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *PublishEventsRequest) GetSuppressPersist() bool {
	if x != nil {
		return x.SuppressPersist
	}
	return false
}

type PublishEventsResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         []*PublishEventsResponse_EventError `protobuf:"bytes,1,rep,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishEventsResponse) Reset() {
	*x = PublishEventsResponse{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishEventsResponse) ProtoMessage() {}

func (x *PublishEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishEventsResponse.ProtoReflect.Descriptor instead.
func (*PublishEventsResponse) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{16}
}

func (x *PublishEventsResponse) GetError() []*PublishEventsResponse_EventError {
	if x != nil {
		return x.Error
	}
	return nil
}

type InstallationEntity struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FileFormatVersion int32                  `protobuf:"varint,1,opt,name=file_format_version,json=fileFormatVersion,proto3" json:"file_format_version,omitempty"`
	EncryptedPart     []byte                 `protobuf:"bytes,2,opt,name=encrypted_part,json=encryptedPart,proto3" json:"encrypted_part,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *InstallationEntity) Reset() {
	*x = InstallationEntity{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallationEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallationEntity) ProtoMessage() {}

func (x *InstallationEntity) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallationEntity.ProtoReflect.Descriptor instead.
func (*InstallationEntity) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{17}
}

func (x *InstallationEntity) GetFileFormatVersion() int32 {
	if x != nil {
		return x.FileFormatVersion
	}
	return 0
}

func (x *InstallationEntity) GetEncryptedPart() []byte {
	if x != nil {
		return x.EncryptedPart
	}
	return nil
}

type InstallationData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	InstallationId   []byte                 `protobuf:"bytes,1,opt,name=installation_id,json=installationId,proto3" json:"installation_id,omitempty"`
	LastSeenDeviceId []byte                 `protobuf:"bytes,2,opt,name=last_seen_device_id,json=lastSeenDeviceId,proto3" json:"last_seen_device_id,omitempty"`
	MonotonicClockId int64                  `protobuf:"varint,3,opt,name=monotonic_clock_id,json=monotonicClockId,proto3" json:"monotonic_clock_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InstallationData) Reset() {
	*x = InstallationData{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallationData) ProtoMessage() {}

func (x *InstallationData) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallationData.ProtoReflect.Descriptor instead.
func (*InstallationData) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{18}
}

func (x *InstallationData) GetInstallationId() []byte {
	if x != nil {
		return x.InstallationId
	}
	return nil
}

func (x *InstallationData) GetLastSeenDeviceId() []byte {
	if x != nil {
		return x.LastSeenDeviceId
	}
	return nil
}

func (x *InstallationData) GetMonotonicClockId() int64 {
	if x != nil {
		return x.MonotonicClockId
	}
	return 0
}

type RateLimitedEventsEntity struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FileFormatVersion int32                  `protobuf:"varint,1,opt,name=file_format_version,json=fileFormatVersion,proto3" json:"file_format_version,omitempty"`
	MapField          map[string]uint32      `protobuf:"bytes,2,rep,name=map_field,json=mapField,proto3" json:"map_field,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RateLimitedEventsEntity) Reset() {
	*x = RateLimitedEventsEntity{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitedEventsEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitedEventsEntity) ProtoMessage() {}

func (x *RateLimitedEventsEntity) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitedEventsEntity.ProtoReflect.Descriptor instead.
func (*RateLimitedEventsEntity) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{19}
}

func (x *RateLimitedEventsEntity) GetFileFormatVersion() int32 {
	if x != nil {
		return x.FileFormatVersion
	}
	return 0
}

func (x *RateLimitedEventsEntity) GetMapField() map[string]uint32 {
	if x != nil {
		return x.MapField
	}
	return nil
}

type RecordId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         uint64                 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordId) Reset() {
	*x = RecordId{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordId) ProtoMessage() {}

func (x *RecordId) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordId.ProtoReflect.Descriptor instead.
func (*RecordId) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{20}
}

func (x *RecordId) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type SequenceNumberEntity struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	FileFormatVersion  uint32                 `protobuf:"varint,1,opt,name=file_format_version,json=fileFormatVersion,proto3" json:"file_format_version,omitempty"`
	EventName          string                 `protobuf:"bytes,2,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	SequenceId         []byte                 `protobuf:"bytes,3,opt,name=sequence_id,json=sequenceId,proto3" json:"sequence_id,omitempty"`
	SequenceNumberNext uint64                 `protobuf:"varint,4,opt,name=sequence_number_next,json=sequenceNumberNext,proto3" json:"sequence_number_next,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SequenceNumberEntity) Reset() {
	*x = SequenceNumberEntity{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SequenceNumberEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SequenceNumberEntity) ProtoMessage() {}

func (x *SequenceNumberEntity) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SequenceNumberEntity.ProtoReflect.Descriptor instead.
func (*SequenceNumberEntity) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{21}
}

func (x *SequenceNumberEntity) GetFileFormatVersion() uint32 {
	if x != nil {
		return x.FileFormatVersion
	}
	return 0
}

func (x *SequenceNumberEntity) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *SequenceNumberEntity) GetSequenceId() []byte {
	if x != nil {
		return x.SequenceId
	}
	return nil
}

func (x *SequenceNumberEntity) GetSequenceNumberNext() uint64 {
	if x != nil {
		return x.SequenceNumberNext
	}
	return 0
}

type AdContext struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	PrecedingContentUri     *string                `protobuf:"bytes,1,opt,name=preceding_content_uri,json=precedingContentUri,proto3,oneof" json:"preceding_content_uri,omitempty"`
	PrecedingPlaybackId     *string                `protobuf:"bytes,2,opt,name=preceding_playback_id,json=precedingPlaybackId,proto3,oneof" json:"preceding_playback_id,omitempty"`
	PrecedingEndPosition    *int32                 `protobuf:"varint,3,opt,name=preceding_end_position,json=precedingEndPosition,proto3,oneof" json:"preceding_end_position,omitempty"`
	AdIds                   []string               `protobuf:"bytes,4,rep,name=ad_ids,json=adIds,proto3" json:"ad_ids,omitempty"`
	AdRequestId             *string                `protobuf:"bytes,5,opt,name=ad_request_id,json=adRequestId,proto3,oneof" json:"ad_request_id,omitempty"`
	SucceedingContentUri    *string                `protobuf:"bytes,6,opt,name=succeeding_content_uri,json=succeedingContentUri,proto3,oneof" json:"succeeding_content_uri,omitempty"`
	SucceedingPlaybackId    *string                `protobuf:"bytes,7,opt,name=succeeding_playback_id,json=succeedingPlaybackId,proto3,oneof" json:"succeeding_playback_id,omitempty"`
	SucceedingStartPosition *int32                 `protobuf:"varint,8,opt,name=succeeding_start_position,json=succeedingStartPosition,proto3,oneof" json:"succeeding_start_position,omitempty"`
	PrecedingDuration       *int32                 `protobuf:"varint,9,opt,name=preceding_duration,json=precedingDuration,proto3,oneof" json:"preceding_duration,omitempty"`
	AdSlotIds               []string               `protobuf:"bytes,10,rep,name=ad_slot_ids,json=adSlotIds,proto3" json:"ad_slot_ids,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *AdContext) Reset() {
	*x = AdContext{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdContext) ProtoMessage() {}

func (x *AdContext) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdContext.ProtoReflect.Descriptor instead.
func (*AdContext) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{22}
}

func (x *AdContext) GetPrecedingContentUri() string {
	if x != nil && x.PrecedingContentUri != nil {
		return *x.PrecedingContentUri
	}
	return ""
}

func (x *AdContext) GetPrecedingPlaybackId() string {
	if x != nil && x.PrecedingPlaybackId != nil {
		return *x.PrecedingPlaybackId
	}
	return ""
}

func (x *AdContext) GetPrecedingEndPosition() int32 {
	if x != nil && x.PrecedingEndPosition != nil {
		return *x.PrecedingEndPosition
	}
	return 0
}

func (x *AdContext) GetAdIds() []string {
	if x != nil {
		return x.AdIds
	}
	return nil
}

func (x *AdContext) GetAdRequestId() string {
	if x != nil && x.AdRequestId != nil {
		return *x.AdRequestId
	}
	return ""
}

func (x *AdContext) GetSucceedingContentUri() string {
	if x != nil && x.SucceedingContentUri != nil {
		return *x.SucceedingContentUri
	}
	return ""
}

func (x *AdContext) GetSucceedingPlaybackId() string {
	if x != nil && x.SucceedingPlaybackId != nil {
		return *x.SucceedingPlaybackId
	}
	return ""
}

func (x *AdContext) GetSucceedingStartPosition() int32 {
	if x != nil && x.SucceedingStartPosition != nil {
		return *x.SucceedingStartPosition
	}
	return 0
}

func (x *AdContext) GetPrecedingDuration() int32 {
	if x != nil && x.PrecedingDuration != nil {
		return *x.PrecedingDuration
	}
	return 0
}

func (x *AdContext) GetAdSlotIds() []string {
	if x != nil {
		return x.AdSlotIds
	}
	return nil
}

type AdDecisionEvent struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RequestId         *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3,oneof" json:"request_id,omitempty"`
	DecisionRequestId *string                `protobuf:"bytes,2,opt,name=decision_request_id,json=decisionRequestId,proto3,oneof" json:"decision_request_id,omitempty"`
	DecisionType      *string                `protobuf:"bytes,3,opt,name=decision_type,json=decisionType,proto3,oneof" json:"decision_type,omitempty"`
	AdId              *string                `protobuf:"bytes,4,opt,name=ad_id,json=adId,proto3,oneof" json:"ad_id,omitempty"`
	DecisionState     *string                `protobuf:"bytes,5,opt,name=decision_state,json=decisionState,proto3,oneof" json:"decision_state,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AdDecisionEvent) Reset() {
	*x = AdDecisionEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdDecisionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdDecisionEvent) ProtoMessage() {}

func (x *AdDecisionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdDecisionEvent.ProtoReflect.Descriptor instead.
func (*AdDecisionEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{23}
}

func (x *AdDecisionEvent) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *AdDecisionEvent) GetDecisionRequestId() string {
	if x != nil && x.DecisionRequestId != nil {
		return *x.DecisionRequestId
	}
	return ""
}

func (x *AdDecisionEvent) GetDecisionType() string {
	if x != nil && x.DecisionType != nil {
		return *x.DecisionType
	}
	return ""
}

func (x *AdDecisionEvent) GetAdId() string {
	if x != nil && x.AdId != nil {
		return *x.AdId
	}
	return ""
}

func (x *AdDecisionEvent) GetDecisionState() string {
	if x != nil && x.DecisionState != nil {
		return *x.DecisionState
	}
	return ""
}

type AdError struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestType     *string                `protobuf:"bytes,1,opt,name=request_type,json=requestType,proto3,oneof" json:"request_type,omitempty"`
	ErrorMessage    *string                `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	HttpErrorCode   *int64                 `protobuf:"varint,3,opt,name=http_error_code,json=httpErrorCode,proto3,oneof" json:"http_error_code,omitempty"`
	RequestUrl      *string                `protobuf:"bytes,4,opt,name=request_url,json=requestUrl,proto3,oneof" json:"request_url,omitempty"`
	TrackingEvent   *string                `protobuf:"bytes,5,opt,name=tracking_event,json=trackingEvent,proto3,oneof" json:"tracking_event,omitempty"`
	ErrorType       *string                `protobuf:"bytes,6,opt,name=error_type,json=errorType,proto3,oneof" json:"error_type,omitempty"`
	AdId            *string                `protobuf:"bytes,7,opt,name=ad_id,json=adId,proto3,oneof" json:"ad_id,omitempty"`
	LineitemId      *string                `protobuf:"bytes,8,opt,name=lineitem_id,json=lineitemId,proto3,oneof" json:"lineitem_id,omitempty"`
	Surface         *string                `protobuf:"bytes,9,opt,name=surface,proto3,oneof" json:"surface,omitempty"`
	AdContentOrigin *string                `protobuf:"bytes,10,opt,name=ad_content_origin,json=adContentOrigin,proto3,oneof" json:"ad_content_origin,omitempty"`
	Slot            *string                `protobuf:"bytes,11,opt,name=slot,proto3,oneof" json:"slot,omitempty"`
	RequestId       *string                `protobuf:"bytes,12,opt,name=request_id,json=requestId,proto3,oneof" json:"request_id,omitempty"`
	SlotIds         []string               `protobuf:"bytes,13,rep,name=slot_ids,json=slotIds,proto3" json:"slot_ids,omitempty"`
	Type            *string                `protobuf:"bytes,14,opt,name=type,proto3,oneof" json:"type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AdError) Reset() {
	*x = AdError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdError) ProtoMessage() {}

func (x *AdError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdError.ProtoReflect.Descriptor instead.
func (*AdError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{24}
}

func (x *AdError) GetRequestType() string {
	if x != nil && x.RequestType != nil {
		return *x.RequestType
	}
	return ""
}

func (x *AdError) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

func (x *AdError) GetHttpErrorCode() int64 {
	if x != nil && x.HttpErrorCode != nil {
		return *x.HttpErrorCode
	}
	return 0
}

func (x *AdError) GetRequestUrl() string {
	if x != nil && x.RequestUrl != nil {
		return *x.RequestUrl
	}
	return ""
}

func (x *AdError) GetTrackingEvent() string {
	if x != nil && x.TrackingEvent != nil {
		return *x.TrackingEvent
	}
	return ""
}

func (x *AdError) GetErrorType() string {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return ""
}

func (x *AdError) GetAdId() string {
	if x != nil && x.AdId != nil {
		return *x.AdId
	}
	return ""
}

func (x *AdError) GetLineitemId() string {
	if x != nil && x.LineitemId != nil {
		return *x.LineitemId
	}
	return ""
}

func (x *AdError) GetSurface() string {
	if x != nil && x.Surface != nil {
		return *x.Surface
	}
	return ""
}

func (x *AdError) GetAdContentOrigin() string {
	if x != nil && x.AdContentOrigin != nil {
		return *x.AdContentOrigin
	}
	return ""
}

func (x *AdError) GetSlot() string {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return ""
}

func (x *AdError) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *AdError) GetSlotIds() []string {
	if x != nil {
		return x.SlotIds
	}
	return nil
}

func (x *AdError) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type AdEvent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RequestId        *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3,oneof" json:"request_id,omitempty"`
	AppStartupId     *string                `protobuf:"bytes,2,opt,name=app_startup_id,json=appStartupId,proto3,oneof" json:"app_startup_id,omitempty"`
	AdId             *string                `protobuf:"bytes,3,opt,name=ad_id,json=adId,proto3,oneof" json:"ad_id,omitempty"`
	LineitemId       *string                `protobuf:"bytes,4,opt,name=lineitem_id,json=lineitemId,proto3,oneof" json:"lineitem_id,omitempty"`
	CreativeId       *string                `protobuf:"bytes,5,opt,name=creative_id,json=creativeId,proto3,oneof" json:"creative_id,omitempty"`
	Slot             *string                `protobuf:"bytes,6,opt,name=slot,proto3,oneof" json:"slot,omitempty"`
	Format           *string                `protobuf:"bytes,7,opt,name=format,proto3,oneof" json:"format,omitempty"`
	Type             *string                `protobuf:"bytes,8,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Skippable        *bool                  `protobuf:"varint,9,opt,name=skippable,proto3,oneof" json:"skippable,omitempty"`
	Event            *string                `protobuf:"bytes,10,opt,name=event,proto3,oneof" json:"event,omitempty"`
	EventSource      *string                `protobuf:"bytes,11,opt,name=event_source,json=eventSource,proto3,oneof" json:"event_source,omitempty"`
	EventReason      *string                `protobuf:"bytes,12,opt,name=event_reason,json=eventReason,proto3,oneof" json:"event_reason,omitempty"`
	EventSequenceNum *int32                 `protobuf:"varint,13,opt,name=event_sequence_num,json=eventSequenceNum,proto3,oneof" json:"event_sequence_num,omitempty"`
	Position         *int32                 `protobuf:"varint,14,opt,name=position,proto3,oneof" json:"position,omitempty"`
	Duration         *int32                 `protobuf:"varint,15,opt,name=duration,proto3,oneof" json:"duration,omitempty"`
	InFocus          *bool                  `protobuf:"varint,16,opt,name=in_focus,json=inFocus,proto3,oneof" json:"in_focus,omitempty"`
	Volume           *float32               `protobuf:"fixed32,17,opt,name=volume,proto3,oneof" json:"volume,omitempty"`
	ProductName      *string                `protobuf:"bytes,18,opt,name=product_name,json=productName,proto3,oneof" json:"product_name,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AdEvent) Reset() {
	*x = AdEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdEvent) ProtoMessage() {}

func (x *AdEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdEvent.ProtoReflect.Descriptor instead.
func (*AdEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{25}
}

func (x *AdEvent) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *AdEvent) GetAppStartupId() string {
	if x != nil && x.AppStartupId != nil {
		return *x.AppStartupId
	}
	return ""
}

func (x *AdEvent) GetAdId() string {
	if x != nil && x.AdId != nil {
		return *x.AdId
	}
	return ""
}

func (x *AdEvent) GetLineitemId() string {
	if x != nil && x.LineitemId != nil {
		return *x.LineitemId
	}
	return ""
}

func (x *AdEvent) GetCreativeId() string {
	if x != nil && x.CreativeId != nil {
		return *x.CreativeId
	}
	return ""
}

func (x *AdEvent) GetSlot() string {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return ""
}

func (x *AdEvent) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *AdEvent) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *AdEvent) GetSkippable() bool {
	if x != nil && x.Skippable != nil {
		return *x.Skippable
	}
	return false
}

func (x *AdEvent) GetEvent() string {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return ""
}

func (x *AdEvent) GetEventSource() string {
	if x != nil && x.EventSource != nil {
		return *x.EventSource
	}
	return ""
}

func (x *AdEvent) GetEventReason() string {
	if x != nil && x.EventReason != nil {
		return *x.EventReason
	}
	return ""
}

func (x *AdEvent) GetEventSequenceNum() int32 {
	if x != nil && x.EventSequenceNum != nil {
		return *x.EventSequenceNum
	}
	return 0
}

func (x *AdEvent) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *AdEvent) GetDuration() int32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *AdEvent) GetInFocus() bool {
	if x != nil && x.InFocus != nil {
		return *x.InFocus
	}
	return false
}

func (x *AdEvent) GetVolume() float32 {
	if x != nil && x.Volume != nil {
		return *x.Volume
	}
	return 0
}

func (x *AdEvent) GetProductName() string {
	if x != nil && x.ProductName != nil {
		return *x.ProductName
	}
	return ""
}

type AdRequestEvent struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FeatureIdentifier *string                `protobuf:"bytes,1,opt,name=feature_identifier,json=featureIdentifier,proto3,oneof" json:"feature_identifier,omitempty"`
	RequestedAdType   *string                `protobuf:"bytes,2,opt,name=requested_ad_type,json=requestedAdType,proto3,oneof" json:"requested_ad_type,omitempty"`
	LatencyMs         *int64                 `protobuf:"varint,3,opt,name=latency_ms,json=latencyMs,proto3,oneof" json:"latency_ms,omitempty"`
	RequestedAdTypes  []string               `protobuf:"bytes,4,rep,name=requested_ad_types,json=requestedAdTypes,proto3" json:"requested_ad_types,omitempty"`
	RequestId         *string                `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3,oneof" json:"request_id,omitempty"`
	HttpErrorCode     *int32                 `protobuf:"varint,6,opt,name=http_error_code,json=httpErrorCode,proto3,oneof" json:"http_error_code,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AdRequestEvent) Reset() {
	*x = AdRequestEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdRequestEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdRequestEvent) ProtoMessage() {}

func (x *AdRequestEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdRequestEvent.ProtoReflect.Descriptor instead.
func (*AdRequestEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{26}
}

func (x *AdRequestEvent) GetFeatureIdentifier() string {
	if x != nil && x.FeatureIdentifier != nil {
		return *x.FeatureIdentifier
	}
	return ""
}

func (x *AdRequestEvent) GetRequestedAdType() string {
	if x != nil && x.RequestedAdType != nil {
		return *x.RequestedAdType
	}
	return ""
}

func (x *AdRequestEvent) GetLatencyMs() int64 {
	if x != nil && x.LatencyMs != nil {
		return *x.LatencyMs
	}
	return 0
}

func (x *AdRequestEvent) GetRequestedAdTypes() []string {
	if x != nil {
		return x.RequestedAdTypes
	}
	return nil
}

func (x *AdRequestEvent) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *AdRequestEvent) GetHttpErrorCode() int32 {
	if x != nil && x.HttpErrorCode != nil {
		return *x.HttpErrorCode
	}
	return 0
}

type AdOpportunityEvent struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TriggerId         *string                `protobuf:"bytes,1,opt,name=trigger_id,json=triggerId,proto3,oneof" json:"trigger_id,omitempty"`
	TriggerType       *string                `protobuf:"bytes,2,opt,name=trigger_type,json=triggerType,proto3,oneof" json:"trigger_type,omitempty"`
	DecisionRequestId *string                `protobuf:"bytes,3,opt,name=decision_request_id,json=decisionRequestId,proto3,oneof" json:"decision_request_id,omitempty"`
	TriggerState      *string                `protobuf:"bytes,4,opt,name=trigger_state,json=triggerState,proto3,oneof" json:"trigger_state,omitempty"`
	FocusState        *bool                  `protobuf:"varint,5,opt,name=focus_state,json=focusState,proto3,oneof" json:"focus_state,omitempty"`
	ContentUri        *string                `protobuf:"bytes,6,opt,name=content_uri,json=contentUri,proto3,oneof" json:"content_uri,omitempty"`
	PlaybackId        *string                `protobuf:"bytes,7,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	RequestId         *string                `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3,oneof" json:"request_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AdOpportunityEvent) Reset() {
	*x = AdOpportunityEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdOpportunityEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdOpportunityEvent) ProtoMessage() {}

func (x *AdOpportunityEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdOpportunityEvent.ProtoReflect.Descriptor instead.
func (*AdOpportunityEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{27}
}

func (x *AdOpportunityEvent) GetTriggerId() string {
	if x != nil && x.TriggerId != nil {
		return *x.TriggerId
	}
	return ""
}

func (x *AdOpportunityEvent) GetTriggerType() string {
	if x != nil && x.TriggerType != nil {
		return *x.TriggerType
	}
	return ""
}

func (x *AdOpportunityEvent) GetDecisionRequestId() string {
	if x != nil && x.DecisionRequestId != nil {
		return *x.DecisionRequestId
	}
	return ""
}

func (x *AdOpportunityEvent) GetTriggerState() string {
	if x != nil && x.TriggerState != nil {
		return *x.TriggerState
	}
	return ""
}

func (x *AdOpportunityEvent) GetFocusState() bool {
	if x != nil && x.FocusState != nil {
		return *x.FocusState
	}
	return false
}

func (x *AdOpportunityEvent) GetContentUri() string {
	if x != nil && x.ContentUri != nil {
		return *x.ContentUri
	}
	return ""
}

func (x *AdOpportunityEvent) GetPlaybackId() string {
	if x != nil && x.PlaybackId != nil {
		return *x.PlaybackId
	}
	return ""
}

func (x *AdOpportunityEvent) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

type AdSlotEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *string                `protobuf:"bytes,1,opt,name=event,proto3,oneof" json:"event,omitempty"`
	AdId          *string                `protobuf:"bytes,2,opt,name=ad_id,json=adId,proto3,oneof" json:"ad_id,omitempty"`
	LineitemId    *string                `protobuf:"bytes,3,opt,name=lineitem_id,json=lineitemId,proto3,oneof" json:"lineitem_id,omitempty"`
	CreativeId    *string                `protobuf:"bytes,4,opt,name=creative_id,json=creativeId,proto3,oneof" json:"creative_id,omitempty"`
	Slot          *string                `protobuf:"bytes,5,opt,name=slot,proto3,oneof" json:"slot,omitempty"`
	Format        *string                `protobuf:"bytes,6,opt,name=format,proto3,oneof" json:"format,omitempty"`
	InFocus       *bool                  `protobuf:"varint,7,opt,name=in_focus,json=inFocus,proto3,oneof" json:"in_focus,omitempty"`
	AppStartupId  *string                `protobuf:"bytes,8,opt,name=app_startup_id,json=appStartupId,proto3,oneof" json:"app_startup_id,omitempty"`
	RequestId     *string                `protobuf:"bytes,9,opt,name=request_id,json=requestId,proto3,oneof" json:"request_id,omitempty"`
	Reason        *string                `protobuf:"bytes,10,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdSlotEvent) Reset() {
	*x = AdSlotEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdSlotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdSlotEvent) ProtoMessage() {}

func (x *AdSlotEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdSlotEvent.ProtoReflect.Descriptor instead.
func (*AdSlotEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{28}
}

func (x *AdSlotEvent) GetEvent() string {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return ""
}

func (x *AdSlotEvent) GetAdId() string {
	if x != nil && x.AdId != nil {
		return *x.AdId
	}
	return ""
}

func (x *AdSlotEvent) GetLineitemId() string {
	if x != nil && x.LineitemId != nil {
		return *x.LineitemId
	}
	return ""
}

func (x *AdSlotEvent) GetCreativeId() string {
	if x != nil && x.CreativeId != nil {
		return *x.CreativeId
	}
	return ""
}

func (x *AdSlotEvent) GetSlot() string {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return ""
}

func (x *AdSlotEvent) GetFormat() string {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return ""
}

func (x *AdSlotEvent) GetInFocus() bool {
	if x != nil && x.InFocus != nil {
		return *x.InFocus
	}
	return false
}

func (x *AdSlotEvent) GetAppStartupId() string {
	if x != nil && x.AppStartupId != nil {
		return *x.AppStartupId
	}
	return ""
}

func (x *AdSlotEvent) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *AdSlotEvent) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

type AmazonWakeUpTime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DelayToOnline *int64                 `protobuf:"varint,1,opt,name=delay_to_online,json=delayToOnline,proto3,oneof" json:"delay_to_online,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AmazonWakeUpTime) Reset() {
	*x = AmazonWakeUpTime{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AmazonWakeUpTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmazonWakeUpTime) ProtoMessage() {}

func (x *AmazonWakeUpTime) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmazonWakeUpTime.ProtoReflect.Descriptor instead.
func (*AmazonWakeUpTime) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{29}
}

func (x *AmazonWakeUpTime) GetDelayToOnline() int64 {
	if x != nil && x.DelayToOnline != nil {
		return *x.DelayToOnline
	}
	return 0
}

type AudioDriverInfo struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	DriverName           *string                `protobuf:"bytes,1,opt,name=driver_name,json=driverName,proto3,oneof" json:"driver_name,omitempty"`
	OutputDeviceName     *string                `protobuf:"bytes,2,opt,name=output_device_name,json=outputDeviceName,proto3,oneof" json:"output_device_name,omitempty"`
	OutputDeviceCategory *string                `protobuf:"bytes,3,opt,name=output_device_category,json=outputDeviceCategory,proto3,oneof" json:"output_device_category,omitempty"`
	Reason               *string                `protobuf:"bytes,4,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AudioDriverInfo) Reset() {
	*x = AudioDriverInfo{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioDriverInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioDriverInfo) ProtoMessage() {}

func (x *AudioDriverInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioDriverInfo.ProtoReflect.Descriptor instead.
func (*AudioDriverInfo) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{30}
}

func (x *AudioDriverInfo) GetDriverName() string {
	if x != nil && x.DriverName != nil {
		return *x.DriverName
	}
	return ""
}

func (x *AudioDriverInfo) GetOutputDeviceName() string {
	if x != nil && x.OutputDeviceName != nil {
		return *x.OutputDeviceName
	}
	return ""
}

func (x *AudioDriverInfo) GetOutputDeviceCategory() string {
	if x != nil && x.OutputDeviceCategory != nil {
		return *x.OutputDeviceCategory
	}
	return ""
}

func (x *AudioDriverInfo) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

type AudioIndexRepairReport struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	TracksNumAddedAudio       *int64                 `protobuf:"varint,1,opt,name=tracks_num_added_audio,json=tracksNumAddedAudio,proto3,oneof" json:"tracks_num_added_audio,omitempty"`
	TracksNumInMdata          *int64                 `protobuf:"varint,2,opt,name=tracks_num_in_mdata,json=tracksNumInMdata,proto3,oneof" json:"tracks_num_in_mdata,omitempty"`
	TracksNumParseError       *int64                 `protobuf:"varint,3,opt,name=tracks_num_parse_error,json=tracksNumParseError,proto3,oneof" json:"tracks_num_parse_error,omitempty"`
	TracksNumMissingAudioId   *int64                 `protobuf:"varint,4,opt,name=tracks_num_missing_audio_id,json=tracksNumMissingAudioId,proto3,oneof" json:"tracks_num_missing_audio_id,omitempty"`
	TracksNumWriteError       *int64                 `protobuf:"varint,5,opt,name=tracks_num_write_error,json=tracksNumWriteError,proto3,oneof" json:"tracks_num_write_error,omitempty"`
	EpisodesNumAddedAudio     *int64                 `protobuf:"varint,6,opt,name=episodes_num_added_audio,json=episodesNumAddedAudio,proto3,oneof" json:"episodes_num_added_audio,omitempty"`
	EpisodesNumInMdata        *int64                 `protobuf:"varint,7,opt,name=episodes_num_in_mdata,json=episodesNumInMdata,proto3,oneof" json:"episodes_num_in_mdata,omitempty"`
	EpisodesNumParseError     *int64                 `protobuf:"varint,8,opt,name=episodes_num_parse_error,json=episodesNumParseError,proto3,oneof" json:"episodes_num_parse_error,omitempty"`
	EpisodesNumMissingAudioId *int64                 `protobuf:"varint,9,opt,name=episodes_num_missing_audio_id,json=episodesNumMissingAudioId,proto3,oneof" json:"episodes_num_missing_audio_id,omitempty"`
	EpisodesNumWriteError     *int64                 `protobuf:"varint,10,opt,name=episodes_num_write_error,json=episodesNumWriteError,proto3,oneof" json:"episodes_num_write_error,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *AudioIndexRepairReport) Reset() {
	*x = AudioIndexRepairReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioIndexRepairReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioIndexRepairReport) ProtoMessage() {}

func (x *AudioIndexRepairReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioIndexRepairReport.ProtoReflect.Descriptor instead.
func (*AudioIndexRepairReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{31}
}

func (x *AudioIndexRepairReport) GetTracksNumAddedAudio() int64 {
	if x != nil && x.TracksNumAddedAudio != nil {
		return *x.TracksNumAddedAudio
	}
	return 0
}

func (x *AudioIndexRepairReport) GetTracksNumInMdata() int64 {
	if x != nil && x.TracksNumInMdata != nil {
		return *x.TracksNumInMdata
	}
	return 0
}

func (x *AudioIndexRepairReport) GetTracksNumParseError() int64 {
	if x != nil && x.TracksNumParseError != nil {
		return *x.TracksNumParseError
	}
	return 0
}

func (x *AudioIndexRepairReport) GetTracksNumMissingAudioId() int64 {
	if x != nil && x.TracksNumMissingAudioId != nil {
		return *x.TracksNumMissingAudioId
	}
	return 0
}

func (x *AudioIndexRepairReport) GetTracksNumWriteError() int64 {
	if x != nil && x.TracksNumWriteError != nil {
		return *x.TracksNumWriteError
	}
	return 0
}

func (x *AudioIndexRepairReport) GetEpisodesNumAddedAudio() int64 {
	if x != nil && x.EpisodesNumAddedAudio != nil {
		return *x.EpisodesNumAddedAudio
	}
	return 0
}

func (x *AudioIndexRepairReport) GetEpisodesNumInMdata() int64 {
	if x != nil && x.EpisodesNumInMdata != nil {
		return *x.EpisodesNumInMdata
	}
	return 0
}

func (x *AudioIndexRepairReport) GetEpisodesNumParseError() int64 {
	if x != nil && x.EpisodesNumParseError != nil {
		return *x.EpisodesNumParseError
	}
	return 0
}

func (x *AudioIndexRepairReport) GetEpisodesNumMissingAudioId() int64 {
	if x != nil && x.EpisodesNumMissingAudioId != nil {
		return *x.EpisodesNumMissingAudioId
	}
	return 0
}

func (x *AudioIndexRepairReport) GetEpisodesNumWriteError() int64 {
	if x != nil && x.EpisodesNumWriteError != nil {
		return *x.EpisodesNumWriteError
	}
	return 0
}

type AudioOffliningSettingsReport struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	DefaultSyncBitrateProductState *string                `protobuf:"bytes,1,opt,name=default_sync_bitrate_product_state,json=defaultSyncBitrateProductState,proto3,oneof" json:"default_sync_bitrate_product_state,omitempty"`
	UserSelectedSyncBitrate        *int64                 `protobuf:"varint,2,opt,name=user_selected_sync_bitrate,json=userSelectedSyncBitrate,proto3,oneof" json:"user_selected_sync_bitrate,omitempty"`
	SyncBitrate                    *int64                 `protobuf:"varint,3,opt,name=sync_bitrate,json=syncBitrate,proto3,oneof" json:"sync_bitrate,omitempty"`
	SyncOverCellular               *bool                  `protobuf:"varint,4,opt,name=sync_over_cellular,json=syncOverCellular,proto3,oneof" json:"sync_over_cellular,omitempty"`
	PrimaryResourceType            *string                `protobuf:"bytes,5,opt,name=primary_resource_type,json=primaryResourceType,proto3,oneof" json:"primary_resource_type,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *AudioOffliningSettingsReport) Reset() {
	*x = AudioOffliningSettingsReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioOffliningSettingsReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioOffliningSettingsReport) ProtoMessage() {}

func (x *AudioOffliningSettingsReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioOffliningSettingsReport.ProtoReflect.Descriptor instead.
func (*AudioOffliningSettingsReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{32}
}

func (x *AudioOffliningSettingsReport) GetDefaultSyncBitrateProductState() string {
	if x != nil && x.DefaultSyncBitrateProductState != nil {
		return *x.DefaultSyncBitrateProductState
	}
	return ""
}

func (x *AudioOffliningSettingsReport) GetUserSelectedSyncBitrate() int64 {
	if x != nil && x.UserSelectedSyncBitrate != nil {
		return *x.UserSelectedSyncBitrate
	}
	return 0
}

func (x *AudioOffliningSettingsReport) GetSyncBitrate() int64 {
	if x != nil && x.SyncBitrate != nil {
		return *x.SyncBitrate
	}
	return 0
}

func (x *AudioOffliningSettingsReport) GetSyncOverCellular() bool {
	if x != nil && x.SyncOverCellular != nil {
		return *x.SyncOverCellular
	}
	return false
}

func (x *AudioOffliningSettingsReport) GetPrimaryResourceType() string {
	if x != nil && x.PrimaryResourceType != nil {
		return *x.PrimaryResourceType
	}
	return ""
}

type AudioSettingsReport struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	OfflineMode                    *bool                  `protobuf:"varint,1,opt,name=offline_mode,json=offlineMode,proto3,oneof" json:"offline_mode,omitempty"`
	DefaultPlayBitrateProductState *string                `protobuf:"bytes,2,opt,name=default_play_bitrate_product_state,json=defaultPlayBitrateProductState,proto3,oneof" json:"default_play_bitrate_product_state,omitempty"`
	UserSelectedBitrate            *int64                 `protobuf:"varint,3,opt,name=user_selected_bitrate,json=userSelectedBitrate,proto3,oneof" json:"user_selected_bitrate,omitempty"`
	PlayBitrate                    *int64                 `protobuf:"varint,4,opt,name=play_bitrate,json=playBitrate,proto3,oneof" json:"play_bitrate,omitempty"`
	LowBitrateOnCellular           *bool                  `protobuf:"varint,5,opt,name=low_bitrate_on_cellular,json=lowBitrateOnCellular,proto3,oneof" json:"low_bitrate_on_cellular,omitempty"`
	DefaultSyncBitrateProductState *string                `protobuf:"bytes,6,opt,name=default_sync_bitrate_product_state,json=defaultSyncBitrateProductState,proto3,oneof" json:"default_sync_bitrate_product_state,omitempty"`
	UserSelectedSyncBitrate        *int64                 `protobuf:"varint,7,opt,name=user_selected_sync_bitrate,json=userSelectedSyncBitrate,proto3,oneof" json:"user_selected_sync_bitrate,omitempty"`
	SyncBitrate                    *int64                 `protobuf:"varint,8,opt,name=sync_bitrate,json=syncBitrate,proto3,oneof" json:"sync_bitrate,omitempty"`
	SyncOverCellular               *bool                  `protobuf:"varint,9,opt,name=sync_over_cellular,json=syncOverCellular,proto3,oneof" json:"sync_over_cellular,omitempty"`
	EnableGaplessProductState      *string                `protobuf:"bytes,10,opt,name=enable_gapless_product_state,json=enableGaplessProductState,proto3,oneof" json:"enable_gapless_product_state,omitempty"`
	EnableGapless                  *bool                  `protobuf:"varint,11,opt,name=enable_gapless,json=enableGapless,proto3,oneof" json:"enable_gapless,omitempty"`
	EnableCrossfadeProductState    *string                `protobuf:"bytes,12,opt,name=enable_crossfade_product_state,json=enableCrossfadeProductState,proto3,oneof" json:"enable_crossfade_product_state,omitempty"`
	EnableCrossfade                *bool                  `protobuf:"varint,13,opt,name=enable_crossfade,json=enableCrossfade,proto3,oneof" json:"enable_crossfade,omitempty"`
	CrossfadeTime                  *int64                 `protobuf:"varint,14,opt,name=crossfade_time,json=crossfadeTime,proto3,oneof" json:"crossfade_time,omitempty"`
	EnableNormalization            *bool                  `protobuf:"varint,15,opt,name=enable_normalization,json=enableNormalization,proto3,oneof" json:"enable_normalization,omitempty"`
	PlaybackSpeed                  *int64                 `protobuf:"varint,16,opt,name=playback_speed,json=playbackSpeed,proto3,oneof" json:"playback_speed,omitempty"`
	AudioLoudnessLevel             *string                `protobuf:"bytes,17,opt,name=audio_loudness_level,json=audioLoudnessLevel,proto3,oneof" json:"audio_loudness_level,omitempty"`
	EnableAutomix                  *bool                  `protobuf:"varint,18,opt,name=enable_automix,json=enableAutomix,proto3,oneof" json:"enable_automix,omitempty"`
	EnableSilenceTrimmer           *bool                  `protobuf:"varint,19,opt,name=enable_silence_trimmer,json=enableSilenceTrimmer,proto3,oneof" json:"enable_silence_trimmer,omitempty"`
	EnableMonoDownmixer            *bool                  `protobuf:"varint,20,opt,name=enable_mono_downmixer,json=enableMonoDownmixer,proto3,oneof" json:"enable_mono_downmixer,omitempty"`
	SendReason                     *string                `protobuf:"bytes,21,opt,name=send_reason,json=sendReason,proto3,oneof" json:"send_reason,omitempty"`
	ChangeList                     []string               `protobuf:"bytes,22,rep,name=change_list,json=changeList,proto3" json:"change_list,omitempty"`
	EnableEqualizer                *bool                  `protobuf:"varint,23,opt,name=enable_equalizer,json=enableEqualizer,proto3,oneof" json:"enable_equalizer,omitempty"`
	EnableDynamicNormalizer        *bool                  `protobuf:"varint,24,opt,name=enable_dynamic_normalizer,json=enableDynamicNormalizer,proto3,oneof" json:"enable_dynamic_normalizer,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *AudioSettingsReport) Reset() {
	*x = AudioSettingsReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioSettingsReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioSettingsReport) ProtoMessage() {}

func (x *AudioSettingsReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioSettingsReport.ProtoReflect.Descriptor instead.
func (*AudioSettingsReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{33}
}

func (x *AudioSettingsReport) GetOfflineMode() bool {
	if x != nil && x.OfflineMode != nil {
		return *x.OfflineMode
	}
	return false
}

func (x *AudioSettingsReport) GetDefaultPlayBitrateProductState() string {
	if x != nil && x.DefaultPlayBitrateProductState != nil {
		return *x.DefaultPlayBitrateProductState
	}
	return ""
}

func (x *AudioSettingsReport) GetUserSelectedBitrate() int64 {
	if x != nil && x.UserSelectedBitrate != nil {
		return *x.UserSelectedBitrate
	}
	return 0
}

func (x *AudioSettingsReport) GetPlayBitrate() int64 {
	if x != nil && x.PlayBitrate != nil {
		return *x.PlayBitrate
	}
	return 0
}

func (x *AudioSettingsReport) GetLowBitrateOnCellular() bool {
	if x != nil && x.LowBitrateOnCellular != nil {
		return *x.LowBitrateOnCellular
	}
	return false
}

func (x *AudioSettingsReport) GetDefaultSyncBitrateProductState() string {
	if x != nil && x.DefaultSyncBitrateProductState != nil {
		return *x.DefaultSyncBitrateProductState
	}
	return ""
}

func (x *AudioSettingsReport) GetUserSelectedSyncBitrate() int64 {
	if x != nil && x.UserSelectedSyncBitrate != nil {
		return *x.UserSelectedSyncBitrate
	}
	return 0
}

func (x *AudioSettingsReport) GetSyncBitrate() int64 {
	if x != nil && x.SyncBitrate != nil {
		return *x.SyncBitrate
	}
	return 0
}

func (x *AudioSettingsReport) GetSyncOverCellular() bool {
	if x != nil && x.SyncOverCellular != nil {
		return *x.SyncOverCellular
	}
	return false
}

func (x *AudioSettingsReport) GetEnableGaplessProductState() string {
	if x != nil && x.EnableGaplessProductState != nil {
		return *x.EnableGaplessProductState
	}
	return ""
}

func (x *AudioSettingsReport) GetEnableGapless() bool {
	if x != nil && x.EnableGapless != nil {
		return *x.EnableGapless
	}
	return false
}

func (x *AudioSettingsReport) GetEnableCrossfadeProductState() string {
	if x != nil && x.EnableCrossfadeProductState != nil {
		return *x.EnableCrossfadeProductState
	}
	return ""
}

func (x *AudioSettingsReport) GetEnableCrossfade() bool {
	if x != nil && x.EnableCrossfade != nil {
		return *x.EnableCrossfade
	}
	return false
}

func (x *AudioSettingsReport) GetCrossfadeTime() int64 {
	if x != nil && x.CrossfadeTime != nil {
		return *x.CrossfadeTime
	}
	return 0
}

func (x *AudioSettingsReport) GetEnableNormalization() bool {
	if x != nil && x.EnableNormalization != nil {
		return *x.EnableNormalization
	}
	return false
}

func (x *AudioSettingsReport) GetPlaybackSpeed() int64 {
	if x != nil && x.PlaybackSpeed != nil {
		return *x.PlaybackSpeed
	}
	return 0
}

func (x *AudioSettingsReport) GetAudioLoudnessLevel() string {
	if x != nil && x.AudioLoudnessLevel != nil {
		return *x.AudioLoudnessLevel
	}
	return ""
}

func (x *AudioSettingsReport) GetEnableAutomix() bool {
	if x != nil && x.EnableAutomix != nil {
		return *x.EnableAutomix
	}
	return false
}

func (x *AudioSettingsReport) GetEnableSilenceTrimmer() bool {
	if x != nil && x.EnableSilenceTrimmer != nil {
		return *x.EnableSilenceTrimmer
	}
	return false
}

func (x *AudioSettingsReport) GetEnableMonoDownmixer() bool {
	if x != nil && x.EnableMonoDownmixer != nil {
		return *x.EnableMonoDownmixer
	}
	return false
}

func (x *AudioSettingsReport) GetSendReason() string {
	if x != nil && x.SendReason != nil {
		return *x.SendReason
	}
	return ""
}

func (x *AudioSettingsReport) GetChangeList() []string {
	if x != nil {
		return x.ChangeList
	}
	return nil
}

func (x *AudioSettingsReport) GetEnableEqualizer() bool {
	if x != nil && x.EnableEqualizer != nil {
		return *x.EnableEqualizer
	}
	return false
}

func (x *AudioSettingsReport) GetEnableDynamicNormalizer() bool {
	if x != nil && x.EnableDynamicNormalizer != nil {
		return *x.EnableDynamicNormalizer
	}
	return false
}

type AudioStreamingSettingsReport struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	DefaultPlayBitrateProductState  *string                `protobuf:"bytes,1,opt,name=default_play_bitrate_product_state,json=defaultPlayBitrateProductState,proto3,oneof" json:"default_play_bitrate_product_state,omitempty"`
	UserSelectedPlayBitrateCellular *int64                 `protobuf:"varint,2,opt,name=user_selected_play_bitrate_cellular,json=userSelectedPlayBitrateCellular,proto3,oneof" json:"user_selected_play_bitrate_cellular,omitempty"`
	UserSelectedPlayBitrateWifi     *int64                 `protobuf:"varint,3,opt,name=user_selected_play_bitrate_wifi,json=userSelectedPlayBitrateWifi,proto3,oneof" json:"user_selected_play_bitrate_wifi,omitempty"`
	PlayBitrateCellular             *int64                 `protobuf:"varint,4,opt,name=play_bitrate_cellular,json=playBitrateCellular,proto3,oneof" json:"play_bitrate_cellular,omitempty"`
	PlayBitrateWifi                 *int64                 `protobuf:"varint,5,opt,name=play_bitrate_wifi,json=playBitrateWifi,proto3,oneof" json:"play_bitrate_wifi,omitempty"`
	AllowDowngrade                  *bool                  `protobuf:"varint,6,opt,name=allow_downgrade,json=allowDowngrade,proto3,oneof" json:"allow_downgrade,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *AudioStreamingSettingsReport) Reset() {
	*x = AudioStreamingSettingsReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioStreamingSettingsReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioStreamingSettingsReport) ProtoMessage() {}

func (x *AudioStreamingSettingsReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioStreamingSettingsReport.ProtoReflect.Descriptor instead.
func (*AudioStreamingSettingsReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{34}
}

func (x *AudioStreamingSettingsReport) GetDefaultPlayBitrateProductState() string {
	if x != nil && x.DefaultPlayBitrateProductState != nil {
		return *x.DefaultPlayBitrateProductState
	}
	return ""
}

func (x *AudioStreamingSettingsReport) GetUserSelectedPlayBitrateCellular() int64 {
	if x != nil && x.UserSelectedPlayBitrateCellular != nil {
		return *x.UserSelectedPlayBitrateCellular
	}
	return 0
}

func (x *AudioStreamingSettingsReport) GetUserSelectedPlayBitrateWifi() int64 {
	if x != nil && x.UserSelectedPlayBitrateWifi != nil {
		return *x.UserSelectedPlayBitrateWifi
	}
	return 0
}

func (x *AudioStreamingSettingsReport) GetPlayBitrateCellular() int64 {
	if x != nil && x.PlayBitrateCellular != nil {
		return *x.PlayBitrateCellular
	}
	return 0
}

func (x *AudioStreamingSettingsReport) GetPlayBitrateWifi() int64 {
	if x != nil && x.PlayBitrateWifi != nil {
		return *x.PlayBitrateWifi
	}
	return 0
}

func (x *AudioStreamingSettingsReport) GetAllowDowngrade() bool {
	if x != nil && x.AllowDowngrade != nil {
		return *x.AllowDowngrade
	}
	return false
}

type ClientCoreConnectActiveDeviceRace struct {
	state                            protoimpl.MessageState `protogen:"open.v1"`
	DeviceId                         *string                `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	StartedPlayingAtTimestamp        *int64                 `protobuf:"varint,2,opt,name=started_playing_at_timestamp,json=startedPlayingAtTimestamp,proto3,oneof" json:"started_playing_at_timestamp,omitempty"`
	ClusterActiveDeviceId            *string                `protobuf:"bytes,3,opt,name=cluster_active_device_id,json=clusterActiveDeviceId,proto3,oneof" json:"cluster_active_device_id,omitempty"`
	ClusterStartedPlayingAtTimestamp *int64                 `protobuf:"varint,4,opt,name=cluster_started_playing_at_timestamp,json=clusterStartedPlayingAtTimestamp,proto3,oneof" json:"cluster_started_playing_at_timestamp,omitempty"`
	IsPlaying                        *bool                  `protobuf:"varint,5,opt,name=is_playing,json=isPlaying,proto3,oneof" json:"is_playing,omitempty"`
	ClusterIsPlaying                 *bool                  `protobuf:"varint,6,opt,name=cluster_is_playing,json=clusterIsPlaying,proto3,oneof" json:"cluster_is_playing,omitempty"`
	HasBeenPlayingForMillis          *int64                 `protobuf:"varint,7,opt,name=has_been_playing_for_millis,json=hasBeenPlayingForMillis,proto3,oneof" json:"has_been_playing_for_millis,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ClientCoreConnectActiveDeviceRace) Reset() {
	*x = ClientCoreConnectActiveDeviceRace{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientCoreConnectActiveDeviceRace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCoreConnectActiveDeviceRace) ProtoMessage() {}

func (x *ClientCoreConnectActiveDeviceRace) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCoreConnectActiveDeviceRace.ProtoReflect.Descriptor instead.
func (*ClientCoreConnectActiveDeviceRace) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{35}
}

func (x *ClientCoreConnectActiveDeviceRace) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *ClientCoreConnectActiveDeviceRace) GetStartedPlayingAtTimestamp() int64 {
	if x != nil && x.StartedPlayingAtTimestamp != nil {
		return *x.StartedPlayingAtTimestamp
	}
	return 0
}

func (x *ClientCoreConnectActiveDeviceRace) GetClusterActiveDeviceId() string {
	if x != nil && x.ClusterActiveDeviceId != nil {
		return *x.ClusterActiveDeviceId
	}
	return ""
}

func (x *ClientCoreConnectActiveDeviceRace) GetClusterStartedPlayingAtTimestamp() int64 {
	if x != nil && x.ClusterStartedPlayingAtTimestamp != nil {
		return *x.ClusterStartedPlayingAtTimestamp
	}
	return 0
}

func (x *ClientCoreConnectActiveDeviceRace) GetIsPlaying() bool {
	if x != nil && x.IsPlaying != nil {
		return *x.IsPlaying
	}
	return false
}

func (x *ClientCoreConnectActiveDeviceRace) GetClusterIsPlaying() bool {
	if x != nil && x.ClusterIsPlaying != nil {
		return *x.ClusterIsPlaying
	}
	return false
}

func (x *ClientCoreConnectActiveDeviceRace) GetHasBeenPlayingForMillis() int64 {
	if x != nil && x.HasBeenPlayingForMillis != nil {
		return *x.HasBeenPlayingForMillis
	}
	return 0
}

type ClientCoreConnectCommand struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	CommandType               *string                `protobuf:"bytes,1,opt,name=command_type,json=commandType,proto3,oneof" json:"command_type,omitempty"`
	Result                    *string                `protobuf:"bytes,2,opt,name=result,proto3,oneof" json:"result,omitempty"`
	Duration                  *int64                 `protobuf:"varint,3,opt,name=duration,proto3,oneof" json:"duration,omitempty"`
	InteractionIds            *string                `protobuf:"bytes,4,opt,name=interaction_ids,json=interactionIds,proto3,oneof" json:"interaction_ids,omitempty"`
	HttpResponse              *string                `protobuf:"bytes,5,opt,name=http_response,json=httpResponse,proto3,oneof" json:"http_response,omitempty"`
	HttpStatusCode            *int32                 `protobuf:"varint,6,opt,name=http_status_code,json=httpStatusCode,proto3,oneof" json:"http_status_code,omitempty"`
	ContextPlayerErrorMessage *string                `protobuf:"bytes,7,opt,name=context_player_error_message,json=contextPlayerErrorMessage,proto3,oneof" json:"context_player_error_message,omitempty"`
	HttpClientError           *string                `protobuf:"bytes,8,opt,name=http_client_error,json=httpClientError,proto3,oneof" json:"http_client_error,omitempty"`
	IntentId                  *string                `protobuf:"bytes,9,opt,name=intent_id,json=intentId,proto3,oneof" json:"intent_id,omitempty"`
	CommandSizeBytes          *int32                 `protobuf:"varint,10,opt,name=command_size_bytes,json=commandSizeBytes,proto3,oneof" json:"command_size_bytes,omitempty"`
	AckDuration               *int64                 `protobuf:"varint,11,opt,name=ack_duration,json=ackDuration,proto3,oneof" json:"ack_duration,omitempty"`
	TargetDeviceId            *string                `protobuf:"bytes,12,opt,name=target_device_id,json=targetDeviceId,proto3,oneof" json:"target_device_id,omitempty"`
	TargetDeviceBrand         *string                `protobuf:"bytes,13,opt,name=target_device_brand,json=targetDeviceBrand,proto3,oneof" json:"target_device_brand,omitempty"`
	TargetDeviceModel         *string                `protobuf:"bytes,14,opt,name=target_device_model,json=targetDeviceModel,proto3,oneof" json:"target_device_model,omitempty"`
	TargetDeviceClientId      *string                `protobuf:"bytes,15,opt,name=target_device_client_id,json=targetDeviceClientId,proto3,oneof" json:"target_device_client_id,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ClientCoreConnectCommand) Reset() {
	*x = ClientCoreConnectCommand{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientCoreConnectCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCoreConnectCommand) ProtoMessage() {}

func (x *ClientCoreConnectCommand) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCoreConnectCommand.ProtoReflect.Descriptor instead.
func (*ClientCoreConnectCommand) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{36}
}

func (x *ClientCoreConnectCommand) GetCommandType() string {
	if x != nil && x.CommandType != nil {
		return *x.CommandType
	}
	return ""
}

func (x *ClientCoreConnectCommand) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

func (x *ClientCoreConnectCommand) GetDuration() int64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *ClientCoreConnectCommand) GetInteractionIds() string {
	if x != nil && x.InteractionIds != nil {
		return *x.InteractionIds
	}
	return ""
}

func (x *ClientCoreConnectCommand) GetHttpResponse() string {
	if x != nil && x.HttpResponse != nil {
		return *x.HttpResponse
	}
	return ""
}

func (x *ClientCoreConnectCommand) GetHttpStatusCode() int32 {
	if x != nil && x.HttpStatusCode != nil {
		return *x.HttpStatusCode
	}
	return 0
}

func (x *ClientCoreConnectCommand) GetContextPlayerErrorMessage() string {
	if x != nil && x.ContextPlayerErrorMessage != nil {
		return *x.ContextPlayerErrorMessage
	}
	return ""
}

func (x *ClientCoreConnectCommand) GetHttpClientError() string {
	if x != nil && x.HttpClientError != nil {
		return *x.HttpClientError
	}
	return ""
}

func (x *ClientCoreConnectCommand) GetIntentId() string {
	if x != nil && x.IntentId != nil {
		return *x.IntentId
	}
	return ""
}

func (x *ClientCoreConnectCommand) GetCommandSizeBytes() int32 {
	if x != nil && x.CommandSizeBytes != nil {
		return *x.CommandSizeBytes
	}
	return 0
}

func (x *ClientCoreConnectCommand) GetAckDuration() int64 {
	if x != nil && x.AckDuration != nil {
		return *x.AckDuration
	}
	return 0
}

func (x *ClientCoreConnectCommand) GetTargetDeviceId() string {
	if x != nil && x.TargetDeviceId != nil {
		return *x.TargetDeviceId
	}
	return ""
}

func (x *ClientCoreConnectCommand) GetTargetDeviceBrand() string {
	if x != nil && x.TargetDeviceBrand != nil {
		return *x.TargetDeviceBrand
	}
	return ""
}

func (x *ClientCoreConnectCommand) GetTargetDeviceModel() string {
	if x != nil && x.TargetDeviceModel != nil {
		return *x.TargetDeviceModel
	}
	return ""
}

func (x *ClientCoreConnectCommand) GetTargetDeviceClientId() string {
	if x != nil && x.TargetDeviceClientId != nil {
		return *x.TargetDeviceClientId
	}
	return ""
}

type ClientCoreConnectPlayCommand struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ObserverDuration *int64                 `protobuf:"varint,1,opt,name=observer_duration,json=observerDuration,proto3,oneof" json:"observer_duration,omitempty"`
	StateDuration    *int64                 `protobuf:"varint,2,opt,name=state_duration,json=stateDuration,proto3,oneof" json:"state_duration,omitempty"`
	IntentId         *string                `protobuf:"bytes,3,opt,name=intent_id,json=intentId,proto3,oneof" json:"intent_id,omitempty"`
	ContextUrl       *string                `protobuf:"bytes,4,opt,name=context_url,json=contextUrl,proto3,oneof" json:"context_url,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ClientCoreConnectPlayCommand) Reset() {
	*x = ClientCoreConnectPlayCommand{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientCoreConnectPlayCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCoreConnectPlayCommand) ProtoMessage() {}

func (x *ClientCoreConnectPlayCommand) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCoreConnectPlayCommand.ProtoReflect.Descriptor instead.
func (*ClientCoreConnectPlayCommand) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{37}
}

func (x *ClientCoreConnectPlayCommand) GetObserverDuration() int64 {
	if x != nil && x.ObserverDuration != nil {
		return *x.ObserverDuration
	}
	return 0
}

func (x *ClientCoreConnectPlayCommand) GetStateDuration() int64 {
	if x != nil && x.StateDuration != nil {
		return *x.StateDuration
	}
	return 0
}

func (x *ClientCoreConnectPlayCommand) GetIntentId() string {
	if x != nil && x.IntentId != nil {
		return *x.IntentId
	}
	return ""
}

func (x *ClientCoreConnectPlayCommand) GetContextUrl() string {
	if x != nil && x.ContextUrl != nil {
		return *x.ContextUrl
	}
	return ""
}

type ClientLocale struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ClientDefaultLocale *string                `protobuf:"bytes,1,opt,name=client_default_locale,json=clientDefaultLocale,proto3,oneof" json:"client_default_locale,omitempty"`
	UserSpecifiedLocale *string                `protobuf:"bytes,2,opt,name=user_specified_locale,json=userSpecifiedLocale,proto3,oneof" json:"user_specified_locale,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ClientLocale) Reset() {
	*x = ClientLocale{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientLocale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientLocale) ProtoMessage() {}

func (x *ClientLocale) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientLocale.ProtoReflect.Descriptor instead.
func (*ClientLocale) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{38}
}

func (x *ClientLocale) GetClientDefaultLocale() string {
	if x != nil && x.ClientDefaultLocale != nil {
		return *x.ClientDefaultLocale
	}
	return ""
}

func (x *ClientLocale) GetUserSpecifiedLocale() string {
	if x != nil && x.UserSpecifiedLocale != nil {
		return *x.UserSpecifiedLocale
	}
	return ""
}

type CollectionLevelDbInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Bucket              *string                `protobuf:"bytes,1,opt,name=bucket,proto3,oneof" json:"bucket,omitempty"`
	UseLeveldb          *bool                  `protobuf:"varint,2,opt,name=use_leveldb,json=useLeveldb,proto3,oneof" json:"use_leveldb,omitempty"`
	MigrationFromFileOk *bool                  `protobuf:"varint,3,opt,name=migration_from_file_ok,json=migrationFromFileOk,proto3,oneof" json:"migration_from_file_ok,omitempty"`
	IndexCheckOk        *bool                  `protobuf:"varint,4,opt,name=index_check_ok,json=indexCheckOk,proto3,oneof" json:"index_check_ok,omitempty"`
	LeveldbWorks        *bool                  `protobuf:"varint,5,opt,name=leveldb_works,json=leveldbWorks,proto3,oneof" json:"leveldb_works,omitempty"`
	AlreadyMigrated     *bool                  `protobuf:"varint,6,opt,name=already_migrated,json=alreadyMigrated,proto3,oneof" json:"already_migrated,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CollectionLevelDbInfo) Reset() {
	*x = CollectionLevelDbInfo{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionLevelDbInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionLevelDbInfo) ProtoMessage() {}

func (x *CollectionLevelDbInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionLevelDbInfo.ProtoReflect.Descriptor instead.
func (*CollectionLevelDbInfo) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{39}
}

func (x *CollectionLevelDbInfo) GetBucket() string {
	if x != nil && x.Bucket != nil {
		return *x.Bucket
	}
	return ""
}

func (x *CollectionLevelDbInfo) GetUseLeveldb() bool {
	if x != nil && x.UseLeveldb != nil {
		return *x.UseLeveldb
	}
	return false
}

func (x *CollectionLevelDbInfo) GetMigrationFromFileOk() bool {
	if x != nil && x.MigrationFromFileOk != nil {
		return *x.MigrationFromFileOk
	}
	return false
}

func (x *CollectionLevelDbInfo) GetIndexCheckOk() bool {
	if x != nil && x.IndexCheckOk != nil {
		return *x.IndexCheckOk
	}
	return false
}

func (x *CollectionLevelDbInfo) GetLeveldbWorks() bool {
	if x != nil && x.LeveldbWorks != nil {
		return *x.LeveldbWorks
	}
	return false
}

func (x *CollectionLevelDbInfo) GetAlreadyMigrated() bool {
	if x != nil && x.AlreadyMigrated != nil {
		return *x.AlreadyMigrated
	}
	return false
}

type CollectionOfflineControllerEmptyTrackList struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	LinkType                 *string                `protobuf:"bytes,1,opt,name=link_type,json=linkType,proto3,oneof" json:"link_type,omitempty"`
	ConsistentWithCollection *bool                  `protobuf:"varint,2,opt,name=consistent_with_collection,json=consistentWithCollection,proto3,oneof" json:"consistent_with_collection,omitempty"`
	CollectionSize           *int64                 `protobuf:"varint,3,opt,name=collection_size,json=collectionSize,proto3,oneof" json:"collection_size,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CollectionOfflineControllerEmptyTrackList) Reset() {
	*x = CollectionOfflineControllerEmptyTrackList{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionOfflineControllerEmptyTrackList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionOfflineControllerEmptyTrackList) ProtoMessage() {}

func (x *CollectionOfflineControllerEmptyTrackList) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionOfflineControllerEmptyTrackList.ProtoReflect.Descriptor instead.
func (*CollectionOfflineControllerEmptyTrackList) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{40}
}

func (x *CollectionOfflineControllerEmptyTrackList) GetLinkType() string {
	if x != nil && x.LinkType != nil {
		return *x.LinkType
	}
	return ""
}

func (x *CollectionOfflineControllerEmptyTrackList) GetConsistentWithCollection() bool {
	if x != nil && x.ConsistentWithCollection != nil {
		return *x.ConsistentWithCollection
	}
	return false
}

func (x *CollectionOfflineControllerEmptyTrackList) GetCollectionSize() int64 {
	if x != nil && x.CollectionSize != nil {
		return *x.CollectionSize
	}
	return 0
}

type ConfigurationApplied struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	LastRcsFetchTime          *int64                 `protobuf:"varint,1,opt,name=last_rcs_fetch_time,json=lastRcsFetchTime,proto3,oneof" json:"last_rcs_fetch_time,omitempty"`
	InstallationId            *string                `protobuf:"bytes,2,opt,name=installation_id,json=installationId,proto3,oneof" json:"installation_id,omitempty"`
	PolicyGroupIds            []int32                `protobuf:"varint,3,rep,packed,name=policy_group_ids,json=policyGroupIds,proto3" json:"policy_group_ids,omitempty"`
	ConfigurationAssignmentId *string                `protobuf:"bytes,4,opt,name=configuration_assignment_id,json=configurationAssignmentId,proto3,oneof" json:"configuration_assignment_id,omitempty"`
	RcClientId                *string                `protobuf:"bytes,5,opt,name=rc_client_id,json=rcClientId,proto3,oneof" json:"rc_client_id,omitempty"`
	RcClientVersion           *string                `protobuf:"bytes,6,opt,name=rc_client_version,json=rcClientVersion,proto3,oneof" json:"rc_client_version,omitempty"`
	Platform                  *string                `protobuf:"bytes,7,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
	FetchType                 *string                `protobuf:"bytes,8,opt,name=fetch_type,json=fetchType,proto3,oneof" json:"fetch_type,omitempty"`
	Identifiers               map[string]string      `protobuf:"bytes,9,rep,name=identifiers,proto3" json:"identifiers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ConfigurationApplied) Reset() {
	*x = ConfigurationApplied{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationApplied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationApplied) ProtoMessage() {}

func (x *ConfigurationApplied) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationApplied.ProtoReflect.Descriptor instead.
func (*ConfigurationApplied) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{41}
}

func (x *ConfigurationApplied) GetLastRcsFetchTime() int64 {
	if x != nil && x.LastRcsFetchTime != nil {
		return *x.LastRcsFetchTime
	}
	return 0
}

func (x *ConfigurationApplied) GetInstallationId() string {
	if x != nil && x.InstallationId != nil {
		return *x.InstallationId
	}
	return ""
}

func (x *ConfigurationApplied) GetPolicyGroupIds() []int32 {
	if x != nil {
		return x.PolicyGroupIds
	}
	return nil
}

func (x *ConfigurationApplied) GetConfigurationAssignmentId() string {
	if x != nil && x.ConfigurationAssignmentId != nil {
		return *x.ConfigurationAssignmentId
	}
	return ""
}

func (x *ConfigurationApplied) GetRcClientId() string {
	if x != nil && x.RcClientId != nil {
		return *x.RcClientId
	}
	return ""
}

func (x *ConfigurationApplied) GetRcClientVersion() string {
	if x != nil && x.RcClientVersion != nil {
		return *x.RcClientVersion
	}
	return ""
}

func (x *ConfigurationApplied) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *ConfigurationApplied) GetFetchType() string {
	if x != nil && x.FetchType != nil {
		return *x.FetchType
	}
	return ""
}

func (x *ConfigurationApplied) GetIdentifiers() map[string]string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type ConfigurationFetched struct {
	state                            protoimpl.MessageState `protogen:"open.v1"`
	LastRcsFetchTime                 *int64                 `protobuf:"varint,1,opt,name=last_rcs_fetch_time,json=lastRcsFetchTime,proto3,oneof" json:"last_rcs_fetch_time,omitempty"`
	InstallationId                   *string                `protobuf:"bytes,2,opt,name=installation_id,json=installationId,proto3,oneof" json:"installation_id,omitempty"`
	ConfigurationAssignmentId        *string                `protobuf:"bytes,3,opt,name=configuration_assignment_id,json=configurationAssignmentId,proto3,oneof" json:"configuration_assignment_id,omitempty"`
	PropertySetId                    *string                `protobuf:"bytes,4,opt,name=property_set_id,json=propertySetId,proto3,oneof" json:"property_set_id,omitempty"`
	AttributesSetId                  *string                `protobuf:"bytes,5,opt,name=attributes_set_id,json=attributesSetId,proto3,oneof" json:"attributes_set_id,omitempty"`
	RcClientId                       *string                `protobuf:"bytes,6,opt,name=rc_client_id,json=rcClientId,proto3,oneof" json:"rc_client_id,omitempty"`
	RcClientVersion                  *string                `protobuf:"bytes,7,opt,name=rc_client_version,json=rcClientVersion,proto3,oneof" json:"rc_client_version,omitempty"`
	RcSdkVersion                     *string                `protobuf:"bytes,8,opt,name=rc_sdk_version,json=rcSdkVersion,proto3,oneof" json:"rc_sdk_version,omitempty"`
	Platform                         *string                `protobuf:"bytes,9,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
	FetchType                        *string                `protobuf:"bytes,10,opt,name=fetch_type,json=fetchType,proto3,oneof" json:"fetch_type,omitempty"`
	Latency                          *int64                 `protobuf:"varint,11,opt,name=latency,proto3,oneof" json:"latency,omitempty"`
	PayloadSize                      *int64                 `protobuf:"varint,12,opt,name=payload_size,json=payloadSize,proto3,oneof" json:"payload_size,omitempty"`
	StatusCode                       *int32                 `protobuf:"varint,13,opt,name=status_code,json=statusCode,proto3,oneof" json:"status_code,omitempty"`
	ErrorReason                      *string                `protobuf:"bytes,14,opt,name=error_reason,json=errorReason,proto3,oneof" json:"error_reason,omitempty"`
	ErrorMessage                     *string                `protobuf:"bytes,15,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	ErrorReasonConfigurationResolve  *string                `protobuf:"bytes,16,opt,name=error_reason_configuration_resolve,json=errorReasonConfigurationResolve,proto3,oneof" json:"error_reason_configuration_resolve,omitempty"`
	ErrorMessageConfigurationResolve *string                `protobuf:"bytes,17,opt,name=error_message_configuration_resolve,json=errorMessageConfigurationResolve,proto3,oneof" json:"error_message_configuration_resolve,omitempty"`
	ErrorReasonAccountAttributes     *string                `protobuf:"bytes,18,opt,name=error_reason_account_attributes,json=errorReasonAccountAttributes,proto3,oneof" json:"error_reason_account_attributes,omitempty"`
	ErrorMessageAccountAttributes    *string                `protobuf:"bytes,19,opt,name=error_message_account_attributes,json=errorMessageAccountAttributes,proto3,oneof" json:"error_message_account_attributes,omitempty"`
	ErrorCodeAccountAttributes       *int32                 `protobuf:"varint,20,opt,name=error_code_account_attributes,json=errorCodeAccountAttributes,proto3,oneof" json:"error_code_account_attributes,omitempty"`
	ErrorCodeConfigurationResolve    *int32                 `protobuf:"varint,21,opt,name=error_code_configuration_resolve,json=errorCodeConfigurationResolve,proto3,oneof" json:"error_code_configuration_resolve,omitempty"`
	ProductStateKeyCount             *int32                 `protobuf:"varint,22,opt,name=product_state_key_count,json=productStateKeyCount,proto3,oneof" json:"product_state_key_count,omitempty"`
	Identifiers                      map[string]string      `protobuf:"bytes,23,rep,name=identifiers,proto3" json:"identifiers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ConfigurationFetched) Reset() {
	*x = ConfigurationFetched{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationFetched) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationFetched) ProtoMessage() {}

func (x *ConfigurationFetched) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationFetched.ProtoReflect.Descriptor instead.
func (*ConfigurationFetched) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{42}
}

func (x *ConfigurationFetched) GetLastRcsFetchTime() int64 {
	if x != nil && x.LastRcsFetchTime != nil {
		return *x.LastRcsFetchTime
	}
	return 0
}

func (x *ConfigurationFetched) GetInstallationId() string {
	if x != nil && x.InstallationId != nil {
		return *x.InstallationId
	}
	return ""
}

func (x *ConfigurationFetched) GetConfigurationAssignmentId() string {
	if x != nil && x.ConfigurationAssignmentId != nil {
		return *x.ConfigurationAssignmentId
	}
	return ""
}

func (x *ConfigurationFetched) GetPropertySetId() string {
	if x != nil && x.PropertySetId != nil {
		return *x.PropertySetId
	}
	return ""
}

func (x *ConfigurationFetched) GetAttributesSetId() string {
	if x != nil && x.AttributesSetId != nil {
		return *x.AttributesSetId
	}
	return ""
}

func (x *ConfigurationFetched) GetRcClientId() string {
	if x != nil && x.RcClientId != nil {
		return *x.RcClientId
	}
	return ""
}

func (x *ConfigurationFetched) GetRcClientVersion() string {
	if x != nil && x.RcClientVersion != nil {
		return *x.RcClientVersion
	}
	return ""
}

func (x *ConfigurationFetched) GetRcSdkVersion() string {
	if x != nil && x.RcSdkVersion != nil {
		return *x.RcSdkVersion
	}
	return ""
}

func (x *ConfigurationFetched) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *ConfigurationFetched) GetFetchType() string {
	if x != nil && x.FetchType != nil {
		return *x.FetchType
	}
	return ""
}

func (x *ConfigurationFetched) GetLatency() int64 {
	if x != nil && x.Latency != nil {
		return *x.Latency
	}
	return 0
}

func (x *ConfigurationFetched) GetPayloadSize() int64 {
	if x != nil && x.PayloadSize != nil {
		return *x.PayloadSize
	}
	return 0
}

func (x *ConfigurationFetched) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *ConfigurationFetched) GetErrorReason() string {
	if x != nil && x.ErrorReason != nil {
		return *x.ErrorReason
	}
	return ""
}

func (x *ConfigurationFetched) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

func (x *ConfigurationFetched) GetErrorReasonConfigurationResolve() string {
	if x != nil && x.ErrorReasonConfigurationResolve != nil {
		return *x.ErrorReasonConfigurationResolve
	}
	return ""
}

func (x *ConfigurationFetched) GetErrorMessageConfigurationResolve() string {
	if x != nil && x.ErrorMessageConfigurationResolve != nil {
		return *x.ErrorMessageConfigurationResolve
	}
	return ""
}

func (x *ConfigurationFetched) GetErrorReasonAccountAttributes() string {
	if x != nil && x.ErrorReasonAccountAttributes != nil {
		return *x.ErrorReasonAccountAttributes
	}
	return ""
}

func (x *ConfigurationFetched) GetErrorMessageAccountAttributes() string {
	if x != nil && x.ErrorMessageAccountAttributes != nil {
		return *x.ErrorMessageAccountAttributes
	}
	return ""
}

func (x *ConfigurationFetched) GetErrorCodeAccountAttributes() int32 {
	if x != nil && x.ErrorCodeAccountAttributes != nil {
		return *x.ErrorCodeAccountAttributes
	}
	return 0
}

func (x *ConfigurationFetched) GetErrorCodeConfigurationResolve() int32 {
	if x != nil && x.ErrorCodeConfigurationResolve != nil {
		return *x.ErrorCodeConfigurationResolve
	}
	return 0
}

func (x *ConfigurationFetched) GetProductStateKeyCount() int32 {
	if x != nil && x.ProductStateKeyCount != nil {
		return *x.ProductStateKeyCount
	}
	return 0
}

func (x *ConfigurationFetched) GetIdentifiers() map[string]string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type ConfigurationFetchedNonAuth struct {
	state                            protoimpl.MessageState `protogen:"open.v1"`
	LastRcsFetchTime                 *int64                 `protobuf:"varint,1,opt,name=last_rcs_fetch_time,json=lastRcsFetchTime,proto3,oneof" json:"last_rcs_fetch_time,omitempty"`
	InstallationId                   *string                `protobuf:"bytes,2,opt,name=installation_id,json=installationId,proto3,oneof" json:"installation_id,omitempty"`
	ConfigurationAssignmentId        *string                `protobuf:"bytes,3,opt,name=configuration_assignment_id,json=configurationAssignmentId,proto3,oneof" json:"configuration_assignment_id,omitempty"`
	PropertySetId                    *string                `protobuf:"bytes,4,opt,name=property_set_id,json=propertySetId,proto3,oneof" json:"property_set_id,omitempty"`
	AttributesSetId                  *string                `protobuf:"bytes,5,opt,name=attributes_set_id,json=attributesSetId,proto3,oneof" json:"attributes_set_id,omitempty"`
	RcClientId                       *string                `protobuf:"bytes,6,opt,name=rc_client_id,json=rcClientId,proto3,oneof" json:"rc_client_id,omitempty"`
	RcClientVersion                  *string                `protobuf:"bytes,7,opt,name=rc_client_version,json=rcClientVersion,proto3,oneof" json:"rc_client_version,omitempty"`
	RcSdkVersion                     *string                `protobuf:"bytes,8,opt,name=rc_sdk_version,json=rcSdkVersion,proto3,oneof" json:"rc_sdk_version,omitempty"`
	Platform                         *string                `protobuf:"bytes,9,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
	FetchType                        *string                `protobuf:"bytes,10,opt,name=fetch_type,json=fetchType,proto3,oneof" json:"fetch_type,omitempty"`
	Latency                          *int64                 `protobuf:"varint,11,opt,name=latency,proto3,oneof" json:"latency,omitempty"`
	PayloadSize                      *int64                 `protobuf:"varint,12,opt,name=payload_size,json=payloadSize,proto3,oneof" json:"payload_size,omitempty"`
	StatusCode                       *int32                 `protobuf:"varint,13,opt,name=status_code,json=statusCode,proto3,oneof" json:"status_code,omitempty"`
	ErrorReason                      *string                `protobuf:"bytes,14,opt,name=error_reason,json=errorReason,proto3,oneof" json:"error_reason,omitempty"`
	ErrorMessage                     *string                `protobuf:"bytes,15,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	ErrorReasonConfigurationResolve  *string                `protobuf:"bytes,16,opt,name=error_reason_configuration_resolve,json=errorReasonConfigurationResolve,proto3,oneof" json:"error_reason_configuration_resolve,omitempty"`
	ErrorMessageConfigurationResolve *string                `protobuf:"bytes,17,opt,name=error_message_configuration_resolve,json=errorMessageConfigurationResolve,proto3,oneof" json:"error_message_configuration_resolve,omitempty"`
	ErrorReasonAccountAttributes     *string                `protobuf:"bytes,18,opt,name=error_reason_account_attributes,json=errorReasonAccountAttributes,proto3,oneof" json:"error_reason_account_attributes,omitempty"`
	ErrorMessageAccountAttributes    *string                `protobuf:"bytes,19,opt,name=error_message_account_attributes,json=errorMessageAccountAttributes,proto3,oneof" json:"error_message_account_attributes,omitempty"`
	ErrorCodeAccountAttributes       *int32                 `protobuf:"varint,20,opt,name=error_code_account_attributes,json=errorCodeAccountAttributes,proto3,oneof" json:"error_code_account_attributes,omitempty"`
	ErrorCodeConfigurationResolve    *int32                 `protobuf:"varint,21,opt,name=error_code_configuration_resolve,json=errorCodeConfigurationResolve,proto3,oneof" json:"error_code_configuration_resolve,omitempty"`
	Identifiers                      map[string]string      `protobuf:"bytes,22,rep,name=identifiers,proto3" json:"identifiers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ConfigurationFetchedNonAuth) Reset() {
	*x = ConfigurationFetchedNonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigurationFetchedNonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationFetchedNonAuth) ProtoMessage() {}

func (x *ConfigurationFetchedNonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationFetchedNonAuth.ProtoReflect.Descriptor instead.
func (*ConfigurationFetchedNonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{43}
}

func (x *ConfigurationFetchedNonAuth) GetLastRcsFetchTime() int64 {
	if x != nil && x.LastRcsFetchTime != nil {
		return *x.LastRcsFetchTime
	}
	return 0
}

func (x *ConfigurationFetchedNonAuth) GetInstallationId() string {
	if x != nil && x.InstallationId != nil {
		return *x.InstallationId
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetConfigurationAssignmentId() string {
	if x != nil && x.ConfigurationAssignmentId != nil {
		return *x.ConfigurationAssignmentId
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetPropertySetId() string {
	if x != nil && x.PropertySetId != nil {
		return *x.PropertySetId
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetAttributesSetId() string {
	if x != nil && x.AttributesSetId != nil {
		return *x.AttributesSetId
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetRcClientId() string {
	if x != nil && x.RcClientId != nil {
		return *x.RcClientId
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetRcClientVersion() string {
	if x != nil && x.RcClientVersion != nil {
		return *x.RcClientVersion
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetRcSdkVersion() string {
	if x != nil && x.RcSdkVersion != nil {
		return *x.RcSdkVersion
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetFetchType() string {
	if x != nil && x.FetchType != nil {
		return *x.FetchType
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetLatency() int64 {
	if x != nil && x.Latency != nil {
		return *x.Latency
	}
	return 0
}

func (x *ConfigurationFetchedNonAuth) GetPayloadSize() int64 {
	if x != nil && x.PayloadSize != nil {
		return *x.PayloadSize
	}
	return 0
}

func (x *ConfigurationFetchedNonAuth) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *ConfigurationFetchedNonAuth) GetErrorReason() string {
	if x != nil && x.ErrorReason != nil {
		return *x.ErrorReason
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetErrorReasonConfigurationResolve() string {
	if x != nil && x.ErrorReasonConfigurationResolve != nil {
		return *x.ErrorReasonConfigurationResolve
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetErrorMessageConfigurationResolve() string {
	if x != nil && x.ErrorMessageConfigurationResolve != nil {
		return *x.ErrorMessageConfigurationResolve
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetErrorReasonAccountAttributes() string {
	if x != nil && x.ErrorReasonAccountAttributes != nil {
		return *x.ErrorReasonAccountAttributes
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetErrorMessageAccountAttributes() string {
	if x != nil && x.ErrorMessageAccountAttributes != nil {
		return *x.ErrorMessageAccountAttributes
	}
	return ""
}

func (x *ConfigurationFetchedNonAuth) GetErrorCodeAccountAttributes() int32 {
	if x != nil && x.ErrorCodeAccountAttributes != nil {
		return *x.ErrorCodeAccountAttributes
	}
	return 0
}

func (x *ConfigurationFetchedNonAuth) GetErrorCodeConfigurationResolve() int32 {
	if x != nil && x.ErrorCodeConfigurationResolve != nil {
		return *x.ErrorCodeConfigurationResolve
	}
	return 0
}

func (x *ConfigurationFetchedNonAuth) GetIdentifiers() map[string]string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type ConnectConnectivityError struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	SoftwareVersion       *string                `protobuf:"bytes,1,opt,name=software_version,json=softwareVersion,proto3,oneof" json:"software_version,omitempty"`
	Error                 *string                `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	ConnectionTypeInitial *string                `protobuf:"bytes,3,opt,name=connection_type_initial,json=connectionTypeInitial,proto3,oneof" json:"connection_type_initial,omitempty"`
	ConnectionTypeError   *string                `protobuf:"bytes,4,opt,name=connection_type_error,json=connectionTypeError,proto3,oneof" json:"connection_type_error,omitempty"`
	Reason                *string                `protobuf:"bytes,5,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ConnectConnectivityError) Reset() {
	*x = ConnectConnectivityError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectConnectivityError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectConnectivityError) ProtoMessage() {}

func (x *ConnectConnectivityError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectConnectivityError.ProtoReflect.Descriptor instead.
func (*ConnectConnectivityError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{44}
}

func (x *ConnectConnectivityError) GetSoftwareVersion() string {
	if x != nil && x.SoftwareVersion != nil {
		return *x.SoftwareVersion
	}
	return ""
}

func (x *ConnectConnectivityError) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *ConnectConnectivityError) GetConnectionTypeInitial() string {
	if x != nil && x.ConnectionTypeInitial != nil {
		return *x.ConnectionTypeInitial
	}
	return ""
}

func (x *ConnectConnectivityError) GetConnectionTypeError() string {
	if x != nil && x.ConnectionTypeError != nil {
		return *x.ConnectionTypeError
	}
	return ""
}

func (x *ConnectConnectivityError) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

type ConnectCredentialsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenType     *string                `protobuf:"bytes,1,opt,name=token_type,json=tokenType,proto3,oneof" json:"token_type,omitempty"`
	ClientId      *string                `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectCredentialsRequest) Reset() {
	*x = ConnectCredentialsRequest{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectCredentialsRequest) ProtoMessage() {}

func (x *ConnectCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectCredentialsRequest.ProtoReflect.Descriptor instead.
func (*ConnectCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{45}
}

func (x *ConnectCredentialsRequest) GetTokenType() string {
	if x != nil && x.TokenType != nil {
		return *x.TokenType
	}
	return ""
}

func (x *ConnectCredentialsRequest) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

type ConnectDeviceDiscovered struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	DeviceId                     *string                `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	DiscoverMethod               *string                `protobuf:"bytes,2,opt,name=discover_method,json=discoverMethod,proto3,oneof" json:"discover_method,omitempty"`
	DiscoveredDeviceId           *string                `protobuf:"bytes,3,opt,name=discovered_device_id,json=discoveredDeviceId,proto3,oneof" json:"discovered_device_id,omitempty"`
	DiscoveredDeviceType         *string                `protobuf:"bytes,4,opt,name=discovered_device_type,json=discoveredDeviceType,proto3,oneof" json:"discovered_device_type,omitempty"`
	DiscoveredLibraryVersion     *string                `protobuf:"bytes,5,opt,name=discovered_library_version,json=discoveredLibraryVersion,proto3,oneof" json:"discovered_library_version,omitempty"`
	DiscoveredBrandDisplayName   *string                `protobuf:"bytes,6,opt,name=discovered_brand_display_name,json=discoveredBrandDisplayName,proto3,oneof" json:"discovered_brand_display_name,omitempty"`
	DiscoveredModelDisplayName   *string                `protobuf:"bytes,7,opt,name=discovered_model_display_name,json=discoveredModelDisplayName,proto3,oneof" json:"discovered_model_display_name,omitempty"`
	DiscoveredClientId           *string                `protobuf:"bytes,8,opt,name=discovered_client_id,json=discoveredClientId,proto3,oneof" json:"discovered_client_id,omitempty"`
	DiscoveredProductId          *string                `protobuf:"bytes,9,opt,name=discovered_product_id,json=discoveredProductId,proto3,oneof" json:"discovered_product_id,omitempty"`
	DiscoveredDeviceAvailablilty *string                `protobuf:"bytes,10,opt,name=discovered_device_availablilty,json=discoveredDeviceAvailablilty,proto3,oneof" json:"discovered_device_availablilty,omitempty"`
	DiscoveredDevicePublicKey    *string                `protobuf:"bytes,11,opt,name=discovered_device_public_key,json=discoveredDevicePublicKey,proto3,oneof" json:"discovered_device_public_key,omitempty"`
	CapabilitiesResolved         *bool                  `protobuf:"varint,12,opt,name=capabilities_resolved,json=capabilitiesResolved,proto3,oneof" json:"capabilities_resolved,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *ConnectDeviceDiscovered) Reset() {
	*x = ConnectDeviceDiscovered{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectDeviceDiscovered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectDeviceDiscovered) ProtoMessage() {}

func (x *ConnectDeviceDiscovered) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectDeviceDiscovered.ProtoReflect.Descriptor instead.
func (*ConnectDeviceDiscovered) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{46}
}

func (x *ConnectDeviceDiscovered) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetDiscoverMethod() string {
	if x != nil && x.DiscoverMethod != nil {
		return *x.DiscoverMethod
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetDiscoveredDeviceId() string {
	if x != nil && x.DiscoveredDeviceId != nil {
		return *x.DiscoveredDeviceId
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetDiscoveredDeviceType() string {
	if x != nil && x.DiscoveredDeviceType != nil {
		return *x.DiscoveredDeviceType
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetDiscoveredLibraryVersion() string {
	if x != nil && x.DiscoveredLibraryVersion != nil {
		return *x.DiscoveredLibraryVersion
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetDiscoveredBrandDisplayName() string {
	if x != nil && x.DiscoveredBrandDisplayName != nil {
		return *x.DiscoveredBrandDisplayName
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetDiscoveredModelDisplayName() string {
	if x != nil && x.DiscoveredModelDisplayName != nil {
		return *x.DiscoveredModelDisplayName
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetDiscoveredClientId() string {
	if x != nil && x.DiscoveredClientId != nil {
		return *x.DiscoveredClientId
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetDiscoveredProductId() string {
	if x != nil && x.DiscoveredProductId != nil {
		return *x.DiscoveredProductId
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetDiscoveredDeviceAvailablilty() string {
	if x != nil && x.DiscoveredDeviceAvailablilty != nil {
		return *x.DiscoveredDeviceAvailablilty
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetDiscoveredDevicePublicKey() string {
	if x != nil && x.DiscoveredDevicePublicKey != nil {
		return *x.DiscoveredDevicePublicKey
	}
	return ""
}

func (x *ConnectDeviceDiscovered) GetCapabilitiesResolved() bool {
	if x != nil && x.CapabilitiesResolved != nil {
		return *x.CapabilitiesResolved
	}
	return false
}

type ConnectMdnsPacketParseError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *string                `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Buffer        *string                `protobuf:"bytes,2,opt,name=buffer,proto3,oneof" json:"buffer,omitempty"`
	Ttl           *string                `protobuf:"bytes,3,opt,name=ttl,proto3,oneof" json:"ttl,omitempty"`
	Txt           *string                `protobuf:"bytes,4,opt,name=txt,proto3,oneof" json:"txt,omitempty"`
	Host          *string                `protobuf:"bytes,5,opt,name=host,proto3,oneof" json:"host,omitempty"`
	DiscoveryName *string                `protobuf:"bytes,6,opt,name=discovery_name,json=discoveryName,proto3,oneof" json:"discovery_name,omitempty"`
	Context       *string                `protobuf:"bytes,7,opt,name=context,proto3,oneof" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectMdnsPacketParseError) Reset() {
	*x = ConnectMdnsPacketParseError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectMdnsPacketParseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectMdnsPacketParseError) ProtoMessage() {}

func (x *ConnectMdnsPacketParseError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectMdnsPacketParseError.ProtoReflect.Descriptor instead.
func (*ConnectMdnsPacketParseError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{47}
}

func (x *ConnectMdnsPacketParseError) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ConnectMdnsPacketParseError) GetBuffer() string {
	if x != nil && x.Buffer != nil {
		return *x.Buffer
	}
	return ""
}

func (x *ConnectMdnsPacketParseError) GetTtl() string {
	if x != nil && x.Ttl != nil {
		return *x.Ttl
	}
	return ""
}

func (x *ConnectMdnsPacketParseError) GetTxt() string {
	if x != nil && x.Txt != nil {
		return *x.Txt
	}
	return ""
}

func (x *ConnectMdnsPacketParseError) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *ConnectMdnsPacketParseError) GetDiscoveryName() string {
	if x != nil && x.DiscoveryName != nil {
		return *x.DiscoveryName
	}
	return ""
}

func (x *ConnectMdnsPacketParseError) GetContext() string {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return ""
}

type ConnectTransferIncarnation struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TransferIntentId    *string                `protobuf:"bytes,1,opt,name=transfer_intent_id,json=transferIntentId,proto3,oneof" json:"transfer_intent_id,omitempty"`
	IncarnationClientId *string                `protobuf:"bytes,2,opt,name=incarnation_client_id,json=incarnationClientId,proto3,oneof" json:"incarnation_client_id,omitempty"`
	IncarnationDeviceId *string                `protobuf:"bytes,3,opt,name=incarnation_device_id,json=incarnationDeviceId,proto3,oneof" json:"incarnation_device_id,omitempty"`
	IncarnationIsCast   *bool                  `protobuf:"varint,4,opt,name=incarnation_is_cast,json=incarnationIsCast,proto3,oneof" json:"incarnation_is_cast,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ConnectTransferIncarnation) Reset() {
	*x = ConnectTransferIncarnation{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectTransferIncarnation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectTransferIncarnation) ProtoMessage() {}

func (x *ConnectTransferIncarnation) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectTransferIncarnation.ProtoReflect.Descriptor instead.
func (*ConnectTransferIncarnation) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{48}
}

func (x *ConnectTransferIncarnation) GetTransferIntentId() string {
	if x != nil && x.TransferIntentId != nil {
		return *x.TransferIntentId
	}
	return ""
}

func (x *ConnectTransferIncarnation) GetIncarnationClientId() string {
	if x != nil && x.IncarnationClientId != nil {
		return *x.IncarnationClientId
	}
	return ""
}

func (x *ConnectTransferIncarnation) GetIncarnationDeviceId() string {
	if x != nil && x.IncarnationDeviceId != nil {
		return *x.IncarnationDeviceId
	}
	return ""
}

func (x *ConnectTransferIncarnation) GetIncarnationIsCast() bool {
	if x != nil && x.IncarnationIsCast != nil {
		return *x.IncarnationIsCast
	}
	return false
}

type ConnectTransferResult struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Result                *string                `protobuf:"bytes,1,opt,name=result,proto3,oneof" json:"result,omitempty"`
	DeviceType            *string                `protobuf:"bytes,2,opt,name=device_type,json=deviceType,proto3,oneof" json:"device_type,omitempty"`
	DiscoveryClass        *string                `protobuf:"bytes,3,opt,name=discovery_class,json=discoveryClass,proto3,oneof" json:"discovery_class,omitempty"`
	DeviceModel           *string                `protobuf:"bytes,4,opt,name=device_model,json=deviceModel,proto3,oneof" json:"device_model,omitempty"`
	DeviceBrand           *string                `protobuf:"bytes,5,opt,name=device_brand,json=deviceBrand,proto3,oneof" json:"device_brand,omitempty"`
	DeviceSoftwareVersion *string                `protobuf:"bytes,6,opt,name=device_software_version,json=deviceSoftwareVersion,proto3,oneof" json:"device_software_version,omitempty"`
	Duration              *int64                 `protobuf:"varint,7,opt,name=duration,proto3,oneof" json:"duration,omitempty"`
	DeviceClientId        *string                `protobuf:"bytes,8,opt,name=device_client_id,json=deviceClientId,proto3,oneof" json:"device_client_id,omitempty"`
	TransferIntentId      *string                `protobuf:"bytes,9,opt,name=transfer_intent_id,json=transferIntentId,proto3,oneof" json:"transfer_intent_id,omitempty"`
	TransferDebugLog      *string                `protobuf:"bytes,10,opt,name=transfer_debug_log,json=transferDebugLog,proto3,oneof" json:"transfer_debug_log,omitempty"`
	ErrorCode             *string                `protobuf:"bytes,11,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	HttpResponseCode      *int32                 `protobuf:"varint,12,opt,name=http_response_code,json=httpResponseCode,proto3,oneof" json:"http_response_code,omitempty"`
	InitialDeviceState    *string                `protobuf:"bytes,13,opt,name=initial_device_state,json=initialDeviceState,proto3,oneof" json:"initial_device_state,omitempty"`
	RetryCount            *int32                 `protobuf:"varint,14,opt,name=retry_count,json=retryCount,proto3,oneof" json:"retry_count,omitempty"`
	LoginRetryCount       *int32                 `protobuf:"varint,15,opt,name=login_retry_count,json=loginRetryCount,proto3,oneof" json:"login_retry_count,omitempty"`
	LoginDuration         *int64                 `protobuf:"varint,16,opt,name=login_duration,json=loginDuration,proto3,oneof" json:"login_duration,omitempty"`
	TargetDeviceId        *string                `protobuf:"bytes,17,opt,name=target_device_id,json=targetDeviceId,proto3,oneof" json:"target_device_id,omitempty"`
	TargetDeviceIsLocal   *bool                  `protobuf:"varint,18,opt,name=target_device_is_local,json=targetDeviceIsLocal,proto3,oneof" json:"target_device_is_local,omitempty"`
	FinalDeviceState      *string                `protobuf:"bytes,19,opt,name=final_device_state,json=finalDeviceState,proto3,oneof" json:"final_device_state,omitempty"`
	InteractionIds        []string               `protobuf:"bytes,20,rep,name=interaction_ids,json=interactionIds,proto3" json:"interaction_ids,omitempty"`
	TargetDeviceIsGroup   *bool                  `protobuf:"varint,21,opt,name=target_device_is_group,json=targetDeviceIsGroup,proto3,oneof" json:"target_device_is_group,omitempty"`
	FinalTransferState    *string                `protobuf:"bytes,22,opt,name=final_transfer_state,json=finalTransferState,proto3,oneof" json:"final_transfer_state,omitempty"`
	LoginErrorCodes       []string               `protobuf:"bytes,23,rep,name=login_error_codes,json=loginErrorCodes,proto3" json:"login_error_codes,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ConnectTransferResult) Reset() {
	*x = ConnectTransferResult{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectTransferResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectTransferResult) ProtoMessage() {}

func (x *ConnectTransferResult) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectTransferResult.ProtoReflect.Descriptor instead.
func (*ConnectTransferResult) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{49}
}

func (x *ConnectTransferResult) GetResult() string {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return ""
}

func (x *ConnectTransferResult) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *ConnectTransferResult) GetDiscoveryClass() string {
	if x != nil && x.DiscoveryClass != nil {
		return *x.DiscoveryClass
	}
	return ""
}

func (x *ConnectTransferResult) GetDeviceModel() string {
	if x != nil && x.DeviceModel != nil {
		return *x.DeviceModel
	}
	return ""
}

func (x *ConnectTransferResult) GetDeviceBrand() string {
	if x != nil && x.DeviceBrand != nil {
		return *x.DeviceBrand
	}
	return ""
}

func (x *ConnectTransferResult) GetDeviceSoftwareVersion() string {
	if x != nil && x.DeviceSoftwareVersion != nil {
		return *x.DeviceSoftwareVersion
	}
	return ""
}

func (x *ConnectTransferResult) GetDuration() int64 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *ConnectTransferResult) GetDeviceClientId() string {
	if x != nil && x.DeviceClientId != nil {
		return *x.DeviceClientId
	}
	return ""
}

func (x *ConnectTransferResult) GetTransferIntentId() string {
	if x != nil && x.TransferIntentId != nil {
		return *x.TransferIntentId
	}
	return ""
}

func (x *ConnectTransferResult) GetTransferDebugLog() string {
	if x != nil && x.TransferDebugLog != nil {
		return *x.TransferDebugLog
	}
	return ""
}

func (x *ConnectTransferResult) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *ConnectTransferResult) GetHttpResponseCode() int32 {
	if x != nil && x.HttpResponseCode != nil {
		return *x.HttpResponseCode
	}
	return 0
}

func (x *ConnectTransferResult) GetInitialDeviceState() string {
	if x != nil && x.InitialDeviceState != nil {
		return *x.InitialDeviceState
	}
	return ""
}

func (x *ConnectTransferResult) GetRetryCount() int32 {
	if x != nil && x.RetryCount != nil {
		return *x.RetryCount
	}
	return 0
}

func (x *ConnectTransferResult) GetLoginRetryCount() int32 {
	if x != nil && x.LoginRetryCount != nil {
		return *x.LoginRetryCount
	}
	return 0
}

func (x *ConnectTransferResult) GetLoginDuration() int64 {
	if x != nil && x.LoginDuration != nil {
		return *x.LoginDuration
	}
	return 0
}

func (x *ConnectTransferResult) GetTargetDeviceId() string {
	if x != nil && x.TargetDeviceId != nil {
		return *x.TargetDeviceId
	}
	return ""
}

func (x *ConnectTransferResult) GetTargetDeviceIsLocal() bool {
	if x != nil && x.TargetDeviceIsLocal != nil {
		return *x.TargetDeviceIsLocal
	}
	return false
}

func (x *ConnectTransferResult) GetFinalDeviceState() string {
	if x != nil && x.FinalDeviceState != nil {
		return *x.FinalDeviceState
	}
	return ""
}

func (x *ConnectTransferResult) GetInteractionIds() []string {
	if x != nil {
		return x.InteractionIds
	}
	return nil
}

func (x *ConnectTransferResult) GetTargetDeviceIsGroup() bool {
	if x != nil && x.TargetDeviceIsGroup != nil {
		return *x.TargetDeviceIsGroup
	}
	return false
}

func (x *ConnectTransferResult) GetFinalTransferState() string {
	if x != nil && x.FinalTransferState != nil {
		return *x.FinalTransferState
	}
	return ""
}

func (x *ConnectTransferResult) GetLoginErrorCodes() []string {
	if x != nil {
		return x.LoginErrorCodes
	}
	return nil
}

type ConnectionError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     *int64                 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	Ap            *string                `protobuf:"bytes,2,opt,name=ap,proto3,oneof" json:"ap,omitempty"`
	Proxy         *string                `protobuf:"bytes,3,opt,name=proxy,proto3,oneof" json:"proxy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionError) Reset() {
	*x = ConnectionError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionError) ProtoMessage() {}

func (x *ConnectionError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionError.ProtoReflect.Descriptor instead.
func (*ConnectionError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{50}
}

func (x *ConnectionError) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *ConnectionError) GetAp() string {
	if x != nil && x.Ap != nil {
		return *x.Ap
	}
	return ""
}

func (x *ConnectionError) GetProxy() string {
	if x != nil && x.Proxy != nil {
		return *x.Proxy
	}
	return ""
}

type ConnectionInfo struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Ap                   *string                `protobuf:"bytes,1,opt,name=ap,proto3,oneof" json:"ap,omitempty"`
	Proxy                *string                `protobuf:"bytes,2,opt,name=proxy,proto3,oneof" json:"proxy,omitempty"`
	UserInitatedLogin    *bool                  `protobuf:"varint,3,opt,name=user_initated_login,json=userInitatedLogin,proto3,oneof" json:"user_initated_login,omitempty"`
	ReachabilityType     *string                `protobuf:"bytes,4,opt,name=reachability_type,json=reachabilityType,proto3,oneof" json:"reachability_type,omitempty"`
	WebInstallerUniqueId *string                `protobuf:"bytes,5,opt,name=web_installer_unique_id,json=webInstallerUniqueId,proto3,oneof" json:"web_installer_unique_id,omitempty"`
	ApResolveSource      *string                `protobuf:"bytes,6,opt,name=ap_resolve_source,json=apResolveSource,proto3,oneof" json:"ap_resolve_source,omitempty"`
	AddressType          *string                `protobuf:"bytes,7,opt,name=address_type,json=addressType,proto3,oneof" json:"address_type,omitempty"`
	Ipv6Failed           *bool                  `protobuf:"varint,8,opt,name=ipv6_failed,json=ipv6Failed,proto3,oneof" json:"ipv6_failed,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ConnectionInfo) Reset() {
	*x = ConnectionInfo{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionInfo) ProtoMessage() {}

func (x *ConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionInfo.ProtoReflect.Descriptor instead.
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{51}
}

func (x *ConnectionInfo) GetAp() string {
	if x != nil && x.Ap != nil {
		return *x.Ap
	}
	return ""
}

func (x *ConnectionInfo) GetProxy() string {
	if x != nil && x.Proxy != nil {
		return *x.Proxy
	}
	return ""
}

func (x *ConnectionInfo) GetUserInitatedLogin() bool {
	if x != nil && x.UserInitatedLogin != nil {
		return *x.UserInitatedLogin
	}
	return false
}

func (x *ConnectionInfo) GetReachabilityType() string {
	if x != nil && x.ReachabilityType != nil {
		return *x.ReachabilityType
	}
	return ""
}

func (x *ConnectionInfo) GetWebInstallerUniqueId() string {
	if x != nil && x.WebInstallerUniqueId != nil {
		return *x.WebInstallerUniqueId
	}
	return ""
}

func (x *ConnectionInfo) GetApResolveSource() string {
	if x != nil && x.ApResolveSource != nil {
		return *x.ApResolveSource
	}
	return ""
}

func (x *ConnectionInfo) GetAddressType() string {
	if x != nil && x.AddressType != nil {
		return *x.AddressType
	}
	return ""
}

func (x *ConnectionInfo) GetIpv6Failed() bool {
	if x != nil && x.Ipv6Failed != nil {
		return *x.Ipv6Failed
	}
	return false
}

type ConnectionStateChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *string                `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Old           *string                `protobuf:"bytes,2,opt,name=old,proto3,oneof" json:"old,omitempty"`
	New           *string                `protobuf:"bytes,3,opt,name=new,proto3,oneof" json:"new,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionStateChange) Reset() {
	*x = ConnectionStateChange{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionStateChange) ProtoMessage() {}

func (x *ConnectionStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionStateChange.ProtoReflect.Descriptor instead.
func (*ConnectionStateChange) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{52}
}

func (x *ConnectionStateChange) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ConnectionStateChange) GetOld() string {
	if x != nil && x.Old != nil {
		return *x.Old
	}
	return ""
}

func (x *ConnectionStateChange) GetNew() string {
	if x != nil && x.New != nil {
		return *x.New
	}
	return ""
}

type CoreAutoplayLoadingResults struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ResponseStatus *int32                 `protobuf:"varint,1,opt,name=response_status,json=responseStatus,proto3,oneof" json:"response_status,omitempty"`
	ContextUri     *string                `protobuf:"bytes,2,opt,name=context_uri,json=contextUri,proto3,oneof" json:"context_uri,omitempty"`
	Endpoint       *string                `protobuf:"bytes,3,opt,name=endpoint,proto3,oneof" json:"endpoint,omitempty"`
	SessionId      *string                `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
	RequestLatency *int32                 `protobuf:"varint,5,opt,name=request_latency,json=requestLatency,proto3,oneof" json:"request_latency,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CoreAutoplayLoadingResults) Reset() {
	*x = CoreAutoplayLoadingResults{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoreAutoplayLoadingResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreAutoplayLoadingResults) ProtoMessage() {}

func (x *CoreAutoplayLoadingResults) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreAutoplayLoadingResults.ProtoReflect.Descriptor instead.
func (*CoreAutoplayLoadingResults) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{53}
}

func (x *CoreAutoplayLoadingResults) GetResponseStatus() int32 {
	if x != nil && x.ResponseStatus != nil {
		return *x.ResponseStatus
	}
	return 0
}

func (x *CoreAutoplayLoadingResults) GetContextUri() string {
	if x != nil && x.ContextUri != nil {
		return *x.ContextUri
	}
	return ""
}

func (x *CoreAutoplayLoadingResults) GetEndpoint() string {
	if x != nil && x.Endpoint != nil {
		return *x.Endpoint
	}
	return ""
}

func (x *CoreAutoplayLoadingResults) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *CoreAutoplayLoadingResults) GetRequestLatency() int32 {
	if x != nil && x.RequestLatency != nil {
		return *x.RequestLatency
	}
	return 0
}

type DefaultConfigurationApplied struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	InstallationId            *string                `protobuf:"bytes,1,opt,name=installation_id,json=installationId,proto3,oneof" json:"installation_id,omitempty"`
	ConfigurationAssignmentId *string                `protobuf:"bytes,2,opt,name=configuration_assignment_id,json=configurationAssignmentId,proto3,oneof" json:"configuration_assignment_id,omitempty"`
	RcClientId                *string                `protobuf:"bytes,3,opt,name=rc_client_id,json=rcClientId,proto3,oneof" json:"rc_client_id,omitempty"`
	RcClientVersion           *string                `protobuf:"bytes,4,opt,name=rc_client_version,json=rcClientVersion,proto3,oneof" json:"rc_client_version,omitempty"`
	Platform                  *string                `protobuf:"bytes,5,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
	FetchType                 *string                `protobuf:"bytes,6,opt,name=fetch_type,json=fetchType,proto3,oneof" json:"fetch_type,omitempty"`
	Reason                    *string                `protobuf:"bytes,7,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	Identifiers               map[string]string      `protobuf:"bytes,8,rep,name=identifiers,proto3" json:"identifiers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DefaultConfigurationApplied) Reset() {
	*x = DefaultConfigurationApplied{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DefaultConfigurationApplied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultConfigurationApplied) ProtoMessage() {}

func (x *DefaultConfigurationApplied) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultConfigurationApplied.ProtoReflect.Descriptor instead.
func (*DefaultConfigurationApplied) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{54}
}

func (x *DefaultConfigurationApplied) GetInstallationId() string {
	if x != nil && x.InstallationId != nil {
		return *x.InstallationId
	}
	return ""
}

func (x *DefaultConfigurationApplied) GetConfigurationAssignmentId() string {
	if x != nil && x.ConfigurationAssignmentId != nil {
		return *x.ConfigurationAssignmentId
	}
	return ""
}

func (x *DefaultConfigurationApplied) GetRcClientId() string {
	if x != nil && x.RcClientId != nil {
		return *x.RcClientId
	}
	return ""
}

func (x *DefaultConfigurationApplied) GetRcClientVersion() string {
	if x != nil && x.RcClientVersion != nil {
		return *x.RcClientVersion
	}
	return ""
}

func (x *DefaultConfigurationApplied) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *DefaultConfigurationApplied) GetFetchType() string {
	if x != nil && x.FetchType != nil {
		return *x.FetchType
	}
	return ""
}

func (x *DefaultConfigurationApplied) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *DefaultConfigurationApplied) GetIdentifiers() map[string]string {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

type DesktopAuthenticationFailureNonAuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionHash    *string                `protobuf:"bytes,1,opt,name=action_hash,json=actionHash,proto3,oneof" json:"action_hash,omitempty"`
	ErrorCategory *string                `protobuf:"bytes,2,opt,name=error_category,json=errorCategory,proto3,oneof" json:"error_category,omitempty"`
	ErrorCode     *int32                 `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DesktopAuthenticationFailureNonAuth) Reset() {
	*x = DesktopAuthenticationFailureNonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopAuthenticationFailureNonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopAuthenticationFailureNonAuth) ProtoMessage() {}

func (x *DesktopAuthenticationFailureNonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopAuthenticationFailureNonAuth.ProtoReflect.Descriptor instead.
func (*DesktopAuthenticationFailureNonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{55}
}

func (x *DesktopAuthenticationFailureNonAuth) GetActionHash() string {
	if x != nil && x.ActionHash != nil {
		return *x.ActionHash
	}
	return ""
}

func (x *DesktopAuthenticationFailureNonAuth) GetErrorCategory() string {
	if x != nil && x.ErrorCategory != nil {
		return *x.ErrorCategory
	}
	return ""
}

func (x *DesktopAuthenticationFailureNonAuth) GetErrorCode() int32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

type DesktopAuthenticationSuccess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionHash    *string                `protobuf:"bytes,1,opt,name=action_hash,json=actionHash,proto3,oneof" json:"action_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DesktopAuthenticationSuccess) Reset() {
	*x = DesktopAuthenticationSuccess{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopAuthenticationSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopAuthenticationSuccess) ProtoMessage() {}

func (x *DesktopAuthenticationSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopAuthenticationSuccess.ProtoReflect.Descriptor instead.
func (*DesktopAuthenticationSuccess) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{56}
}

func (x *DesktopAuthenticationSuccess) GetActionHash() string {
	if x != nil && x.ActionHash != nil {
		return *x.ActionHash
	}
	return ""
}

type DesktopGPUAccelerationInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsEnabled     *bool                  `protobuf:"varint,1,opt,name=is_enabled,json=isEnabled,proto3,oneof" json:"is_enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DesktopGPUAccelerationInfo) Reset() {
	*x = DesktopGPUAccelerationInfo{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopGPUAccelerationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopGPUAccelerationInfo) ProtoMessage() {}

func (x *DesktopGPUAccelerationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopGPUAccelerationInfo.ProtoReflect.Descriptor instead.
func (*DesktopGPUAccelerationInfo) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{57}
}

func (x *DesktopGPUAccelerationInfo) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

type DesktopHighMemoryUsage struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	IsContinuationEvent       *bool                  `protobuf:"varint,1,opt,name=is_continuation_event,json=isContinuationEvent,proto3,oneof" json:"is_continuation_event,omitempty"`
	SampleTimeIntervalSeconds *float64               `protobuf:"fixed64,2,opt,name=sample_time_interval_seconds,json=sampleTimeIntervalSeconds,proto3,oneof" json:"sample_time_interval_seconds,omitempty"`
	WinCommittedBytes         *int64                 `protobuf:"varint,3,opt,name=win_committed_bytes,json=winCommittedBytes,proto3,oneof" json:"win_committed_bytes,omitempty"`
	WinPeakCommittedBytes     *int64                 `protobuf:"varint,4,opt,name=win_peak_committed_bytes,json=winPeakCommittedBytes,proto3,oneof" json:"win_peak_committed_bytes,omitempty"`
	WinWorkingSetBytes        *int64                 `protobuf:"varint,5,opt,name=win_working_set_bytes,json=winWorkingSetBytes,proto3,oneof" json:"win_working_set_bytes,omitempty"`
	WinPeakWorkingSetBytes    *int64                 `protobuf:"varint,6,opt,name=win_peak_working_set_bytes,json=winPeakWorkingSetBytes,proto3,oneof" json:"win_peak_working_set_bytes,omitempty"`
	MacVirtualSizeBytes       *int64                 `protobuf:"varint,7,opt,name=mac_virtual_size_bytes,json=macVirtualSizeBytes,proto3,oneof" json:"mac_virtual_size_bytes,omitempty"`
	MacResidentSizeBytes      *int64                 `protobuf:"varint,8,opt,name=mac_resident_size_bytes,json=macResidentSizeBytes,proto3,oneof" json:"mac_resident_size_bytes,omitempty"`
	MacFootprintBytes         *int64                 `protobuf:"varint,9,opt,name=mac_footprint_bytes,json=macFootprintBytes,proto3,oneof" json:"mac_footprint_bytes,omitempty"`
	ProcessName               *string                `protobuf:"bytes,10,opt,name=process_name,json=processName,proto3,oneof" json:"process_name,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DesktopHighMemoryUsage) Reset() {
	*x = DesktopHighMemoryUsage{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopHighMemoryUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopHighMemoryUsage) ProtoMessage() {}

func (x *DesktopHighMemoryUsage) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopHighMemoryUsage.ProtoReflect.Descriptor instead.
func (*DesktopHighMemoryUsage) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{58}
}

func (x *DesktopHighMemoryUsage) GetIsContinuationEvent() bool {
	if x != nil && x.IsContinuationEvent != nil {
		return *x.IsContinuationEvent
	}
	return false
}

func (x *DesktopHighMemoryUsage) GetSampleTimeIntervalSeconds() float64 {
	if x != nil && x.SampleTimeIntervalSeconds != nil {
		return *x.SampleTimeIntervalSeconds
	}
	return 0
}

func (x *DesktopHighMemoryUsage) GetWinCommittedBytes() int64 {
	if x != nil && x.WinCommittedBytes != nil {
		return *x.WinCommittedBytes
	}
	return 0
}

func (x *DesktopHighMemoryUsage) GetWinPeakCommittedBytes() int64 {
	if x != nil && x.WinPeakCommittedBytes != nil {
		return *x.WinPeakCommittedBytes
	}
	return 0
}

func (x *DesktopHighMemoryUsage) GetWinWorkingSetBytes() int64 {
	if x != nil && x.WinWorkingSetBytes != nil {
		return *x.WinWorkingSetBytes
	}
	return 0
}

func (x *DesktopHighMemoryUsage) GetWinPeakWorkingSetBytes() int64 {
	if x != nil && x.WinPeakWorkingSetBytes != nil {
		return *x.WinPeakWorkingSetBytes
	}
	return 0
}

func (x *DesktopHighMemoryUsage) GetMacVirtualSizeBytes() int64 {
	if x != nil && x.MacVirtualSizeBytes != nil {
		return *x.MacVirtualSizeBytes
	}
	return 0
}

func (x *DesktopHighMemoryUsage) GetMacResidentSizeBytes() int64 {
	if x != nil && x.MacResidentSizeBytes != nil {
		return *x.MacResidentSizeBytes
	}
	return 0
}

func (x *DesktopHighMemoryUsage) GetMacFootprintBytes() int64 {
	if x != nil && x.MacFootprintBytes != nil {
		return *x.MacFootprintBytes
	}
	return 0
}

func (x *DesktopHighMemoryUsage) GetProcessName() string {
	if x != nil && x.ProcessName != nil {
		return *x.ProcessName
	}
	return ""
}

type DesktopPartnerAPIAuthRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ClientId          *string                `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id,omitempty"`
	Success           *bool                  `protobuf:"varint,2,opt,name=success,proto3,oneof" json:"success,omitempty"`
	ErrorDescription  *string                `protobuf:"bytes,3,opt,name=error_description,json=errorDescription,proto3,oneof" json:"error_description,omitempty"`
	ErrorStep         *string                `protobuf:"bytes,4,opt,name=error_step,json=errorStep,proto3,oneof" json:"error_step,omitempty"`
	RequestDurationMs *int64                 `protobuf:"varint,5,opt,name=request_duration_ms,json=requestDurationMs,proto3,oneof" json:"request_duration_ms,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DesktopPartnerAPIAuthRequest) Reset() {
	*x = DesktopPartnerAPIAuthRequest{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopPartnerAPIAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopPartnerAPIAuthRequest) ProtoMessage() {}

func (x *DesktopPartnerAPIAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopPartnerAPIAuthRequest.ProtoReflect.Descriptor instead.
func (*DesktopPartnerAPIAuthRequest) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{59}
}

func (x *DesktopPartnerAPIAuthRequest) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *DesktopPartnerAPIAuthRequest) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *DesktopPartnerAPIAuthRequest) GetErrorDescription() string {
	if x != nil && x.ErrorDescription != nil {
		return *x.ErrorDescription
	}
	return ""
}

func (x *DesktopPartnerAPIAuthRequest) GetErrorStep() string {
	if x != nil && x.ErrorStep != nil {
		return *x.ErrorStep
	}
	return ""
}

func (x *DesktopPartnerAPIAuthRequest) GetRequestDurationMs() int64 {
	if x != nil && x.RequestDurationMs != nil {
		return *x.RequestDurationMs
	}
	return 0
}

type DesktopUIShellInteractionNonAuth struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SectionId       *string                `protobuf:"bytes,1,opt,name=section_id,json=sectionId,proto3,oneof" json:"section_id,omitempty"`
	InteractionType *string                `protobuf:"bytes,2,opt,name=interaction_type,json=interactionType,proto3,oneof" json:"interaction_type,omitempty"`
	UserIntent      *string                `protobuf:"bytes,3,opt,name=user_intent,json=userIntent,proto3,oneof" json:"user_intent,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DesktopUIShellInteractionNonAuth) Reset() {
	*x = DesktopUIShellInteractionNonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopUIShellInteractionNonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopUIShellInteractionNonAuth) ProtoMessage() {}

func (x *DesktopUIShellInteractionNonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopUIShellInteractionNonAuth.ProtoReflect.Descriptor instead.
func (*DesktopUIShellInteractionNonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{60}
}

func (x *DesktopUIShellInteractionNonAuth) GetSectionId() string {
	if x != nil && x.SectionId != nil {
		return *x.SectionId
	}
	return ""
}

func (x *DesktopUIShellInteractionNonAuth) GetInteractionType() string {
	if x != nil && x.InteractionType != nil {
		return *x.InteractionType
	}
	return ""
}

func (x *DesktopUIShellInteractionNonAuth) GetUserIntent() string {
	if x != nil && x.UserIntent != nil {
		return *x.UserIntent
	}
	return ""
}

type DesktopUpdateDownloadComplete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revision      *int64                 `protobuf:"varint,1,opt,name=revision,proto3,oneof" json:"revision,omitempty"`
	IsCritical    *bool                  `protobuf:"varint,2,opt,name=is_critical,json=isCritical,proto3,oneof" json:"is_critical,omitempty"`
	Source        *string                `protobuf:"bytes,3,opt,name=source,proto3,oneof" json:"source,omitempty"`
	IsSuccessful  *bool                  `protobuf:"varint,4,opt,name=is_successful,json=isSuccessful,proto3,oneof" json:"is_successful,omitempty"`
	IsEmployee    *bool                  `protobuf:"varint,5,opt,name=is_employee,json=isEmployee,proto3,oneof" json:"is_employee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DesktopUpdateDownloadComplete) Reset() {
	*x = DesktopUpdateDownloadComplete{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopUpdateDownloadComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopUpdateDownloadComplete) ProtoMessage() {}

func (x *DesktopUpdateDownloadComplete) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopUpdateDownloadComplete.ProtoReflect.Descriptor instead.
func (*DesktopUpdateDownloadComplete) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{61}
}

func (x *DesktopUpdateDownloadComplete) GetRevision() int64 {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return 0
}

func (x *DesktopUpdateDownloadComplete) GetIsCritical() bool {
	if x != nil && x.IsCritical != nil {
		return *x.IsCritical
	}
	return false
}

func (x *DesktopUpdateDownloadComplete) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *DesktopUpdateDownloadComplete) GetIsSuccessful() bool {
	if x != nil && x.IsSuccessful != nil {
		return *x.IsSuccessful
	}
	return false
}

func (x *DesktopUpdateDownloadComplete) GetIsEmployee() bool {
	if x != nil && x.IsEmployee != nil {
		return *x.IsEmployee
	}
	return false
}

type DesktopUpdateDownloadError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revision      *int64                 `protobuf:"varint,1,opt,name=revision,proto3,oneof" json:"revision,omitempty"`
	IsCritical    *bool                  `protobuf:"varint,2,opt,name=is_critical,json=isCritical,proto3,oneof" json:"is_critical,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	Source        *string                `protobuf:"bytes,4,opt,name=source,proto3,oneof" json:"source,omitempty"`
	IsEmployee    *bool                  `protobuf:"varint,5,opt,name=is_employee,json=isEmployee,proto3,oneof" json:"is_employee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DesktopUpdateDownloadError) Reset() {
	*x = DesktopUpdateDownloadError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopUpdateDownloadError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopUpdateDownloadError) ProtoMessage() {}

func (x *DesktopUpdateDownloadError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopUpdateDownloadError.ProtoReflect.Descriptor instead.
func (*DesktopUpdateDownloadError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{62}
}

func (x *DesktopUpdateDownloadError) GetRevision() int64 {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return 0
}

func (x *DesktopUpdateDownloadError) GetIsCritical() bool {
	if x != nil && x.IsCritical != nil {
		return *x.IsCritical
	}
	return false
}

func (x *DesktopUpdateDownloadError) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

func (x *DesktopUpdateDownloadError) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *DesktopUpdateDownloadError) GetIsEmployee() bool {
	if x != nil && x.IsEmployee != nil {
		return *x.IsEmployee
	}
	return false
}

type DesktopUpdateMessageAction struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	WillDownload                  *bool                  `protobuf:"varint,1,opt,name=will_download,json=willDownload,proto3,oneof" json:"will_download,omitempty"`
	ThisMessageFromRevision       *int64                 `protobuf:"varint,2,opt,name=this_message_from_revision,json=thisMessageFromRevision,proto3,oneof" json:"this_message_from_revision,omitempty"`
	ThisMessageToRevision         *int64                 `protobuf:"varint,3,opt,name=this_message_to_revision,json=thisMessageToRevision,proto3,oneof" json:"this_message_to_revision,omitempty"`
	IsCritical                    *bool                  `protobuf:"varint,4,opt,name=is_critical,json=isCritical,proto3,oneof" json:"is_critical,omitempty"`
	AlreadyDownloadedFromRevision *int64                 `protobuf:"varint,5,opt,name=already_downloaded_from_revision,json=alreadyDownloadedFromRevision,proto3,oneof" json:"already_downloaded_from_revision,omitempty"`
	AlreadyDownloadedToRevision   *int64                 `protobuf:"varint,6,opt,name=already_downloaded_to_revision,json=alreadyDownloadedToRevision,proto3,oneof" json:"already_downloaded_to_revision,omitempty"`
	Source                        *string                `protobuf:"bytes,7,opt,name=source,proto3,oneof" json:"source,omitempty"`
	IsEmployee                    *bool                  `protobuf:"varint,8,opt,name=is_employee,json=isEmployee,proto3,oneof" json:"is_employee,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *DesktopUpdateMessageAction) Reset() {
	*x = DesktopUpdateMessageAction{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopUpdateMessageAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopUpdateMessageAction) ProtoMessage() {}

func (x *DesktopUpdateMessageAction) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopUpdateMessageAction.ProtoReflect.Descriptor instead.
func (*DesktopUpdateMessageAction) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{63}
}

func (x *DesktopUpdateMessageAction) GetWillDownload() bool {
	if x != nil && x.WillDownload != nil {
		return *x.WillDownload
	}
	return false
}

func (x *DesktopUpdateMessageAction) GetThisMessageFromRevision() int64 {
	if x != nil && x.ThisMessageFromRevision != nil {
		return *x.ThisMessageFromRevision
	}
	return 0
}

func (x *DesktopUpdateMessageAction) GetThisMessageToRevision() int64 {
	if x != nil && x.ThisMessageToRevision != nil {
		return *x.ThisMessageToRevision
	}
	return 0
}

func (x *DesktopUpdateMessageAction) GetIsCritical() bool {
	if x != nil && x.IsCritical != nil {
		return *x.IsCritical
	}
	return false
}

func (x *DesktopUpdateMessageAction) GetAlreadyDownloadedFromRevision() int64 {
	if x != nil && x.AlreadyDownloadedFromRevision != nil {
		return *x.AlreadyDownloadedFromRevision
	}
	return 0
}

func (x *DesktopUpdateMessageAction) GetAlreadyDownloadedToRevision() int64 {
	if x != nil && x.AlreadyDownloadedToRevision != nil {
		return *x.AlreadyDownloadedToRevision
	}
	return 0
}

func (x *DesktopUpdateMessageAction) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *DesktopUpdateMessageAction) GetIsEmployee() bool {
	if x != nil && x.IsEmployee != nil {
		return *x.IsEmployee
	}
	return false
}

type DesktopUpdateMessageProcessed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       *bool                  `protobuf:"varint,1,opt,name=success,proto3,oneof" json:"success,omitempty"`
	Source        *string                `protobuf:"bytes,2,opt,name=source,proto3,oneof" json:"source,omitempty"`
	Revision      *int64                 `protobuf:"varint,3,opt,name=revision,proto3,oneof" json:"revision,omitempty"`
	IsCritical    *bool                  `protobuf:"varint,4,opt,name=is_critical,json=isCritical,proto3,oneof" json:"is_critical,omitempty"`
	BinaryHash    *string                `protobuf:"bytes,5,opt,name=binary_hash,json=binaryHash,proto3,oneof" json:"binary_hash,omitempty"`
	IsEmployee    *bool                  `protobuf:"varint,6,opt,name=is_employee,json=isEmployee,proto3,oneof" json:"is_employee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DesktopUpdateMessageProcessed) Reset() {
	*x = DesktopUpdateMessageProcessed{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopUpdateMessageProcessed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopUpdateMessageProcessed) ProtoMessage() {}

func (x *DesktopUpdateMessageProcessed) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopUpdateMessageProcessed.ProtoReflect.Descriptor instead.
func (*DesktopUpdateMessageProcessed) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{64}
}

func (x *DesktopUpdateMessageProcessed) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *DesktopUpdateMessageProcessed) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *DesktopUpdateMessageProcessed) GetRevision() int64 {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return 0
}

func (x *DesktopUpdateMessageProcessed) GetIsCritical() bool {
	if x != nil && x.IsCritical != nil {
		return *x.IsCritical
	}
	return false
}

func (x *DesktopUpdateMessageProcessed) GetBinaryHash() string {
	if x != nil && x.BinaryHash != nil {
		return *x.BinaryHash
	}
	return ""
}

func (x *DesktopUpdateMessageProcessed) GetIsEmployee() bool {
	if x != nil && x.IsEmployee != nil {
		return *x.IsEmployee
	}
	return false
}

type DesktopUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    *int64                 `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,oneof" json:"status_code,omitempty"`
	RequestTimeMs *int64                 `protobuf:"varint,2,opt,name=request_time_ms,json=requestTimeMs,proto3,oneof" json:"request_time_ms,omitempty"`
	PayloadSize   *int64                 `protobuf:"varint,3,opt,name=payload_size,json=payloadSize,proto3,oneof" json:"payload_size,omitempty"`
	IsEmployee    *bool                  `protobuf:"varint,4,opt,name=is_employee,json=isEmployee,proto3,oneof" json:"is_employee,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DesktopUpdateResponse) Reset() {
	*x = DesktopUpdateResponse{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopUpdateResponse) ProtoMessage() {}

func (x *DesktopUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopUpdateResponse.ProtoReflect.Descriptor instead.
func (*DesktopUpdateResponse) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{65}
}

func (x *DesktopUpdateResponse) GetStatusCode() int64 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *DesktopUpdateResponse) GetRequestTimeMs() int64 {
	if x != nil && x.RequestTimeMs != nil {
		return *x.RequestTimeMs
	}
	return 0
}

func (x *DesktopUpdateResponse) GetPayloadSize() int64 {
	if x != nil && x.PayloadSize != nil {
		return *x.PayloadSize
	}
	return 0
}

func (x *DesktopUpdateResponse) GetIsEmployee() bool {
	if x != nil && x.IsEmployee != nil {
		return *x.IsEmployee
	}
	return false
}

func (x *DesktopUpdateResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type DesktopURIActivationNonAuth struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Uri              *string                `protobuf:"bytes,1,opt,name=uri,proto3,oneof" json:"uri,omitempty"`
	ActivationSource *string                `protobuf:"bytes,2,opt,name=activation_source,json=activationSource,proto3,oneof" json:"activation_source,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DesktopURIActivationNonAuth) Reset() {
	*x = DesktopURIActivationNonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesktopURIActivationNonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesktopURIActivationNonAuth) ProtoMessage() {}

func (x *DesktopURIActivationNonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesktopURIActivationNonAuth.ProtoReflect.Descriptor instead.
func (*DesktopURIActivationNonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{66}
}

func (x *DesktopURIActivationNonAuth) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

func (x *DesktopURIActivationNonAuth) GetActivationSource() string {
	if x != nil && x.ActivationSource != nil {
		return *x.ActivationSource
	}
	return ""
}

type EventSenderCanary struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BatchUuid             *string                `protobuf:"bytes,1,opt,name=batch_uuid,json=batchUuid,proto3,oneof" json:"batch_uuid,omitempty"`
	EventId               *int64                 `protobuf:"varint,2,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	BatchSize             *int64                 `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3,oneof" json:"batch_size,omitempty"`
	SendingSystem         *string                `protobuf:"bytes,4,opt,name=sending_system,json=sendingSystem,proto3,oneof" json:"sending_system,omitempty"`
	SentAsPendingEvent    *bool                  `protobuf:"varint,5,opt,name=sent_as_pending_event,json=sentAsPendingEvent,proto3,oneof" json:"sent_as_pending_event,omitempty"`
	BatchStartTimeMs      *int64                 `protobuf:"varint,6,opt,name=batch_start_time_ms,json=batchStartTimeMs,proto3,oneof" json:"batch_start_time_ms,omitempty"`
	EventTimeMs           *int64                 `protobuf:"varint,7,opt,name=event_time_ms,json=eventTimeMs,proto3,oneof" json:"event_time_ms,omitempty"`
	Configuration         *string                `protobuf:"bytes,8,opt,name=configuration,proto3,oneof" json:"configuration,omitempty"`
	ExperimentVariant     *string                `protobuf:"bytes,9,opt,name=experiment_variant,json=experimentVariant,proto3,oneof" json:"experiment_variant,omitempty"`
	MutationCount         *int64                 `protobuf:"varint,10,opt,name=mutation_count,json=mutationCount,proto3,oneof" json:"mutation_count,omitempty"`
	ExpectedMutationCount *int64                 `protobuf:"varint,11,opt,name=expected_mutation_count,json=expectedMutationCount,proto3,oneof" json:"expected_mutation_count,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventSenderCanary) Reset() {
	*x = EventSenderCanary{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSenderCanary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSenderCanary) ProtoMessage() {}

func (x *EventSenderCanary) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSenderCanary.ProtoReflect.Descriptor instead.
func (*EventSenderCanary) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{67}
}

func (x *EventSenderCanary) GetBatchUuid() string {
	if x != nil && x.BatchUuid != nil {
		return *x.BatchUuid
	}
	return ""
}

func (x *EventSenderCanary) GetEventId() int64 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

func (x *EventSenderCanary) GetBatchSize() int64 {
	if x != nil && x.BatchSize != nil {
		return *x.BatchSize
	}
	return 0
}

func (x *EventSenderCanary) GetSendingSystem() string {
	if x != nil && x.SendingSystem != nil {
		return *x.SendingSystem
	}
	return ""
}

func (x *EventSenderCanary) GetSentAsPendingEvent() bool {
	if x != nil && x.SentAsPendingEvent != nil {
		return *x.SentAsPendingEvent
	}
	return false
}

func (x *EventSenderCanary) GetBatchStartTimeMs() int64 {
	if x != nil && x.BatchStartTimeMs != nil {
		return *x.BatchStartTimeMs
	}
	return 0
}

func (x *EventSenderCanary) GetEventTimeMs() int64 {
	if x != nil && x.EventTimeMs != nil {
		return *x.EventTimeMs
	}
	return 0
}

func (x *EventSenderCanary) GetConfiguration() string {
	if x != nil && x.Configuration != nil {
		return *x.Configuration
	}
	return ""
}

func (x *EventSenderCanary) GetExperimentVariant() string {
	if x != nil && x.ExperimentVariant != nil {
		return *x.ExperimentVariant
	}
	return ""
}

func (x *EventSenderCanary) GetMutationCount() int64 {
	if x != nil && x.MutationCount != nil {
		return *x.MutationCount
	}
	return 0
}

func (x *EventSenderCanary) GetExpectedMutationCount() int64 {
	if x != nil && x.ExpectedMutationCount != nil {
		return *x.ExpectedMutationCount
	}
	return 0
}

type EventSenderCanaryError struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BatchUuid             *string                `protobuf:"bytes,1,opt,name=batch_uuid,json=batchUuid,proto3,oneof" json:"batch_uuid,omitempty"`
	EventId               *int64                 `protobuf:"varint,2,opt,name=event_id,json=eventId,proto3,oneof" json:"event_id,omitempty"`
	BatchSize             *int64                 `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3,oneof" json:"batch_size,omitempty"`
	SendingSystem         *string                `protobuf:"bytes,4,opt,name=sending_system,json=sendingSystem,proto3,oneof" json:"sending_system,omitempty"`
	SentAsPendingEvent    *bool                  `protobuf:"varint,5,opt,name=sent_as_pending_event,json=sentAsPendingEvent,proto3,oneof" json:"sent_as_pending_event,omitempty"`
	BatchStartTimeMs      *int64                 `protobuf:"varint,6,opt,name=batch_start_time_ms,json=batchStartTimeMs,proto3,oneof" json:"batch_start_time_ms,omitempty"`
	EventTimeMs           *int64                 `protobuf:"varint,7,opt,name=event_time_ms,json=eventTimeMs,proto3,oneof" json:"event_time_ms,omitempty"`
	Configuration         *string                `protobuf:"bytes,8,opt,name=configuration,proto3,oneof" json:"configuration,omitempty"`
	ErrorSource           *string                `protobuf:"bytes,9,opt,name=error_source,json=errorSource,proto3,oneof" json:"error_source,omitempty"`
	ErrorType             *string                `protobuf:"bytes,10,opt,name=error_type,json=errorType,proto3,oneof" json:"error_type,omitempty"`
	ExperimentVariant     *string                `protobuf:"bytes,11,opt,name=experiment_variant,json=experimentVariant,proto3,oneof" json:"experiment_variant,omitempty"`
	MutationCount         *int64                 `protobuf:"varint,12,opt,name=mutation_count,json=mutationCount,proto3,oneof" json:"mutation_count,omitempty"`
	ExpectedMutationCount *int64                 `protobuf:"varint,13,opt,name=expected_mutation_count,json=expectedMutationCount,proto3,oneof" json:"expected_mutation_count,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventSenderCanaryError) Reset() {
	*x = EventSenderCanaryError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSenderCanaryError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSenderCanaryError) ProtoMessage() {}

func (x *EventSenderCanaryError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSenderCanaryError.ProtoReflect.Descriptor instead.
func (*EventSenderCanaryError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{68}
}

func (x *EventSenderCanaryError) GetBatchUuid() string {
	if x != nil && x.BatchUuid != nil {
		return *x.BatchUuid
	}
	return ""
}

func (x *EventSenderCanaryError) GetEventId() int64 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

func (x *EventSenderCanaryError) GetBatchSize() int64 {
	if x != nil && x.BatchSize != nil {
		return *x.BatchSize
	}
	return 0
}

func (x *EventSenderCanaryError) GetSendingSystem() string {
	if x != nil && x.SendingSystem != nil {
		return *x.SendingSystem
	}
	return ""
}

func (x *EventSenderCanaryError) GetSentAsPendingEvent() bool {
	if x != nil && x.SentAsPendingEvent != nil {
		return *x.SentAsPendingEvent
	}
	return false
}

func (x *EventSenderCanaryError) GetBatchStartTimeMs() int64 {
	if x != nil && x.BatchStartTimeMs != nil {
		return *x.BatchStartTimeMs
	}
	return 0
}

func (x *EventSenderCanaryError) GetEventTimeMs() int64 {
	if x != nil && x.EventTimeMs != nil {
		return *x.EventTimeMs
	}
	return 0
}

func (x *EventSenderCanaryError) GetConfiguration() string {
	if x != nil && x.Configuration != nil {
		return *x.Configuration
	}
	return ""
}

func (x *EventSenderCanaryError) GetErrorSource() string {
	if x != nil && x.ErrorSource != nil {
		return *x.ErrorSource
	}
	return ""
}

func (x *EventSenderCanaryError) GetErrorType() string {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return ""
}

func (x *EventSenderCanaryError) GetExperimentVariant() string {
	if x != nil && x.ExperimentVariant != nil {
		return *x.ExperimentVariant
	}
	return ""
}

func (x *EventSenderCanaryError) GetMutationCount() int64 {
	if x != nil && x.MutationCount != nil {
		return *x.MutationCount
	}
	return 0
}

func (x *EventSenderCanaryError) GetExpectedMutationCount() int64 {
	if x != nil && x.ExpectedMutationCount != nil {
		return *x.ExpectedMutationCount
	}
	return 0
}

type EventSenderInternalError2NonAuth struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ErrorTypes            []string               `protobuf:"bytes,1,rep,name=error_types,json=errorTypes,proto3" json:"error_types,omitempty"`
	ErrorTotalCounts      []int32                `protobuf:"varint,2,rep,packed,name=error_total_counts,json=errorTotalCounts,proto3" json:"error_total_counts,omitempty"`
	ErrorUnreportedCounts []int32                `protobuf:"varint,3,rep,packed,name=error_unreported_counts,json=errorUnreportedCounts,proto3" json:"error_unreported_counts,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventSenderInternalError2NonAuth) Reset() {
	*x = EventSenderInternalError2NonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSenderInternalError2NonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSenderInternalError2NonAuth) ProtoMessage() {}

func (x *EventSenderInternalError2NonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSenderInternalError2NonAuth.ProtoReflect.Descriptor instead.
func (*EventSenderInternalError2NonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{69}
}

func (x *EventSenderInternalError2NonAuth) GetErrorTypes() []string {
	if x != nil {
		return x.ErrorTypes
	}
	return nil
}

func (x *EventSenderInternalError2NonAuth) GetErrorTotalCounts() []int32 {
	if x != nil {
		return x.ErrorTotalCounts
	}
	return nil
}

func (x *EventSenderInternalError2NonAuth) GetErrorUnreportedCounts() []int32 {
	if x != nil {
		return x.ErrorUnreportedCounts
	}
	return nil
}

type EventSenderStats struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	StorageSize        map[string]int64       `protobuf:"bytes,1,rep,name=storage_size,json=storageSize,proto3" json:"storage_size,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	SequenceNumberMin  map[string]int64       `protobuf:"bytes,2,rep,name=sequence_number_min,json=sequenceNumberMin,proto3" json:"sequence_number_min,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	SequenceNumberNext map[string]int64       `protobuf:"bytes,3,rep,name=sequence_number_next,json=sequenceNumberNext,proto3" json:"sequence_number_next,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *EventSenderStats) Reset() {
	*x = EventSenderStats{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSenderStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSenderStats) ProtoMessage() {}

func (x *EventSenderStats) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSenderStats.ProtoReflect.Descriptor instead.
func (*EventSenderStats) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{70}
}

func (x *EventSenderStats) GetStorageSize() map[string]int64 {
	if x != nil {
		return x.StorageSize
	}
	return nil
}

func (x *EventSenderStats) GetSequenceNumberMin() map[string]int64 {
	if x != nil {
		return x.SequenceNumberMin
	}
	return nil
}

func (x *EventSenderStats) GetSequenceNumberNext() map[string]int64 {
	if x != nil {
		return x.SequenceNumberNext
	}
	return nil
}

type ExternalAccessoryRemoteInteraction struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Action         *string                `protobuf:"bytes,1,opt,name=action,proto3,oneof" json:"action,omitempty"`
	InteractionId  *string                `protobuf:"bytes,2,opt,name=interaction_id,json=interactionId,proto3,oneof" json:"interaction_id,omitempty"`
	Integration    *string                `protobuf:"bytes,3,opt,name=integration,proto3,oneof" json:"integration,omitempty"`
	Protocol       *string                `protobuf:"bytes,4,opt,name=protocol,proto3,oneof" json:"protocol,omitempty"`
	TransportType  *string                `protobuf:"bytes,5,opt,name=transport_type,json=transportType,proto3,oneof" json:"transport_type,omitempty"`
	AccessoryType  *string                `protobuf:"bytes,6,opt,name=accessory_type,json=accessoryType,proto3,oneof" json:"accessory_type,omitempty"`
	AccessoryName  *string                `protobuf:"bytes,7,opt,name=accessory_name,json=accessoryName,proto3,oneof" json:"accessory_name,omitempty"`
	Brand          *string                `protobuf:"bytes,8,opt,name=brand,proto3,oneof" json:"brand,omitempty"`
	Model          *string                `protobuf:"bytes,9,opt,name=model,proto3,oneof" json:"model,omitempty"`
	Version        *string                `protobuf:"bytes,10,opt,name=version,proto3,oneof" json:"version,omitempty"`
	ClientId       *string                `protobuf:"bytes,11,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id,omitempty"`
	SenderId       *string                `protobuf:"bytes,12,opt,name=sender_id,json=senderId,proto3,oneof" json:"sender_id,omitempty"`
	RemoteDeviceId *string                `protobuf:"bytes,13,opt,name=remote_device_id,json=remoteDeviceId,proto3,oneof" json:"remote_device_id,omitempty"`
	AudioRouteId   *string                `protobuf:"bytes,14,opt,name=audio_route_id,json=audioRouteId,proto3,oneof" json:"audio_route_id,omitempty"`
	AccessoryClass *string                `protobuf:"bytes,15,opt,name=accessory_class,json=accessoryClass,proto3,oneof" json:"accessory_class,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExternalAccessoryRemoteInteraction) Reset() {
	*x = ExternalAccessoryRemoteInteraction{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalAccessoryRemoteInteraction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAccessoryRemoteInteraction) ProtoMessage() {}

func (x *ExternalAccessoryRemoteInteraction) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAccessoryRemoteInteraction.ProtoReflect.Descriptor instead.
func (*ExternalAccessoryRemoteInteraction) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{71}
}

func (x *ExternalAccessoryRemoteInteraction) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetInteractionId() string {
	if x != nil && x.InteractionId != nil {
		return *x.InteractionId
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetIntegration() string {
	if x != nil && x.Integration != nil {
		return *x.Integration
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetProtocol() string {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetTransportType() string {
	if x != nil && x.TransportType != nil {
		return *x.TransportType
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetAccessoryType() string {
	if x != nil && x.AccessoryType != nil {
		return *x.AccessoryType
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetAccessoryName() string {
	if x != nil && x.AccessoryName != nil {
		return *x.AccessoryName
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetBrand() string {
	if x != nil && x.Brand != nil {
		return *x.Brand
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetSenderId() string {
	if x != nil && x.SenderId != nil {
		return *x.SenderId
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetRemoteDeviceId() string {
	if x != nil && x.RemoteDeviceId != nil {
		return *x.RemoteDeviceId
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetAudioRouteId() string {
	if x != nil && x.AudioRouteId != nil {
		return *x.AudioRouteId
	}
	return ""
}

func (x *ExternalAccessoryRemoteInteraction) GetAccessoryClass() string {
	if x != nil && x.AccessoryClass != nil {
		return *x.AccessoryClass
	}
	return ""
}

type ExternalDeviceInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Type               *string                `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Subtype            *string                `protobuf:"bytes,2,opt,name=subtype,proto3,oneof" json:"subtype,omitempty"`
	Reason             *string                `protobuf:"bytes,3,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	TakenOver          *bool                  `protobuf:"varint,4,opt,name=taken_over,json=takenOver,proto3,oneof" json:"taken_over,omitempty"`
	NumTracks          *int64                 `protobuf:"varint,5,opt,name=num_tracks,json=numTracks,proto3,oneof" json:"num_tracks,omitempty"`
	NumPurchasedTracks *int64                 `protobuf:"varint,6,opt,name=num_purchased_tracks,json=numPurchasedTracks,proto3,oneof" json:"num_purchased_tracks,omitempty"`
	NumPlaylists       *int64                 `protobuf:"varint,7,opt,name=num_playlists,json=numPlaylists,proto3,oneof" json:"num_playlists,omitempty"`
	Error              *string                `protobuf:"bytes,8,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Full               *bool                  `protobuf:"varint,9,opt,name=full,proto3,oneof" json:"full,omitempty"`
	SyncAll            *bool                  `protobuf:"varint,10,opt,name=sync_all,json=syncAll,proto3,oneof" json:"sync_all,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ExternalDeviceInfo) Reset() {
	*x = ExternalDeviceInfo{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalDeviceInfo) ProtoMessage() {}

func (x *ExternalDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalDeviceInfo.ProtoReflect.Descriptor instead.
func (*ExternalDeviceInfo) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{72}
}

func (x *ExternalDeviceInfo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ExternalDeviceInfo) GetSubtype() string {
	if x != nil && x.Subtype != nil {
		return *x.Subtype
	}
	return ""
}

func (x *ExternalDeviceInfo) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *ExternalDeviceInfo) GetTakenOver() bool {
	if x != nil && x.TakenOver != nil {
		return *x.TakenOver
	}
	return false
}

func (x *ExternalDeviceInfo) GetNumTracks() int64 {
	if x != nil && x.NumTracks != nil {
		return *x.NumTracks
	}
	return 0
}

func (x *ExternalDeviceInfo) GetNumPurchasedTracks() int64 {
	if x != nil && x.NumPurchasedTracks != nil {
		return *x.NumPurchasedTracks
	}
	return 0
}

func (x *ExternalDeviceInfo) GetNumPlaylists() int64 {
	if x != nil && x.NumPlaylists != nil {
		return *x.NumPlaylists
	}
	return 0
}

func (x *ExternalDeviceInfo) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *ExternalDeviceInfo) GetFull() bool {
	if x != nil && x.Full != nil {
		return *x.Full
	}
	return false
}

func (x *ExternalDeviceInfo) GetSyncAll() bool {
	if x != nil && x.SyncAll != nil {
		return *x.SyncAll
	}
	return false
}

type GetInfoFailures struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      *string                `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	ErrorCode     *int64                 `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	Request       *string                `protobuf:"bytes,3,opt,name=request,proto3,oneof" json:"request,omitempty"`
	ResponseBody  *string                `protobuf:"bytes,4,opt,name=response_body,json=responseBody,proto3,oneof" json:"response_body,omitempty"`
	Context       *string                `protobuf:"bytes,5,opt,name=context,proto3,oneof" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoFailures) Reset() {
	*x = GetInfoFailures{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoFailures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoFailures) ProtoMessage() {}

func (x *GetInfoFailures) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoFailures.ProtoReflect.Descriptor instead.
func (*GetInfoFailures) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{73}
}

func (x *GetInfoFailures) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *GetInfoFailures) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *GetInfoFailures) GetRequest() string {
	if x != nil && x.Request != nil {
		return *x.Request
	}
	return ""
}

func (x *GetInfoFailures) GetResponseBody() string {
	if x != nil && x.ResponseBody != nil {
		return *x.ResponseBody
	}
	return ""
}

func (x *GetInfoFailures) GetContext() string {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return ""
}

type ImageDownload struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CdnDomain         *string                `protobuf:"bytes,1,opt,name=cdn_domain,json=cdnDomain,proto3,oneof" json:"cdn_domain,omitempty"`
	BytesFromCdn      *int64                 `protobuf:"varint,2,opt,name=bytes_from_cdn,json=bytesFromCdn,proto3,oneof" json:"bytes_from_cdn,omitempty"`
	CdnTotalLatency   *int64                 `protobuf:"varint,3,opt,name=cdn_total_latency,json=cdnTotalLatency,proto3,oneof" json:"cdn_total_latency,omitempty"`
	CdnInitialLatency *int64                 `protobuf:"varint,4,opt,name=cdn_initial_latency,json=cdnInitialLatency,proto3,oneof" json:"cdn_initial_latency,omitempty"`
	CdnProtocol       *string                `protobuf:"bytes,5,opt,name=cdn_protocol,json=cdnProtocol,proto3,oneof" json:"cdn_protocol,omitempty"`
	NewConnection     *bool                  `protobuf:"varint,6,opt,name=new_connection,json=newConnection,proto3,oneof" json:"new_connection,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ImageDownload) Reset() {
	*x = ImageDownload{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageDownload) ProtoMessage() {}

func (x *ImageDownload) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageDownload.ProtoReflect.Descriptor instead.
func (*ImageDownload) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{74}
}

func (x *ImageDownload) GetCdnDomain() string {
	if x != nil && x.CdnDomain != nil {
		return *x.CdnDomain
	}
	return ""
}

func (x *ImageDownload) GetBytesFromCdn() int64 {
	if x != nil && x.BytesFromCdn != nil {
		return *x.BytesFromCdn
	}
	return 0
}

func (x *ImageDownload) GetCdnTotalLatency() int64 {
	if x != nil && x.CdnTotalLatency != nil {
		return *x.CdnTotalLatency
	}
	return 0
}

func (x *ImageDownload) GetCdnInitialLatency() int64 {
	if x != nil && x.CdnInitialLatency != nil {
		return *x.CdnInitialLatency
	}
	return 0
}

func (x *ImageDownload) GetCdnProtocol() string {
	if x != nil && x.CdnProtocol != nil {
		return *x.CdnProtocol
	}
	return ""
}

func (x *ImageDownload) GetNewConnection() bool {
	if x != nil && x.NewConnection != nil {
		return *x.NewConnection
	}
	return false
}

type LocalFileSyncError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *string                `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalFileSyncError) Reset() {
	*x = LocalFileSyncError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalFileSyncError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalFileSyncError) ProtoMessage() {}

func (x *LocalFileSyncError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalFileSyncError.ProtoReflect.Descriptor instead.
func (*LocalFileSyncError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{75}
}

func (x *LocalFileSyncError) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type LocalFilesError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     *int64                 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	Context       *string                `protobuf:"bytes,2,opt,name=context,proto3,oneof" json:"context,omitempty"`
	Info          *string                `protobuf:"bytes,3,opt,name=info,proto3,oneof" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalFilesError) Reset() {
	*x = LocalFilesError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalFilesError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalFilesError) ProtoMessage() {}

func (x *LocalFilesError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalFilesError.ProtoReflect.Descriptor instead.
func (*LocalFilesError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{76}
}

func (x *LocalFilesError) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *LocalFilesError) GetContext() string {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return ""
}

func (x *LocalFilesError) GetInfo() string {
	if x != nil && x.Info != nil {
		return *x.Info
	}
	return ""
}

type LocalFilesImport struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Tracks          *int64                 `protobuf:"varint,1,opt,name=tracks,proto3,oneof" json:"tracks,omitempty"`
	DuplicateTracks *int64                 `protobuf:"varint,2,opt,name=duplicate_tracks,json=duplicateTracks,proto3,oneof" json:"duplicate_tracks,omitempty"`
	FailedTracks    *int64                 `protobuf:"varint,3,opt,name=failed_tracks,json=failedTracks,proto3,oneof" json:"failed_tracks,omitempty"`
	MatchedTracks   *int64                 `protobuf:"varint,4,opt,name=matched_tracks,json=matchedTracks,proto3,oneof" json:"matched_tracks,omitempty"`
	Source          *string                `protobuf:"bytes,5,opt,name=source,proto3,oneof" json:"source,omitempty"`
	InvalidTracks   *int64                 `protobuf:"varint,6,opt,name=invalid_tracks,json=invalidTracks,proto3,oneof" json:"invalid_tracks,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LocalFilesImport) Reset() {
	*x = LocalFilesImport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalFilesImport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalFilesImport) ProtoMessage() {}

func (x *LocalFilesImport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalFilesImport.ProtoReflect.Descriptor instead.
func (*LocalFilesImport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{77}
}

func (x *LocalFilesImport) GetTracks() int64 {
	if x != nil && x.Tracks != nil {
		return *x.Tracks
	}
	return 0
}

func (x *LocalFilesImport) GetDuplicateTracks() int64 {
	if x != nil && x.DuplicateTracks != nil {
		return *x.DuplicateTracks
	}
	return 0
}

func (x *LocalFilesImport) GetFailedTracks() int64 {
	if x != nil && x.FailedTracks != nil {
		return *x.FailedTracks
	}
	return 0
}

func (x *LocalFilesImport) GetMatchedTracks() int64 {
	if x != nil && x.MatchedTracks != nil {
		return *x.MatchedTracks
	}
	return 0
}

func (x *LocalFilesImport) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *LocalFilesImport) GetInvalidTracks() int64 {
	if x != nil && x.InvalidTracks != nil {
		return *x.InvalidTracks
	}
	return 0
}

type LocalFilesReport struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	TotalTracks               *int64                 `protobuf:"varint,1,opt,name=total_tracks,json=totalTracks,proto3,oneof" json:"total_tracks,omitempty"`
	TotalSize                 *int64                 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3,oneof" json:"total_size,omitempty"`
	OwnedTracks               *int64                 `protobuf:"varint,3,opt,name=owned_tracks,json=ownedTracks,proto3,oneof" json:"owned_tracks,omitempty"`
	OwnedSize                 *int64                 `protobuf:"varint,4,opt,name=owned_size,json=ownedSize,proto3,oneof" json:"owned_size,omitempty"`
	TracksNotFound            *int64                 `protobuf:"varint,5,opt,name=tracks_not_found,json=tracksNotFound,proto3,oneof" json:"tracks_not_found,omitempty"`
	TracksBadFormat           *int64                 `protobuf:"varint,6,opt,name=tracks_bad_format,json=tracksBadFormat,proto3,oneof" json:"tracks_bad_format,omitempty"`
	TracksDrmProtected        *int64                 `protobuf:"varint,7,opt,name=tracks_drm_protected,json=tracksDrmProtected,proto3,oneof" json:"tracks_drm_protected,omitempty"`
	TracksUnknownPruned       *int64                 `protobuf:"varint,8,opt,name=tracks_unknown_pruned,json=tracksUnknownPruned,proto3,oneof" json:"tracks_unknown_pruned,omitempty"`
	TracksReallocatedRepaired *int64                 `protobuf:"varint,9,opt,name=tracks_reallocated_repaired,json=tracksReallocatedRepaired,proto3,oneof" json:"tracks_reallocated_repaired,omitempty"`
	EnabledSources            *int64                 `protobuf:"varint,10,opt,name=enabled_sources,json=enabledSources,proto3,oneof" json:"enabled_sources,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *LocalFilesReport) Reset() {
	*x = LocalFilesReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalFilesReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalFilesReport) ProtoMessage() {}

func (x *LocalFilesReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalFilesReport.ProtoReflect.Descriptor instead.
func (*LocalFilesReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{78}
}

func (x *LocalFilesReport) GetTotalTracks() int64 {
	if x != nil && x.TotalTracks != nil {
		return *x.TotalTracks
	}
	return 0
}

func (x *LocalFilesReport) GetTotalSize() int64 {
	if x != nil && x.TotalSize != nil {
		return *x.TotalSize
	}
	return 0
}

func (x *LocalFilesReport) GetOwnedTracks() int64 {
	if x != nil && x.OwnedTracks != nil {
		return *x.OwnedTracks
	}
	return 0
}

func (x *LocalFilesReport) GetOwnedSize() int64 {
	if x != nil && x.OwnedSize != nil {
		return *x.OwnedSize
	}
	return 0
}

func (x *LocalFilesReport) GetTracksNotFound() int64 {
	if x != nil && x.TracksNotFound != nil {
		return *x.TracksNotFound
	}
	return 0
}

func (x *LocalFilesReport) GetTracksBadFormat() int64 {
	if x != nil && x.TracksBadFormat != nil {
		return *x.TracksBadFormat
	}
	return 0
}

func (x *LocalFilesReport) GetTracksDrmProtected() int64 {
	if x != nil && x.TracksDrmProtected != nil {
		return *x.TracksDrmProtected
	}
	return 0
}

func (x *LocalFilesReport) GetTracksUnknownPruned() int64 {
	if x != nil && x.TracksUnknownPruned != nil {
		return *x.TracksUnknownPruned
	}
	return 0
}

func (x *LocalFilesReport) GetTracksReallocatedRepaired() int64 {
	if x != nil && x.TracksReallocatedRepaired != nil {
		return *x.TracksReallocatedRepaired
	}
	return 0
}

func (x *LocalFilesReport) GetEnabledSources() int64 {
	if x != nil && x.EnabledSources != nil {
		return *x.EnabledSources
	}
	return 0
}

type LocalFilesSourceEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Event         *string                `protobuf:"bytes,2,opt,name=event,proto3,oneof" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalFilesSourceEvent) Reset() {
	*x = LocalFilesSourceEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalFilesSourceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalFilesSourceEvent) ProtoMessage() {}

func (x *LocalFilesSourceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalFilesSourceEvent.ProtoReflect.Descriptor instead.
func (*LocalFilesSourceEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{79}
}

func (x *LocalFilesSourceEvent) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *LocalFilesSourceEvent) GetEvent() string {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return ""
}

type LocalFilesSourceReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Tracks        *int64                 `protobuf:"varint,2,opt,name=tracks,proto3,oneof" json:"tracks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalFilesSourceReport) Reset() {
	*x = LocalFilesSourceReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalFilesSourceReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalFilesSourceReport) ProtoMessage() {}

func (x *LocalFilesSourceReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalFilesSourceReport.ProtoReflect.Descriptor instead.
func (*LocalFilesSourceReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{80}
}

func (x *LocalFilesSourceReport) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *LocalFilesSourceReport) GetTracks() int64 {
	if x != nil && x.Tracks != nil {
		return *x.Tracks
	}
	return 0
}

type Login5TaskNonAuth struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CredentialsType  *string                `protobuf:"bytes,1,opt,name=credentials_type,json=credentialsType,proto3,oneof" json:"credentials_type,omitempty"`
	ProtocolVersion  *string                `protobuf:"bytes,2,opt,name=protocol_version,json=protocolVersion,proto3,oneof" json:"protocol_version,omitempty"`
	HttpResponse     []int32                `protobuf:"varint,3,rep,packed,name=http_response,json=httpResponse,proto3" json:"http_response,omitempty"`
	Login5Response   []string               `protobuf:"bytes,4,rep,name=login5_response,json=login5Response,proto3" json:"login5_response,omitempty"`
	ResponseDuration []int64                `protobuf:"varint,5,rep,packed,name=response_duration,json=responseDuration,proto3" json:"response_duration,omitempty"`
	ClientError      *string                `protobuf:"bytes,6,opt,name=client_error,json=clientError,proto3,oneof" json:"client_error,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Login5TaskNonAuth) Reset() {
	*x = Login5TaskNonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Login5TaskNonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Login5TaskNonAuth) ProtoMessage() {}

func (x *Login5TaskNonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Login5TaskNonAuth.ProtoReflect.Descriptor instead.
func (*Login5TaskNonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{81}
}

func (x *Login5TaskNonAuth) GetCredentialsType() string {
	if x != nil && x.CredentialsType != nil {
		return *x.CredentialsType
	}
	return ""
}

func (x *Login5TaskNonAuth) GetProtocolVersion() string {
	if x != nil && x.ProtocolVersion != nil {
		return *x.ProtocolVersion
	}
	return ""
}

func (x *Login5TaskNonAuth) GetHttpResponse() []int32 {
	if x != nil {
		return x.HttpResponse
	}
	return nil
}

func (x *Login5TaskNonAuth) GetLogin5Response() []string {
	if x != nil {
		return x.Login5Response
	}
	return nil
}

func (x *Login5TaskNonAuth) GetResponseDuration() []int64 {
	if x != nil {
		return x.ResponseDuration
	}
	return nil
}

func (x *Login5TaskNonAuth) GetClientError() string {
	if x != nil && x.ClientError != nil {
		return *x.ClientError
	}
	return ""
}

type MdnsLoginFailures struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	DeviceId              *string                `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	ErrorCode             *int64                 `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	ResponseBody          *string                `protobuf:"bytes,3,opt,name=response_body,json=responseBody,proto3,oneof" json:"response_body,omitempty"`
	Request               *string                `protobuf:"bytes,4,opt,name=request,proto3,oneof" json:"request,omitempty"`
	EsdkInternalErrorCode *int64                 `protobuf:"varint,5,opt,name=esdk_internal_error_code,json=esdkInternalErrorCode,proto3,oneof" json:"esdk_internal_error_code,omitempty"`
	Context               *string                `protobuf:"bytes,6,opt,name=context,proto3,oneof" json:"context,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *MdnsLoginFailures) Reset() {
	*x = MdnsLoginFailures{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MdnsLoginFailures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MdnsLoginFailures) ProtoMessage() {}

func (x *MdnsLoginFailures) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MdnsLoginFailures.ProtoReflect.Descriptor instead.
func (*MdnsLoginFailures) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{82}
}

func (x *MdnsLoginFailures) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *MdnsLoginFailures) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *MdnsLoginFailures) GetResponseBody() string {
	if x != nil && x.ResponseBody != nil {
		return *x.ResponseBody
	}
	return ""
}

func (x *MdnsLoginFailures) GetRequest() string {
	if x != nil && x.Request != nil {
		return *x.Request
	}
	return ""
}

func (x *MdnsLoginFailures) GetEsdkInternalErrorCode() int64 {
	if x != nil && x.EsdkInternalErrorCode != nil {
		return *x.EsdkInternalErrorCode
	}
	return 0
}

func (x *MdnsLoginFailures) GetContext() string {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return ""
}

type Offline2ClientError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *string                `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	DeviceId      *string                `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	CacheId       *string                `protobuf:"bytes,3,opt,name=cache_id,json=cacheId,proto3,oneof" json:"cache_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Offline2ClientError) Reset() {
	*x = Offline2ClientError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Offline2ClientError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offline2ClientError) ProtoMessage() {}

func (x *Offline2ClientError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offline2ClientError.ProtoReflect.Descriptor instead.
func (*Offline2ClientError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{83}
}

func (x *Offline2ClientError) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *Offline2ClientError) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *Offline2ClientError) GetCacheId() string {
	if x != nil && x.CacheId != nil {
		return *x.CacheId
	}
	return ""
}

type Offline2ClientEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *string                `protobuf:"bytes,1,opt,name=event,proto3,oneof" json:"event,omitempty"`
	DeviceId      *string                `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	CacheId       *string                `protobuf:"bytes,3,opt,name=cache_id,json=cacheId,proto3,oneof" json:"cache_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Offline2ClientEvent) Reset() {
	*x = Offline2ClientEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Offline2ClientEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offline2ClientEvent) ProtoMessage() {}

func (x *Offline2ClientEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offline2ClientEvent.ProtoReflect.Descriptor instead.
func (*Offline2ClientEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{84}
}

func (x *Offline2ClientEvent) GetEvent() string {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return ""
}

func (x *Offline2ClientEvent) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *Offline2ClientEvent) GetCacheId() string {
	if x != nil && x.CacheId != nil {
		return *x.CacheId
	}
	return ""
}

type OfflineError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     *int64                 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	Track         *string                `protobuf:"bytes,2,opt,name=track,proto3,oneof" json:"track,omitempty"`
	CacheId       *string                `protobuf:"bytes,3,opt,name=cache_id,json=cacheId,proto3,oneof" json:"cache_id,omitempty"`
	Details       *string                `protobuf:"bytes,4,opt,name=details,proto3,oneof" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfflineError) Reset() {
	*x = OfflineError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfflineError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineError) ProtoMessage() {}

func (x *OfflineError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineError.ProtoReflect.Descriptor instead.
func (*OfflineError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{85}
}

func (x *OfflineError) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *OfflineError) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

func (x *OfflineError) GetCacheId() string {
	if x != nil && x.CacheId != nil {
		return *x.CacheId
	}
	return ""
}

func (x *OfflineError) GetDetails() string {
	if x != nil && x.Details != nil {
		return *x.Details
	}
	return ""
}

type OfflineEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *string                `protobuf:"bytes,1,opt,name=event,proto3,oneof" json:"event,omitempty"`
	Data          *string                `protobuf:"bytes,2,opt,name=data,proto3,oneof" json:"data,omitempty"`
	CacheId       *string                `protobuf:"bytes,3,opt,name=cache_id,json=cacheId,proto3,oneof" json:"cache_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OfflineEvent) Reset() {
	*x = OfflineEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfflineEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineEvent) ProtoMessage() {}

func (x *OfflineEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineEvent.ProtoReflect.Descriptor instead.
func (*OfflineEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{86}
}

func (x *OfflineEvent) GetEvent() string {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return ""
}

func (x *OfflineEvent) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

func (x *OfflineEvent) GetCacheId() string {
	if x != nil && x.CacheId != nil {
		return *x.CacheId
	}
	return ""
}

type OfflinePlayableCacheReport struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	NumTracks              *int64                 `protobuf:"varint,1,opt,name=num_tracks,json=numTracks,proto3,oneof" json:"num_tracks,omitempty"`
	NumMissingFiles        *int64                 `protobuf:"varint,2,opt,name=num_missing_files,json=numMissingFiles,proto3,oneof" json:"num_missing_files,omitempty"`
	NumMissingKeys         *int64                 `protobuf:"varint,3,opt,name=num_missing_keys,json=numMissingKeys,proto3,oneof" json:"num_missing_keys,omitempty"`
	NumMissingMetadata     *int64                 `protobuf:"varint,4,opt,name=num_missing_metadata,json=numMissingMetadata,proto3,oneof" json:"num_missing_metadata,omitempty"`
	NumExpired             *int64                 `protobuf:"varint,5,opt,name=num_expired,json=numExpired,proto3,oneof" json:"num_expired,omitempty"`
	NumMissingInAudioIndex *int64                 `protobuf:"varint,6,opt,name=num_missing_in_audio_index,json=numMissingInAudioIndex,proto3,oneof" json:"num_missing_in_audio_index,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *OfflinePlayableCacheReport) Reset() {
	*x = OfflinePlayableCacheReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfflinePlayableCacheReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflinePlayableCacheReport) ProtoMessage() {}

func (x *OfflinePlayableCacheReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflinePlayableCacheReport.ProtoReflect.Descriptor instead.
func (*OfflinePlayableCacheReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{87}
}

func (x *OfflinePlayableCacheReport) GetNumTracks() int64 {
	if x != nil && x.NumTracks != nil {
		return *x.NumTracks
	}
	return 0
}

func (x *OfflinePlayableCacheReport) GetNumMissingFiles() int64 {
	if x != nil && x.NumMissingFiles != nil {
		return *x.NumMissingFiles
	}
	return 0
}

func (x *OfflinePlayableCacheReport) GetNumMissingKeys() int64 {
	if x != nil && x.NumMissingKeys != nil {
		return *x.NumMissingKeys
	}
	return 0
}

func (x *OfflinePlayableCacheReport) GetNumMissingMetadata() int64 {
	if x != nil && x.NumMissingMetadata != nil {
		return *x.NumMissingMetadata
	}
	return 0
}

func (x *OfflinePlayableCacheReport) GetNumExpired() int64 {
	if x != nil && x.NumExpired != nil {
		return *x.NumExpired
	}
	return 0
}

func (x *OfflinePlayableCacheReport) GetNumMissingInAudioIndex() int64 {
	if x != nil && x.NumMissingInAudioIndex != nil {
		return *x.NumMissingInAudioIndex
	}
	return 0
}

type OfflineReport struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	TotalNumTracks             *int64                 `protobuf:"varint,1,opt,name=total_num_tracks,json=totalNumTracks,proto3,oneof" json:"total_num_tracks,omitempty"`
	NumDownloadedTracks        *int64                 `protobuf:"varint,2,opt,name=num_downloaded_tracks,json=numDownloadedTracks,proto3,oneof" json:"num_downloaded_tracks,omitempty"`
	NumDownloadedTracksKeyless *int64                 `protobuf:"varint,3,opt,name=num_downloaded_tracks_keyless,json=numDownloadedTracksKeyless,proto3,oneof" json:"num_downloaded_tracks_keyless,omitempty"`
	TotalNumLinks              *int64                 `protobuf:"varint,4,opt,name=total_num_links,json=totalNumLinks,proto3,oneof" json:"total_num_links,omitempty"`
	TotalNumLinksKeyless       *int64                 `protobuf:"varint,5,opt,name=total_num_links_keyless,json=totalNumLinksKeyless,proto3,oneof" json:"total_num_links_keyless,omitempty"`
	ContextNumLinksMap         map[string]int64       `protobuf:"bytes,6,rep,name=context_num_links_map,json=contextNumLinksMap,proto3" json:"context_num_links_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	LinktypeNumTracksMap       map[string]int64       `protobuf:"bytes,7,rep,name=linktype_num_tracks_map,json=linktypeNumTracksMap,proto3" json:"linktype_num_tracks_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	TrackLimit                 *int64                 `protobuf:"varint,8,opt,name=track_limit,json=trackLimit,proto3,oneof" json:"track_limit,omitempty"`
	Expiry                     *int64                 `protobuf:"varint,9,opt,name=expiry,proto3,oneof" json:"expiry,omitempty"`
	ChangeReason               *string                `protobuf:"bytes,10,opt,name=change_reason,json=changeReason,proto3,oneof" json:"change_reason,omitempty"`
	OfflineKeys                *int64                 `protobuf:"varint,11,opt,name=offline_keys,json=offlineKeys,proto3,oneof" json:"offline_keys,omitempty"`
	CachedKeys                 *int64                 `protobuf:"varint,12,opt,name=cached_keys,json=cachedKeys,proto3,oneof" json:"cached_keys,omitempty"`
	TotalNumEpisodes           *int64                 `protobuf:"varint,13,opt,name=total_num_episodes,json=totalNumEpisodes,proto3,oneof" json:"total_num_episodes,omitempty"`
	NumDownloadedEpisodes      *int64                 `protobuf:"varint,14,opt,name=num_downloaded_episodes,json=numDownloadedEpisodes,proto3,oneof" json:"num_downloaded_episodes,omitempty"`
	EpisodeLimit               *int64                 `protobuf:"varint,15,opt,name=episode_limit,json=episodeLimit,proto3,oneof" json:"episode_limit,omitempty"`
	EpisodeExpiry              *int64                 `protobuf:"varint,16,opt,name=episode_expiry,json=episodeExpiry,proto3,oneof" json:"episode_expiry,omitempty"`
	AbpChapterExpiry           *int64                 `protobuf:"varint,17,opt,name=abp_chapter_expiry,json=abpChapterExpiry,proto3,oneof" json:"abp_chapter_expiry,omitempty"`
	ScheduleStatsMap           map[string]int64       `protobuf:"bytes,18,rep,name=schedule_stats_map,json=scheduleStatsMap,proto3" json:"schedule_stats_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	UpdateStatsMap             map[string]int64       `protobuf:"bytes,19,rep,name=update_stats_map,json=updateStatsMap,proto3" json:"update_stats_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	NumUpdateAllLists          *int64                 `protobuf:"varint,20,opt,name=num_update_all_lists,json=numUpdateAllLists,proto3,oneof" json:"num_update_all_lists,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *OfflineReport) Reset() {
	*x = OfflineReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfflineReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineReport) ProtoMessage() {}

func (x *OfflineReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineReport.ProtoReflect.Descriptor instead.
func (*OfflineReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{88}
}

func (x *OfflineReport) GetTotalNumTracks() int64 {
	if x != nil && x.TotalNumTracks != nil {
		return *x.TotalNumTracks
	}
	return 0
}

func (x *OfflineReport) GetNumDownloadedTracks() int64 {
	if x != nil && x.NumDownloadedTracks != nil {
		return *x.NumDownloadedTracks
	}
	return 0
}

func (x *OfflineReport) GetNumDownloadedTracksKeyless() int64 {
	if x != nil && x.NumDownloadedTracksKeyless != nil {
		return *x.NumDownloadedTracksKeyless
	}
	return 0
}

func (x *OfflineReport) GetTotalNumLinks() int64 {
	if x != nil && x.TotalNumLinks != nil {
		return *x.TotalNumLinks
	}
	return 0
}

func (x *OfflineReport) GetTotalNumLinksKeyless() int64 {
	if x != nil && x.TotalNumLinksKeyless != nil {
		return *x.TotalNumLinksKeyless
	}
	return 0
}

func (x *OfflineReport) GetContextNumLinksMap() map[string]int64 {
	if x != nil {
		return x.ContextNumLinksMap
	}
	return nil
}

func (x *OfflineReport) GetLinktypeNumTracksMap() map[string]int64 {
	if x != nil {
		return x.LinktypeNumTracksMap
	}
	return nil
}

func (x *OfflineReport) GetTrackLimit() int64 {
	if x != nil && x.TrackLimit != nil {
		return *x.TrackLimit
	}
	return 0
}

func (x *OfflineReport) GetExpiry() int64 {
	if x != nil && x.Expiry != nil {
		return *x.Expiry
	}
	return 0
}

func (x *OfflineReport) GetChangeReason() string {
	if x != nil && x.ChangeReason != nil {
		return *x.ChangeReason
	}
	return ""
}

func (x *OfflineReport) GetOfflineKeys() int64 {
	if x != nil && x.OfflineKeys != nil {
		return *x.OfflineKeys
	}
	return 0
}

func (x *OfflineReport) GetCachedKeys() int64 {
	if x != nil && x.CachedKeys != nil {
		return *x.CachedKeys
	}
	return 0
}

func (x *OfflineReport) GetTotalNumEpisodes() int64 {
	if x != nil && x.TotalNumEpisodes != nil {
		return *x.TotalNumEpisodes
	}
	return 0
}

func (x *OfflineReport) GetNumDownloadedEpisodes() int64 {
	if x != nil && x.NumDownloadedEpisodes != nil {
		return *x.NumDownloadedEpisodes
	}
	return 0
}

func (x *OfflineReport) GetEpisodeLimit() int64 {
	if x != nil && x.EpisodeLimit != nil {
		return *x.EpisodeLimit
	}
	return 0
}

func (x *OfflineReport) GetEpisodeExpiry() int64 {
	if x != nil && x.EpisodeExpiry != nil {
		return *x.EpisodeExpiry
	}
	return 0
}

func (x *OfflineReport) GetAbpChapterExpiry() int64 {
	if x != nil && x.AbpChapterExpiry != nil {
		return *x.AbpChapterExpiry
	}
	return 0
}

func (x *OfflineReport) GetScheduleStatsMap() map[string]int64 {
	if x != nil {
		return x.ScheduleStatsMap
	}
	return nil
}

func (x *OfflineReport) GetUpdateStatsMap() map[string]int64 {
	if x != nil {
		return x.UpdateStatsMap
	}
	return nil
}

func (x *OfflineReport) GetNumUpdateAllLists() int64 {
	if x != nil && x.NumUpdateAllLists != nil {
		return *x.NumUpdateAllLists
	}
	return 0
}

type PendingEventsDroppedEventNonAuth struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Operation       *string                `protobuf:"bytes,1,opt,name=operation,proto3,oneof" json:"operation,omitempty"`
	ErrorType       *string                `protobuf:"bytes,2,opt,name=error_type,json=errorType,proto3,oneof" json:"error_type,omitempty"`
	UnderlyingError *string                `protobuf:"bytes,3,opt,name=underlying_error,json=underlyingError,proto3,oneof" json:"underlying_error,omitempty"`
	EventType       *string                `protobuf:"bytes,4,opt,name=event_type,json=eventType,proto3,oneof" json:"event_type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PendingEventsDroppedEventNonAuth) Reset() {
	*x = PendingEventsDroppedEventNonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingEventsDroppedEventNonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingEventsDroppedEventNonAuth) ProtoMessage() {}

func (x *PendingEventsDroppedEventNonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingEventsDroppedEventNonAuth.ProtoReflect.Descriptor instead.
func (*PendingEventsDroppedEventNonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{89}
}

func (x *PendingEventsDroppedEventNonAuth) GetOperation() string {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return ""
}

func (x *PendingEventsDroppedEventNonAuth) GetErrorType() string {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return ""
}

func (x *PendingEventsDroppedEventNonAuth) GetUnderlyingError() string {
	if x != nil && x.UnderlyingError != nil {
		return *x.UnderlyingError
	}
	return ""
}

func (x *PendingEventsDroppedEventNonAuth) GetEventType() string {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return ""
}

type PendingEventsInternalErrorNonAuth struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Operation       *string                `protobuf:"bytes,1,opt,name=operation,proto3,oneof" json:"operation,omitempty"`
	ErrorType       *string                `protobuf:"bytes,2,opt,name=error_type,json=errorType,proto3,oneof" json:"error_type,omitempty"`
	UnderlyingError *string                `protobuf:"bytes,3,opt,name=underlying_error,json=underlyingError,proto3,oneof" json:"underlying_error,omitempty"`
	EventType       *string                `protobuf:"bytes,4,opt,name=event_type,json=eventType,proto3,oneof" json:"event_type,omitempty"`
	EventSequenceNo *int64                 `protobuf:"varint,5,opt,name=event_sequence_no,json=eventSequenceNo,proto3,oneof" json:"event_sequence_no,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PendingEventsInternalErrorNonAuth) Reset() {
	*x = PendingEventsInternalErrorNonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingEventsInternalErrorNonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingEventsInternalErrorNonAuth) ProtoMessage() {}

func (x *PendingEventsInternalErrorNonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingEventsInternalErrorNonAuth.ProtoReflect.Descriptor instead.
func (*PendingEventsInternalErrorNonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{90}
}

func (x *PendingEventsInternalErrorNonAuth) GetOperation() string {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return ""
}

func (x *PendingEventsInternalErrorNonAuth) GetErrorType() string {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return ""
}

func (x *PendingEventsInternalErrorNonAuth) GetUnderlyingError() string {
	if x != nil && x.UnderlyingError != nil {
		return *x.UnderlyingError
	}
	return ""
}

func (x *PendingEventsInternalErrorNonAuth) GetEventType() string {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return ""
}

func (x *PendingEventsInternalErrorNonAuth) GetEventSequenceNo() int64 {
	if x != nil && x.EventSequenceNo != nil {
		return *x.EventSequenceNo
	}
	return 0
}

type PendingEventsStatsNonAuth struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	EventNames          []string               `protobuf:"bytes,1,rep,name=event_names,json=eventNames,proto3" json:"event_names,omitempty"`
	SequenceNumberMins  []int64                `protobuf:"varint,2,rep,packed,name=sequence_number_mins,json=sequenceNumberMins,proto3" json:"sequence_number_mins,omitempty"`
	SequenceNumberNexts []int64                `protobuf:"varint,3,rep,packed,name=sequence_number_nexts,json=sequenceNumberNexts,proto3" json:"sequence_number_nexts,omitempty"`
	StorageSizes        []int64                `protobuf:"varint,4,rep,packed,name=storage_sizes,json=storageSizes,proto3" json:"storage_sizes,omitempty"`
	NumDroppedEvents    []int64                `protobuf:"varint,5,rep,packed,name=num_dropped_events,json=numDroppedEvents,proto3" json:"num_dropped_events,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PendingEventsStatsNonAuth) Reset() {
	*x = PendingEventsStatsNonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingEventsStatsNonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingEventsStatsNonAuth) ProtoMessage() {}

func (x *PendingEventsStatsNonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingEventsStatsNonAuth.ProtoReflect.Descriptor instead.
func (*PendingEventsStatsNonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{91}
}

func (x *PendingEventsStatsNonAuth) GetEventNames() []string {
	if x != nil {
		return x.EventNames
	}
	return nil
}

func (x *PendingEventsStatsNonAuth) GetSequenceNumberMins() []int64 {
	if x != nil {
		return x.SequenceNumberMins
	}
	return nil
}

func (x *PendingEventsStatsNonAuth) GetSequenceNumberNexts() []int64 {
	if x != nil {
		return x.SequenceNumberNexts
	}
	return nil
}

func (x *PendingEventsStatsNonAuth) GetStorageSizes() []int64 {
	if x != nil {
		return x.StorageSizes
	}
	return nil
}

func (x *PendingEventsStatsNonAuth) GetNumDroppedEvents() []int64 {
	if x != nil {
		return x.NumDroppedEvents
	}
	return nil
}

type PickAndShuffleCapStateRestore struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	CapDay                 *int64                 `protobuf:"varint,1,opt,name=cap_day,json=capDay,proto3,oneof" json:"cap_day,omitempty"`
	CapMonth               *int64                 `protobuf:"varint,2,opt,name=cap_month,json=capMonth,proto3,oneof" json:"cap_month,omitempty"`
	StreamCount            *int64                 `protobuf:"varint,3,opt,name=stream_count,json=streamCount,proto3,oneof" json:"stream_count,omitempty"`
	TimeCap                *int64                 `protobuf:"varint,4,opt,name=time_cap,json=timeCap,proto3,oneof" json:"time_cap,omitempty"`
	CapConfigurationOrigin *string                `protobuf:"bytes,5,opt,name=cap_configuration_origin,json=capConfigurationOrigin,proto3,oneof" json:"cap_configuration_origin,omitempty"`
	DynamicCapEnabled      *bool                  `protobuf:"varint,6,opt,name=dynamic_cap_enabled,json=dynamicCapEnabled,proto3,oneof" json:"dynamic_cap_enabled,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PickAndShuffleCapStateRestore) Reset() {
	*x = PickAndShuffleCapStateRestore{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PickAndShuffleCapStateRestore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickAndShuffleCapStateRestore) ProtoMessage() {}

func (x *PickAndShuffleCapStateRestore) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickAndShuffleCapStateRestore.ProtoReflect.Descriptor instead.
func (*PickAndShuffleCapStateRestore) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{92}
}

func (x *PickAndShuffleCapStateRestore) GetCapDay() int64 {
	if x != nil && x.CapDay != nil {
		return *x.CapDay
	}
	return 0
}

func (x *PickAndShuffleCapStateRestore) GetCapMonth() int64 {
	if x != nil && x.CapMonth != nil {
		return *x.CapMonth
	}
	return 0
}

func (x *PickAndShuffleCapStateRestore) GetStreamCount() int64 {
	if x != nil && x.StreamCount != nil {
		return *x.StreamCount
	}
	return 0
}

func (x *PickAndShuffleCapStateRestore) GetTimeCap() int64 {
	if x != nil && x.TimeCap != nil {
		return *x.TimeCap
	}
	return 0
}

func (x *PickAndShuffleCapStateRestore) GetCapConfigurationOrigin() string {
	if x != nil && x.CapConfigurationOrigin != nil {
		return *x.CapConfigurationOrigin
	}
	return ""
}

func (x *PickAndShuffleCapStateRestore) GetDynamicCapEnabled() bool {
	if x != nil && x.DynamicCapEnabled != nil {
		return *x.DynamicCapEnabled
	}
	return false
}

type PickAndShuffleCapStateSave struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	CapDay                 *int64                 `protobuf:"varint,1,opt,name=cap_day,json=capDay,proto3,oneof" json:"cap_day,omitempty"`
	CapMonth               *int64                 `protobuf:"varint,2,opt,name=cap_month,json=capMonth,proto3,oneof" json:"cap_month,omitempty"`
	StreamCount            *int64                 `protobuf:"varint,3,opt,name=stream_count,json=streamCount,proto3,oneof" json:"stream_count,omitempty"`
	TimeCap                *int64                 `protobuf:"varint,4,opt,name=time_cap,json=timeCap,proto3,oneof" json:"time_cap,omitempty"`
	CapConfigurationOrigin *string                `protobuf:"bytes,5,opt,name=cap_configuration_origin,json=capConfigurationOrigin,proto3,oneof" json:"cap_configuration_origin,omitempty"`
	DynamicCapEnabled      *bool                  `protobuf:"varint,6,opt,name=dynamic_cap_enabled,json=dynamicCapEnabled,proto3,oneof" json:"dynamic_cap_enabled,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PickAndShuffleCapStateSave) Reset() {
	*x = PickAndShuffleCapStateSave{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PickAndShuffleCapStateSave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickAndShuffleCapStateSave) ProtoMessage() {}

func (x *PickAndShuffleCapStateSave) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickAndShuffleCapStateSave.ProtoReflect.Descriptor instead.
func (*PickAndShuffleCapStateSave) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{93}
}

func (x *PickAndShuffleCapStateSave) GetCapDay() int64 {
	if x != nil && x.CapDay != nil {
		return *x.CapDay
	}
	return 0
}

func (x *PickAndShuffleCapStateSave) GetCapMonth() int64 {
	if x != nil && x.CapMonth != nil {
		return *x.CapMonth
	}
	return 0
}

func (x *PickAndShuffleCapStateSave) GetStreamCount() int64 {
	if x != nil && x.StreamCount != nil {
		return *x.StreamCount
	}
	return 0
}

func (x *PickAndShuffleCapStateSave) GetTimeCap() int64 {
	if x != nil && x.TimeCap != nil {
		return *x.TimeCap
	}
	return 0
}

func (x *PickAndShuffleCapStateSave) GetCapConfigurationOrigin() string {
	if x != nil && x.CapConfigurationOrigin != nil {
		return *x.CapConfigurationOrigin
	}
	return ""
}

func (x *PickAndShuffleCapStateSave) GetDynamicCapEnabled() bool {
	if x != nil && x.DynamicCapEnabled != nil {
		return *x.DynamicCapEnabled
	}
	return false
}

type PlayedStateApplied struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId      *string                `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	ContentUri      *string                `protobuf:"bytes,2,opt,name=content_uri,json=contentUri,proto3,oneof" json:"content_uri,omitempty"`
	ClientTimestamp *int64                 `protobuf:"varint,3,opt,name=client_timestamp,json=clientTimestamp,proto3,oneof" json:"client_timestamp,omitempty"`
	PlayPosition    *int32                 `protobuf:"varint,4,opt,name=play_position,json=playPosition,proto3,oneof" json:"play_position,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PlayedStateApplied) Reset() {
	*x = PlayedStateApplied{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayedStateApplied) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayedStateApplied) ProtoMessage() {}

func (x *PlayedStateApplied) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayedStateApplied.ProtoReflect.Descriptor instead.
func (*PlayedStateApplied) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{94}
}

func (x *PlayedStateApplied) GetPlaybackId() string {
	if x != nil && x.PlaybackId != nil {
		return *x.PlaybackId
	}
	return ""
}

func (x *PlayedStateApplied) GetContentUri() string {
	if x != nil && x.ContentUri != nil {
		return *x.ContentUri
	}
	return ""
}

func (x *PlayedStateApplied) GetClientTimestamp() int64 {
	if x != nil && x.ClientTimestamp != nil {
		return *x.ClientTimestamp
	}
	return 0
}

func (x *PlayedStateApplied) GetPlayPosition() int32 {
	if x != nil && x.PlayPosition != nil {
		return *x.PlayPosition
	}
	return 0
}

type PlayedStateSyncFailure struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	NumberOfPlayedStates *int32                 `protobuf:"varint,1,opt,name=number_of_played_states,json=numberOfPlayedStates,proto3,oneof" json:"number_of_played_states,omitempty"`
	HttpStatusCode       *int32                 `protobuf:"varint,2,opt,name=http_status_code,json=httpStatusCode,proto3,oneof" json:"http_status_code,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PlayedStateSyncFailure) Reset() {
	*x = PlayedStateSyncFailure{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayedStateSyncFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayedStateSyncFailure) ProtoMessage() {}

func (x *PlayedStateSyncFailure) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayedStateSyncFailure.ProtoReflect.Descriptor instead.
func (*PlayedStateSyncFailure) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{95}
}

func (x *PlayedStateSyncFailure) GetNumberOfPlayedStates() int32 {
	if x != nil && x.NumberOfPlayedStates != nil {
		return *x.NumberOfPlayedStates
	}
	return 0
}

func (x *PlayedStateSyncFailure) GetHttpStatusCode() int32 {
	if x != nil && x.HttpStatusCode != nil {
		return *x.HttpStatusCode
	}
	return 0
}

type PlayedStatePersisted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemUri       *string                `protobuf:"bytes,1,opt,name=item_uri,json=itemUri,proto3,oneof" json:"item_uri,omitempty"`
	PlayPosition  *int32                 `protobuf:"varint,2,opt,name=play_position,json=playPosition,proto3,oneof" json:"play_position,omitempty"`
	Reason        *string                `protobuf:"bytes,3,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	PlaybackId    *string                `protobuf:"bytes,4,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayedStatePersisted) Reset() {
	*x = PlayedStatePersisted{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayedStatePersisted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayedStatePersisted) ProtoMessage() {}

func (x *PlayedStatePersisted) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayedStatePersisted.ProtoReflect.Descriptor instead.
func (*PlayedStatePersisted) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{96}
}

func (x *PlayedStatePersisted) GetItemUri() string {
	if x != nil && x.ItemUri != nil {
		return *x.ItemUri
	}
	return ""
}

func (x *PlayedStatePersisted) GetPlayPosition() int32 {
	if x != nil && x.PlayPosition != nil {
		return *x.PlayPosition
	}
	return 0
}

func (x *PlayedStatePersisted) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *PlayedStatePersisted) GetPlaybackId() string {
	if x != nil && x.PlaybackId != nil {
		return *x.PlaybackId
	}
	return ""
}

type PlayerStateRestore struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Error            *string                `protobuf:"bytes,1,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Size             *int64                 `protobuf:"varint,2,opt,name=size,proto3,oneof" json:"size,omitempty"`
	ContextUri       *string                `protobuf:"bytes,3,opt,name=context_uri,json=contextUri,proto3,oneof" json:"context_uri,omitempty"`
	State            *string                `protobuf:"bytes,4,opt,name=state,proto3,oneof" json:"state,omitempty"`
	StateRestoreMode *string                `protobuf:"bytes,5,opt,name=state_restore_mode,json=stateRestoreMode,proto3,oneof" json:"state_restore_mode,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PlayerStateRestore) Reset() {
	*x = PlayerStateRestore{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStateRestore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStateRestore) ProtoMessage() {}

func (x *PlayerStateRestore) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStateRestore.ProtoReflect.Descriptor instead.
func (*PlayerStateRestore) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{97}
}

func (x *PlayerStateRestore) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *PlayerStateRestore) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *PlayerStateRestore) GetContextUri() string {
	if x != nil && x.ContextUri != nil {
		return *x.ContextUri
	}
	return ""
}

func (x *PlayerStateRestore) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *PlayerStateRestore) GetStateRestoreMode() string {
	if x != nil && x.StateRestoreMode != nil {
		return *x.StateRestoreMode
	}
	return ""
}

type PlaylistSyncEvent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PlaylistId       *string                `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3,oneof" json:"playlist_id,omitempty"`
	IsPlaylist       *bool                  `protobuf:"varint,2,opt,name=is_playlist,json=isPlaylist,proto3,oneof" json:"is_playlist,omitempty"`
	TimestampMs      *int64                 `protobuf:"varint,3,opt,name=timestamp_ms,json=timestampMs,proto3,oneof" json:"timestamp_ms,omitempty"`
	ErrorCode        *int32                 `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	EventDescription *string                `protobuf:"bytes,5,opt,name=event_description,json=eventDescription,proto3,oneof" json:"event_description,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PlaylistSyncEvent) Reset() {
	*x = PlaylistSyncEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaylistSyncEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistSyncEvent) ProtoMessage() {}

func (x *PlaylistSyncEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistSyncEvent.ProtoReflect.Descriptor instead.
func (*PlaylistSyncEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{98}
}

func (x *PlaylistSyncEvent) GetPlaylistId() string {
	if x != nil && x.PlaylistId != nil {
		return *x.PlaylistId
	}
	return ""
}

func (x *PlaylistSyncEvent) GetIsPlaylist() bool {
	if x != nil && x.IsPlaylist != nil {
		return *x.IsPlaylist
	}
	return false
}

func (x *PlaylistSyncEvent) GetTimestampMs() int64 {
	if x != nil && x.TimestampMs != nil {
		return *x.TimestampMs
	}
	return 0
}

func (x *PlaylistSyncEvent) GetErrorCode() int32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *PlaylistSyncEvent) GetEventDescription() string {
	if x != nil && x.EventDescription != nil {
		return *x.EventDescription
	}
	return ""
}

type PodcastAdSegmentReceived struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EpisodeUri    *string                `protobuf:"bytes,1,opt,name=episode_uri,json=episodeUri,proto3,oneof" json:"episode_uri,omitempty"`
	PlaybackId    *string                `protobuf:"bytes,2,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	Slots         *string                `protobuf:"bytes,3,opt,name=slots,proto3,oneof" json:"slots,omitempty"`
	IsAudio       *bool                  `protobuf:"varint,4,opt,name=is_audio,json=isAudio,proto3,oneof" json:"is_audio,omitempty"`
	AssetId       *string                `protobuf:"bytes,5,opt,name=asset_id,json=assetId,proto3,oneof" json:"asset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PodcastAdSegmentReceived) Reset() {
	*x = PodcastAdSegmentReceived{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PodcastAdSegmentReceived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodcastAdSegmentReceived) ProtoMessage() {}

func (x *PodcastAdSegmentReceived) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodcastAdSegmentReceived.ProtoReflect.Descriptor instead.
func (*PodcastAdSegmentReceived) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{99}
}

func (x *PodcastAdSegmentReceived) GetEpisodeUri() string {
	if x != nil && x.EpisodeUri != nil {
		return *x.EpisodeUri
	}
	return ""
}

func (x *PodcastAdSegmentReceived) GetPlaybackId() string {
	if x != nil && x.PlaybackId != nil {
		return *x.PlaybackId
	}
	return ""
}

func (x *PodcastAdSegmentReceived) GetSlots() string {
	if x != nil && x.Slots != nil {
		return *x.Slots
	}
	return ""
}

func (x *PodcastAdSegmentReceived) GetIsAudio() bool {
	if x != nil && x.IsAudio != nil {
		return *x.IsAudio
	}
	return false
}

func (x *PodcastAdSegmentReceived) GetAssetId() string {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return ""
}

type PodcastAdSegmentDifference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EpisodeUri    *string                `protobuf:"bytes,1,opt,name=episode_uri,json=episodeUri,proto3,oneof" json:"episode_uri,omitempty"`
	LhsSegment    *string                `protobuf:"bytes,2,opt,name=lhs_segment,json=lhsSegment,proto3,oneof" json:"lhs_segment,omitempty"`
	LhsStart      *int64                 `protobuf:"varint,3,opt,name=lhs_start,json=lhsStart,proto3,oneof" json:"lhs_start,omitempty"`
	LhsStop       *int64                 `protobuf:"varint,4,opt,name=lhs_stop,json=lhsStop,proto3,oneof" json:"lhs_stop,omitempty"`
	RhsSegment    *string                `protobuf:"bytes,5,opt,name=rhs_segment,json=rhsSegment,proto3,oneof" json:"rhs_segment,omitempty"`
	RhsStart      *int64                 `protobuf:"varint,6,opt,name=rhs_start,json=rhsStart,proto3,oneof" json:"rhs_start,omitempty"`
	RhsStop       *int64                 `protobuf:"varint,7,opt,name=rhs_stop,json=rhsStop,proto3,oneof" json:"rhs_stop,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PodcastAdSegmentDifference) Reset() {
	*x = PodcastAdSegmentDifference{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PodcastAdSegmentDifference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodcastAdSegmentDifference) ProtoMessage() {}

func (x *PodcastAdSegmentDifference) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodcastAdSegmentDifference.ProtoReflect.Descriptor instead.
func (*PodcastAdSegmentDifference) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{100}
}

func (x *PodcastAdSegmentDifference) GetEpisodeUri() string {
	if x != nil && x.EpisodeUri != nil {
		return *x.EpisodeUri
	}
	return ""
}

func (x *PodcastAdSegmentDifference) GetLhsSegment() string {
	if x != nil && x.LhsSegment != nil {
		return *x.LhsSegment
	}
	return ""
}

func (x *PodcastAdSegmentDifference) GetLhsStart() int64 {
	if x != nil && x.LhsStart != nil {
		return *x.LhsStart
	}
	return 0
}

func (x *PodcastAdSegmentDifference) GetLhsStop() int64 {
	if x != nil && x.LhsStop != nil {
		return *x.LhsStop
	}
	return 0
}

func (x *PodcastAdSegmentDifference) GetRhsSegment() string {
	if x != nil && x.RhsSegment != nil {
		return *x.RhsSegment
	}
	return ""
}

func (x *PodcastAdSegmentDifference) GetRhsStart() int64 {
	if x != nil && x.RhsStart != nil {
		return *x.RhsStart
	}
	return 0
}

func (x *PodcastAdSegmentDifference) GetRhsStop() int64 {
	if x != nil && x.RhsStop != nil {
		return *x.RhsStop
	}
	return 0
}

type PodcastSAILoopEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Event           *string                `protobuf:"bytes,1,opt,name=event,proto3,oneof" json:"event,omitempty"`
	CurrentTrackUri *string                `protobuf:"bytes,2,opt,name=current_track_uri,json=currentTrackUri,proto3,oneof" json:"current_track_uri,omitempty"`
	EpisodeWithAds  *string                `protobuf:"bytes,3,opt,name=episode_with_ads,json=episodeWithAds,proto3,oneof" json:"episode_with_ads,omitempty"`
	SelectedSegment *string                `protobuf:"bytes,4,opt,name=selected_segment,json=selectedSegment,proto3,oneof" json:"selected_segment,omitempty"`
	Start           *int32                 `protobuf:"varint,5,opt,name=start,proto3,oneof" json:"start,omitempty"`
	Stop            *int32                 `protobuf:"varint,6,opt,name=stop,proto3,oneof" json:"stop,omitempty"`
	Effects         []string               `protobuf:"bytes,7,rep,name=effects,proto3" json:"effects,omitempty"`
	PlaybackId      *string                `protobuf:"bytes,8,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	AppStartupId    *string                `protobuf:"bytes,9,opt,name=app_startup_id,json=appStartupId,proto3,oneof" json:"app_startup_id,omitempty"`
	RequestId       *string                `protobuf:"bytes,10,opt,name=request_id,json=requestId,proto3,oneof" json:"request_id,omitempty"`
	LoopId          *string                `protobuf:"bytes,11,opt,name=loop_id,json=loopId,proto3,oneof" json:"loop_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PodcastSAILoopEvent) Reset() {
	*x = PodcastSAILoopEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PodcastSAILoopEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodcastSAILoopEvent) ProtoMessage() {}

func (x *PodcastSAILoopEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodcastSAILoopEvent.ProtoReflect.Descriptor instead.
func (*PodcastSAILoopEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{101}
}

func (x *PodcastSAILoopEvent) GetEvent() string {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return ""
}

func (x *PodcastSAILoopEvent) GetCurrentTrackUri() string {
	if x != nil && x.CurrentTrackUri != nil {
		return *x.CurrentTrackUri
	}
	return ""
}

func (x *PodcastSAILoopEvent) GetEpisodeWithAds() string {
	if x != nil && x.EpisodeWithAds != nil {
		return *x.EpisodeWithAds
	}
	return ""
}

func (x *PodcastSAILoopEvent) GetSelectedSegment() string {
	if x != nil && x.SelectedSegment != nil {
		return *x.SelectedSegment
	}
	return ""
}

func (x *PodcastSAILoopEvent) GetStart() int32 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

func (x *PodcastSAILoopEvent) GetStop() int32 {
	if x != nil && x.Stop != nil {
		return *x.Stop
	}
	return 0
}

func (x *PodcastSAILoopEvent) GetEffects() []string {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *PodcastSAILoopEvent) GetPlaybackId() string {
	if x != nil && x.PlaybackId != nil {
		return *x.PlaybackId
	}
	return ""
}

func (x *PodcastSAILoopEvent) GetAppStartupId() string {
	if x != nil && x.AppStartupId != nil {
		return *x.AppStartupId
	}
	return ""
}

func (x *PodcastSAILoopEvent) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *PodcastSAILoopEvent) GetLoopId() string {
	if x != nil && x.LoopId != nil {
		return *x.LoopId
	}
	return ""
}

type PrefetchError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Strategy      *int64                 `protobuf:"varint,1,opt,name=strategy,proto3,oneof" json:"strategy,omitempty"`
	Description   *string                `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrefetchError) Reset() {
	*x = PrefetchError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrefetchError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrefetchError) ProtoMessage() {}

func (x *PrefetchError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrefetchError.ProtoReflect.Descriptor instead.
func (*PrefetchError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{102}
}

func (x *PrefetchError) GetStrategy() int64 {
	if x != nil && x.Strategy != nil {
		return *x.Strategy
	}
	return 0
}

func (x *PrefetchError) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type PubSubCountPerIdent struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	IdentFilter           *string                `protobuf:"bytes,1,opt,name=ident_filter,json=identFilter,proto3,oneof" json:"ident_filter,omitempty"`
	NoOfMessagesReceived  *int32                 `protobuf:"varint,2,opt,name=no_of_messages_received,json=noOfMessagesReceived,proto3,oneof" json:"no_of_messages_received,omitempty"`
	NoOfFailedConversions *int32                 `protobuf:"varint,3,opt,name=no_of_failed_conversions,json=noOfFailedConversions,proto3,oneof" json:"no_of_failed_conversions,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PubSubCountPerIdent) Reset() {
	*x = PubSubCountPerIdent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PubSubCountPerIdent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PubSubCountPerIdent) ProtoMessage() {}

func (x *PubSubCountPerIdent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PubSubCountPerIdent.ProtoReflect.Descriptor instead.
func (*PubSubCountPerIdent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{103}
}

func (x *PubSubCountPerIdent) GetIdentFilter() string {
	if x != nil && x.IdentFilter != nil {
		return *x.IdentFilter
	}
	return ""
}

func (x *PubSubCountPerIdent) GetNoOfMessagesReceived() int32 {
	if x != nil && x.NoOfMessagesReceived != nil {
		return *x.NoOfMessagesReceived
	}
	return 0
}

func (x *PubSubCountPerIdent) GetNoOfFailedConversions() int32 {
	if x != nil && x.NoOfFailedConversions != nil {
		return *x.NoOfFailedConversions
	}
	return 0
}

type ReachabilityChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *string                `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Info          *string                `protobuf:"bytes,2,opt,name=info,proto3,oneof" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReachabilityChanged) Reset() {
	*x = ReachabilityChanged{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReachabilityChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReachabilityChanged) ProtoMessage() {}

func (x *ReachabilityChanged) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReachabilityChanged.ProtoReflect.Descriptor instead.
func (*ReachabilityChanged) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{104}
}

func (x *ReachabilityChanged) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ReachabilityChanged) GetInfo() string {
	if x != nil && x.Info != nil {
		return *x.Info
	}
	return ""
}

type RejectedClientEventNonAuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RejectReason  *string                `protobuf:"bytes,1,opt,name=reject_reason,json=rejectReason,proto3,oneof" json:"reject_reason,omitempty"`
	EventName     *string                `protobuf:"bytes,2,opt,name=event_name,json=eventName,proto3,oneof" json:"event_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectedClientEventNonAuth) Reset() {
	*x = RejectedClientEventNonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectedClientEventNonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectedClientEventNonAuth) ProtoMessage() {}

func (x *RejectedClientEventNonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectedClientEventNonAuth.ProtoReflect.Descriptor instead.
func (*RejectedClientEventNonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{105}
}

func (x *RejectedClientEventNonAuth) GetRejectReason() string {
	if x != nil && x.RejectReason != nil {
		return *x.RejectReason
	}
	return ""
}

func (x *RejectedClientEventNonAuth) GetEventName() string {
	if x != nil && x.EventName != nil {
		return *x.EventName
	}
	return ""
}

type RemainingSkips struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	InteractionId            *string                `protobuf:"bytes,1,opt,name=interaction_id,json=interactionId,proto3,oneof" json:"interaction_id,omitempty"`
	RemainingSkipsBeforeSkip *int32                 `protobuf:"varint,2,opt,name=remaining_skips_before_skip,json=remainingSkipsBeforeSkip,proto3,oneof" json:"remaining_skips_before_skip,omitempty"`
	RemainingSkipsAfterSkip  *int32                 `protobuf:"varint,3,opt,name=remaining_skips_after_skip,json=remainingSkipsAfterSkip,proto3,oneof" json:"remaining_skips_after_skip,omitempty"`
	InteractionIds           []string               `protobuf:"bytes,4,rep,name=interaction_ids,json=interactionIds,proto3" json:"interaction_ids,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *RemainingSkips) Reset() {
	*x = RemainingSkips{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemainingSkips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemainingSkips) ProtoMessage() {}

func (x *RemainingSkips) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemainingSkips.ProtoReflect.Descriptor instead.
func (*RemainingSkips) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{106}
}

func (x *RemainingSkips) GetInteractionId() string {
	if x != nil && x.InteractionId != nil {
		return *x.InteractionId
	}
	return ""
}

func (x *RemainingSkips) GetRemainingSkipsBeforeSkip() int32 {
	if x != nil && x.RemainingSkipsBeforeSkip != nil {
		return *x.RemainingSkipsBeforeSkip
	}
	return 0
}

func (x *RemainingSkips) GetRemainingSkipsAfterSkip() int32 {
	if x != nil && x.RemainingSkipsAfterSkip != nil {
		return *x.RemainingSkipsAfterSkip
	}
	return 0
}

func (x *RemainingSkips) GetInteractionIds() []string {
	if x != nil {
		return x.InteractionIds
	}
	return nil
}

type RequestAccounting struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Request          *string                `protobuf:"bytes,1,opt,name=request,proto3,oneof" json:"request,omitempty"`
	Downloaded       *int64                 `protobuf:"varint,2,opt,name=downloaded,proto3,oneof" json:"downloaded,omitempty"`
	Uploaded         *int64                 `protobuf:"varint,3,opt,name=uploaded,proto3,oneof" json:"uploaded,omitempty"`
	NumRequests      *int64                 `protobuf:"varint,4,opt,name=num_requests,json=numRequests,proto3,oneof" json:"num_requests,omitempty"`
	Connection       *string                `protobuf:"bytes,5,opt,name=connection,proto3,oneof" json:"connection,omitempty"`
	SourceIdentifier *string                `protobuf:"bytes,6,opt,name=source_identifier,json=sourceIdentifier,proto3,oneof" json:"source_identifier,omitempty"`
	Reason           *string                `protobuf:"bytes,7,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	DurationMs       *int64                 `protobuf:"varint,8,opt,name=duration_ms,json=durationMs,proto3,oneof" json:"duration_ms,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RequestAccounting) Reset() {
	*x = RequestAccounting{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestAccounting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAccounting) ProtoMessage() {}

func (x *RequestAccounting) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAccounting.ProtoReflect.Descriptor instead.
func (*RequestAccounting) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{107}
}

func (x *RequestAccounting) GetRequest() string {
	if x != nil && x.Request != nil {
		return *x.Request
	}
	return ""
}

func (x *RequestAccounting) GetDownloaded() int64 {
	if x != nil && x.Downloaded != nil {
		return *x.Downloaded
	}
	return 0
}

func (x *RequestAccounting) GetUploaded() int64 {
	if x != nil && x.Uploaded != nil {
		return *x.Uploaded
	}
	return 0
}

func (x *RequestAccounting) GetNumRequests() int64 {
	if x != nil && x.NumRequests != nil {
		return *x.NumRequests
	}
	return 0
}

func (x *RequestAccounting) GetConnection() string {
	if x != nil && x.Connection != nil {
		return *x.Connection
	}
	return ""
}

func (x *RequestAccounting) GetSourceIdentifier() string {
	if x != nil && x.SourceIdentifier != nil {
		return *x.SourceIdentifier
	}
	return ""
}

func (x *RequestAccounting) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *RequestAccounting) GetDurationMs() int64 {
	if x != nil && x.DurationMs != nil {
		return *x.DurationMs
	}
	return 0
}

type RequestTime struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Type                *string                `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	FirstByte           *int64                 `protobuf:"varint,2,opt,name=first_byte,json=firstByte,proto3,oneof" json:"first_byte,omitempty"`
	LastByte            *int64                 `protobuf:"varint,3,opt,name=last_byte,json=lastByte,proto3,oneof" json:"last_byte,omitempty"`
	Size                *int64                 `protobuf:"varint,4,opt,name=size,proto3,oneof" json:"size,omitempty"`
	SizeSent            *int64                 `protobuf:"varint,5,opt,name=size_sent,json=sizeSent,proto3,oneof" json:"size_sent,omitempty"`
	Error               *bool                  `protobuf:"varint,6,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Url                 *string                `protobuf:"bytes,7,opt,name=url,proto3,oneof" json:"url,omitempty"`
	Verb                *string                `protobuf:"bytes,8,opt,name=verb,proto3,oneof" json:"verb,omitempty"`
	PayloadSizeSent     *int64                 `protobuf:"varint,9,opt,name=payload_size_sent,json=payloadSizeSent,proto3,oneof" json:"payload_size_sent,omitempty"`
	ConnectionReuse     *int32                 `protobuf:"varint,10,opt,name=connection_reuse,json=connectionReuse,proto3,oneof" json:"connection_reuse,omitempty"`
	SamplingProbability *float64               `protobuf:"fixed64,11,opt,name=sampling_probability,json=samplingProbability,proto3,oneof" json:"sampling_probability,omitempty"`
	Cached              *bool                  `protobuf:"varint,12,opt,name=cached,proto3,oneof" json:"cached,omitempty"`
	RedirectTime        *int64                 `protobuf:"varint,13,opt,name=redirect_time,json=redirectTime,proto3,oneof" json:"redirect_time,omitempty"`
	ConnectionType      *string                `protobuf:"bytes,14,opt,name=connection_type,json=connectionType,proto3,oneof" json:"connection_type,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RequestTime) Reset() {
	*x = RequestTime{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTime) ProtoMessage() {}

func (x *RequestTime) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTime.ProtoReflect.Descriptor instead.
func (*RequestTime) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{108}
}

func (x *RequestTime) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *RequestTime) GetFirstByte() int64 {
	if x != nil && x.FirstByte != nil {
		return *x.FirstByte
	}
	return 0
}

func (x *RequestTime) GetLastByte() int64 {
	if x != nil && x.LastByte != nil {
		return *x.LastByte
	}
	return 0
}

func (x *RequestTime) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *RequestTime) GetSizeSent() int64 {
	if x != nil && x.SizeSent != nil {
		return *x.SizeSent
	}
	return 0
}

func (x *RequestTime) GetError() bool {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return false
}

func (x *RequestTime) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *RequestTime) GetVerb() string {
	if x != nil && x.Verb != nil {
		return *x.Verb
	}
	return ""
}

func (x *RequestTime) GetPayloadSizeSent() int64 {
	if x != nil && x.PayloadSizeSent != nil {
		return *x.PayloadSizeSent
	}
	return 0
}

func (x *RequestTime) GetConnectionReuse() int32 {
	if x != nil && x.ConnectionReuse != nil {
		return *x.ConnectionReuse
	}
	return 0
}

func (x *RequestTime) GetSamplingProbability() float64 {
	if x != nil && x.SamplingProbability != nil {
		return *x.SamplingProbability
	}
	return 0
}

func (x *RequestTime) GetCached() bool {
	if x != nil && x.Cached != nil {
		return *x.Cached
	}
	return false
}

func (x *RequestTime) GetRedirectTime() int64 {
	if x != nil && x.RedirectTime != nil {
		return *x.RedirectTime
	}
	return 0
}

func (x *RequestTime) GetConnectionType() string {
	if x != nil && x.ConnectionType != nil {
		return *x.ConnectionType
	}
	return ""
}

type TimeMeasurement struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Category            *string                `protobuf:"bytes,1,opt,name=category,proto3,oneof" json:"category,omitempty"`
	Dimensions          map[string]string      `protobuf:"bytes,2,rep,name=dimensions,proto3" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PointTimestamps     map[string]int64       `protobuf:"bytes,3,rep,name=point_timestamps,json=pointTimestamps,proto3" json:"point_timestamps,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	PointDurations      map[string]int64       `protobuf:"bytes,4,rep,name=point_durations,json=pointDurations,proto3" json:"point_durations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	PointFeatureIds     map[string]string      `protobuf:"bytes,5,rep,name=point_feature_ids,json=pointFeatureIds,proto3" json:"point_feature_ids,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FeatureId           *string                `protobuf:"bytes,6,opt,name=feature_id,json=featureId,proto3,oneof" json:"feature_id,omitempty"`
	MeasurementId       *string                `protobuf:"bytes,7,opt,name=measurement_id,json=measurementId,proto3,oneof" json:"measurement_id,omitempty"`
	ParentMeasurementId *string                `protobuf:"bytes,8,opt,name=parent_measurement_id,json=parentMeasurementId,proto3,oneof" json:"parent_measurement_id,omitempty"`
	ParentEpochOffset   *int64                 `protobuf:"varint,9,opt,name=parent_epoch_offset,json=parentEpochOffset,proto3,oneof" json:"parent_epoch_offset,omitempty"`
	Metadata            map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TimeMeasurement) Reset() {
	*x = TimeMeasurement{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeMeasurement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeMeasurement) ProtoMessage() {}

func (x *TimeMeasurement) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeMeasurement.ProtoReflect.Descriptor instead.
func (*TimeMeasurement) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{109}
}

func (x *TimeMeasurement) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *TimeMeasurement) GetDimensions() map[string]string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *TimeMeasurement) GetPointTimestamps() map[string]int64 {
	if x != nil {
		return x.PointTimestamps
	}
	return nil
}

func (x *TimeMeasurement) GetPointDurations() map[string]int64 {
	if x != nil {
		return x.PointDurations
	}
	return nil
}

func (x *TimeMeasurement) GetPointFeatureIds() map[string]string {
	if x != nil {
		return x.PointFeatureIds
	}
	return nil
}

func (x *TimeMeasurement) GetFeatureId() string {
	if x != nil && x.FeatureId != nil {
		return *x.FeatureId
	}
	return ""
}

func (x *TimeMeasurement) GetMeasurementId() string {
	if x != nil && x.MeasurementId != nil {
		return *x.MeasurementId
	}
	return ""
}

func (x *TimeMeasurement) GetParentMeasurementId() string {
	if x != nil && x.ParentMeasurementId != nil {
		return *x.ParentMeasurementId
	}
	return ""
}

func (x *TimeMeasurement) GetParentEpochOffset() int64 {
	if x != nil && x.ParentEpochOffset != nil {
		return *x.ParentEpochOffset
	}
	return 0
}

func (x *TimeMeasurement) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type AudioFileSelection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId    []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	StrategyName  *string                `protobuf:"bytes,2,opt,name=strategy_name,json=strategyName,proto3,oneof" json:"strategy_name,omitempty"`
	Bitrate       *int64                 `protobuf:"varint,3,opt,name=bitrate,proto3,oneof" json:"bitrate,omitempty"`
	PredictId     []byte                 `protobuf:"bytes,4,opt,name=predict_id,json=predictId,proto3,oneof" json:"predict_id,omitempty"`
	FileOrigin    *string                `protobuf:"bytes,5,opt,name=file_origin,json=fileOrigin,proto3,oneof" json:"file_origin,omitempty"`
	TargetBitrate *int32                 `protobuf:"varint,6,opt,name=target_bitrate,json=targetBitrate,proto3,oneof" json:"target_bitrate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioFileSelection) Reset() {
	*x = AudioFileSelection{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioFileSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioFileSelection) ProtoMessage() {}

func (x *AudioFileSelection) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioFileSelection.ProtoReflect.Descriptor instead.
func (*AudioFileSelection) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{110}
}

func (x *AudioFileSelection) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *AudioFileSelection) GetStrategyName() string {
	if x != nil && x.StrategyName != nil {
		return *x.StrategyName
	}
	return ""
}

func (x *AudioFileSelection) GetBitrate() int64 {
	if x != nil && x.Bitrate != nil {
		return *x.Bitrate
	}
	return 0
}

func (x *AudioFileSelection) GetPredictId() []byte {
	if x != nil {
		return x.PredictId
	}
	return nil
}

func (x *AudioFileSelection) GetFileOrigin() string {
	if x != nil && x.FileOrigin != nil {
		return *x.FileOrigin
	}
	return ""
}

func (x *AudioFileSelection) GetTargetBitrate() int32 {
	if x != nil && x.TargetBitrate != nil {
		return *x.TargetBitrate
	}
	return 0
}

type AudioRateLimit struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	DriverName            *string                `protobuf:"bytes,1,opt,name=driver_name,json=driverName,proto3,oneof" json:"driver_name,omitempty"`
	OutputDeviceName      *string                `protobuf:"bytes,2,opt,name=output_device_name,json=outputDeviceName,proto3,oneof" json:"output_device_name,omitempty"`
	OutputDeviceCategory  *string                `protobuf:"bytes,3,opt,name=output_device_category,json=outputDeviceCategory,proto3,oneof" json:"output_device_category,omitempty"`
	MaxSize               *int64                 `protobuf:"varint,4,opt,name=max_size,json=maxSize,proto3,oneof" json:"max_size,omitempty"`
	RefillPerMilliseconds *int64                 `protobuf:"varint,5,opt,name=refill_per_milliseconds,json=refillPerMilliseconds,proto3,oneof" json:"refill_per_milliseconds,omitempty"`
	FramesRequested       *int64                 `protobuf:"varint,6,opt,name=frames_requested,json=framesRequested,proto3,oneof" json:"frames_requested,omitempty"`
	FramesAcquired        *int64                 `protobuf:"varint,7,opt,name=frames_acquired,json=framesAcquired,proto3,oneof" json:"frames_acquired,omitempty"`
	PlaybackId            []byte                 `protobuf:"bytes,8,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AudioRateLimit) Reset() {
	*x = AudioRateLimit{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioRateLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioRateLimit) ProtoMessage() {}

func (x *AudioRateLimit) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioRateLimit.ProtoReflect.Descriptor instead.
func (*AudioRateLimit) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{111}
}

func (x *AudioRateLimit) GetDriverName() string {
	if x != nil && x.DriverName != nil {
		return *x.DriverName
	}
	return ""
}

func (x *AudioRateLimit) GetOutputDeviceName() string {
	if x != nil && x.OutputDeviceName != nil {
		return *x.OutputDeviceName
	}
	return ""
}

func (x *AudioRateLimit) GetOutputDeviceCategory() string {
	if x != nil && x.OutputDeviceCategory != nil {
		return *x.OutputDeviceCategory
	}
	return ""
}

func (x *AudioRateLimit) GetMaxSize() int64 {
	if x != nil && x.MaxSize != nil {
		return *x.MaxSize
	}
	return 0
}

func (x *AudioRateLimit) GetRefillPerMilliseconds() int64 {
	if x != nil && x.RefillPerMilliseconds != nil {
		return *x.RefillPerMilliseconds
	}
	return 0
}

func (x *AudioRateLimit) GetFramesRequested() int64 {
	if x != nil && x.FramesRequested != nil {
		return *x.FramesRequested
	}
	return 0
}

func (x *AudioRateLimit) GetFramesAcquired() int64 {
	if x != nil && x.FramesAcquired != nil {
		return *x.FramesAcquired
	}
	return 0
}

func (x *AudioRateLimit) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

type AudioSessionEvent struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Event             *string                `protobuf:"bytes,1,opt,name=event,proto3,oneof" json:"event,omitempty"`
	Context           *string                `protobuf:"bytes,2,opt,name=context,proto3,oneof" json:"context,omitempty"`
	JsonData          *string                `protobuf:"bytes,3,opt,name=json_data,json=jsonData,proto3,oneof" json:"json_data,omitempty"`
	PlaybackId        []byte                 `protobuf:"bytes,4,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	Reason            *string                `protobuf:"bytes,5,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	FeatureIdentifier *string                `protobuf:"bytes,6,opt,name=feature_identifier,json=featureIdentifier,proto3,oneof" json:"feature_identifier,omitempty"`
	SeekPosition      *int32                 `protobuf:"varint,7,opt,name=seek_position,json=seekPosition,proto3,oneof" json:"seek_position,omitempty"`
	Paused            *bool                  `protobuf:"varint,8,opt,name=paused,proto3,oneof" json:"paused,omitempty"`
	Speed             *int64                 `protobuf:"varint,9,opt,name=speed,proto3,oneof" json:"speed,omitempty"`
	FadeStartPosition *int32                 `protobuf:"varint,10,opt,name=fade_start_position,json=fadeStartPosition,proto3,oneof" json:"fade_start_position,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AudioSessionEvent) Reset() {
	*x = AudioSessionEvent{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioSessionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioSessionEvent) ProtoMessage() {}

func (x *AudioSessionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioSessionEvent.ProtoReflect.Descriptor instead.
func (*AudioSessionEvent) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{112}
}

func (x *AudioSessionEvent) GetEvent() string {
	if x != nil && x.Event != nil {
		return *x.Event
	}
	return ""
}

func (x *AudioSessionEvent) GetContext() string {
	if x != nil && x.Context != nil {
		return *x.Context
	}
	return ""
}

func (x *AudioSessionEvent) GetJsonData() string {
	if x != nil && x.JsonData != nil {
		return *x.JsonData
	}
	return ""
}

func (x *AudioSessionEvent) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *AudioSessionEvent) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *AudioSessionEvent) GetFeatureIdentifier() string {
	if x != nil && x.FeatureIdentifier != nil {
		return *x.FeatureIdentifier
	}
	return ""
}

func (x *AudioSessionEvent) GetSeekPosition() int32 {
	if x != nil && x.SeekPosition != nil {
		return *x.SeekPosition
	}
	return 0
}

func (x *AudioSessionEvent) GetPaused() bool {
	if x != nil && x.Paused != nil {
		return *x.Paused
	}
	return false
}

func (x *AudioSessionEvent) GetSpeed() int64 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

func (x *AudioSessionEvent) GetFadeStartPosition() int32 {
	if x != nil && x.FadeStartPosition != nil {
		return *x.FadeStartPosition
	}
	return 0
}

type AudioResolve struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId       []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	LatencyMs        *int64                 `protobuf:"varint,2,opt,name=latency_ms,json=latencyMs,proto3,oneof" json:"latency_ms,omitempty"`
	EntityUri        *string                `protobuf:"bytes,3,opt,name=entity_uri,json=entityUri,proto3,oneof" json:"entity_uri,omitempty"`
	AudioId          []byte                 `protobuf:"bytes,4,opt,name=audio_id,json=audioId,proto3,oneof" json:"audio_id,omitempty"`
	GeneratedAudioId []byte                 `protobuf:"bytes,5,opt,name=generated_audio_id,json=generatedAudioId,proto3,oneof" json:"generated_audio_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AudioResolve) Reset() {
	*x = AudioResolve{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioResolve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioResolve) ProtoMessage() {}

func (x *AudioResolve) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioResolve.ProtoReflect.Descriptor instead.
func (*AudioResolve) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{113}
}

func (x *AudioResolve) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *AudioResolve) GetLatencyMs() int64 {
	if x != nil && x.LatencyMs != nil {
		return *x.LatencyMs
	}
	return 0
}

func (x *AudioResolve) GetEntityUri() string {
	if x != nil && x.EntityUri != nil {
		return *x.EntityUri
	}
	return ""
}

func (x *AudioResolve) GetAudioId() []byte {
	if x != nil {
		return x.AudioId
	}
	return nil
}

func (x *AudioResolve) GetGeneratedAudioId() []byte {
	if x != nil {
		return x.GeneratedAudioId
	}
	return nil
}

type BoomboxPlaybackInstrumentation struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId        []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	WasPlaybackPaused *bool                  `protobuf:"varint,2,opt,name=was_playback_paused,json=wasPlaybackPaused,proto3,oneof" json:"was_playback_paused,omitempty"`
	Dimensions        []string               `protobuf:"bytes,3,rep,name=dimensions,proto3" json:"dimensions,omitempty"`
	TotalBufferSize   map[string]int64       `protobuf:"bytes,4,rep,name=total_buffer_size,json=totalBufferSize,proto3" json:"total_buffer_size,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	NumberOfCalls     map[string]int64       `protobuf:"bytes,5,rep,name=number_of_calls,json=numberOfCalls,proto3" json:"number_of_calls,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	TotalDuration     map[string]int64       `protobuf:"bytes,6,rep,name=total_duration,json=totalDuration,proto3" json:"total_duration,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	FirstCallTime     map[string]int64       `protobuf:"bytes,7,rep,name=first_call_time,json=firstCallTime,proto3" json:"first_call_time,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	LastCallTime      map[string]int64       `protobuf:"bytes,8,rep,name=last_call_time,json=lastCallTime,proto3" json:"last_call_time,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BoomboxPlaybackInstrumentation) Reset() {
	*x = BoomboxPlaybackInstrumentation{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoomboxPlaybackInstrumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoomboxPlaybackInstrumentation) ProtoMessage() {}

func (x *BoomboxPlaybackInstrumentation) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoomboxPlaybackInstrumentation.ProtoReflect.Descriptor instead.
func (*BoomboxPlaybackInstrumentation) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{114}
}

func (x *BoomboxPlaybackInstrumentation) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *BoomboxPlaybackInstrumentation) GetWasPlaybackPaused() bool {
	if x != nil && x.WasPlaybackPaused != nil {
		return *x.WasPlaybackPaused
	}
	return false
}

func (x *BoomboxPlaybackInstrumentation) GetDimensions() []string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *BoomboxPlaybackInstrumentation) GetTotalBufferSize() map[string]int64 {
	if x != nil {
		return x.TotalBufferSize
	}
	return nil
}

func (x *BoomboxPlaybackInstrumentation) GetNumberOfCalls() map[string]int64 {
	if x != nil {
		return x.NumberOfCalls
	}
	return nil
}

func (x *BoomboxPlaybackInstrumentation) GetTotalDuration() map[string]int64 {
	if x != nil {
		return x.TotalDuration
	}
	return nil
}

func (x *BoomboxPlaybackInstrumentation) GetFirstCallTime() map[string]int64 {
	if x != nil {
		return x.FirstCallTime
	}
	return nil
}

func (x *BoomboxPlaybackInstrumentation) GetLastCallTime() map[string]int64 {
	if x != nil {
		return x.LastCallTime
	}
	return nil
}

type BoomboxPlaybackSession struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId             []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	MsLatency              *int64                 `protobuf:"varint,2,opt,name=ms_latency,json=msLatency,proto3,oneof" json:"ms_latency,omitempty"`
	UiLatency              *int64                 `protobuf:"varint,3,opt,name=ui_latency,json=uiLatency,proto3,oneof" json:"ui_latency,omitempty"`
	MsKeyLatency           *int64                 `protobuf:"varint,4,opt,name=ms_key_latency,json=msKeyLatency,proto3,oneof" json:"ms_key_latency,omitempty"`
	MsRcvLatency           *int64                 `protobuf:"varint,5,opt,name=ms_rcv_latency,json=msRcvLatency,proto3,oneof" json:"ms_rcv_latency,omitempty"`
	CachedKey              *bool                  `protobuf:"varint,6,opt,name=cached_key,json=cachedKey,proto3,oneof" json:"cached_key,omitempty"`
	NStutter               *int64                 `protobuf:"varint,7,opt,name=n_stutter,json=nStutter,proto3,oneof" json:"n_stutter,omitempty"`
	NSeekback              *int64                 `protobuf:"varint,8,opt,name=n_seekback,json=nSeekback,proto3,oneof" json:"n_seekback,omitempty"`
	MsSeekback             *int64                 `protobuf:"varint,9,opt,name=ms_seekback,json=msSeekback,proto3,oneof" json:"ms_seekback,omitempty"`
	NSeekfwd               *int64                 `protobuf:"varint,10,opt,name=n_seekfwd,json=nSeekfwd,proto3,oneof" json:"n_seekfwd,omitempty"`
	MsSeekfwd              *int64                 `protobuf:"varint,11,opt,name=ms_seekfwd,json=msSeekfwd,proto3,oneof" json:"ms_seekfwd,omitempty"`
	MsTotalEst             *int64                 `protobuf:"varint,12,opt,name=ms_total_est,json=msTotalEst,proto3,oneof" json:"ms_total_est,omitempty"`
	AudioStreamTypeAtStart *string                `protobuf:"bytes,13,opt,name=audio_stream_type_at_start,json=audioStreamTypeAtStart,proto3,oneof" json:"audio_stream_type_at_start,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BoomboxPlaybackSession) Reset() {
	*x = BoomboxPlaybackSession{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoomboxPlaybackSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoomboxPlaybackSession) ProtoMessage() {}

func (x *BoomboxPlaybackSession) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoomboxPlaybackSession.ProtoReflect.Descriptor instead.
func (*BoomboxPlaybackSession) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{115}
}

func (x *BoomboxPlaybackSession) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *BoomboxPlaybackSession) GetMsLatency() int64 {
	if x != nil && x.MsLatency != nil {
		return *x.MsLatency
	}
	return 0
}

func (x *BoomboxPlaybackSession) GetUiLatency() int64 {
	if x != nil && x.UiLatency != nil {
		return *x.UiLatency
	}
	return 0
}

func (x *BoomboxPlaybackSession) GetMsKeyLatency() int64 {
	if x != nil && x.MsKeyLatency != nil {
		return *x.MsKeyLatency
	}
	return 0
}

func (x *BoomboxPlaybackSession) GetMsRcvLatency() int64 {
	if x != nil && x.MsRcvLatency != nil {
		return *x.MsRcvLatency
	}
	return 0
}

func (x *BoomboxPlaybackSession) GetCachedKey() bool {
	if x != nil && x.CachedKey != nil {
		return *x.CachedKey
	}
	return false
}

func (x *BoomboxPlaybackSession) GetNStutter() int64 {
	if x != nil && x.NStutter != nil {
		return *x.NStutter
	}
	return 0
}

func (x *BoomboxPlaybackSession) GetNSeekback() int64 {
	if x != nil && x.NSeekback != nil {
		return *x.NSeekback
	}
	return 0
}

func (x *BoomboxPlaybackSession) GetMsSeekback() int64 {
	if x != nil && x.MsSeekback != nil {
		return *x.MsSeekback
	}
	return 0
}

func (x *BoomboxPlaybackSession) GetNSeekfwd() int64 {
	if x != nil && x.NSeekfwd != nil {
		return *x.NSeekfwd
	}
	return 0
}

func (x *BoomboxPlaybackSession) GetMsSeekfwd() int64 {
	if x != nil && x.MsSeekfwd != nil {
		return *x.MsSeekfwd
	}
	return 0
}

func (x *BoomboxPlaybackSession) GetMsTotalEst() int64 {
	if x != nil && x.MsTotalEst != nil {
		return *x.MsTotalEst
	}
	return 0
}

func (x *BoomboxPlaybackSession) GetAudioStreamTypeAtStart() string {
	if x != nil && x.AudioStreamTypeAtStart != nil {
		return *x.AudioStreamTypeAtStart
	}
	return ""
}

type BrokenObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *string                `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Id            *string                `protobuf:"bytes,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	ErrorCode     *int64                 `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	PlaybackId    []byte                 `protobuf:"bytes,4,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BrokenObject) Reset() {
	*x = BrokenObject{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BrokenObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokenObject) ProtoMessage() {}

func (x *BrokenObject) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokenObject.ProtoReflect.Descriptor instead.
func (*BrokenObject) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{116}
}

func (x *BrokenObject) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *BrokenObject) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *BrokenObject) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *BrokenObject) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

type CacheError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     *int64                 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	OsErrorCode   *int64                 `protobuf:"varint,2,opt,name=os_error_code,json=osErrorCode,proto3,oneof" json:"os_error_code,omitempty"`
	Realm         *string                `protobuf:"bytes,3,opt,name=realm,proto3,oneof" json:"realm,omitempty"`
	FileId        []byte                 `protobuf:"bytes,4,opt,name=file_id,json=fileId,proto3,oneof" json:"file_id,omitempty"`
	NumErrors     *int64                 `protobuf:"varint,5,opt,name=num_errors,json=numErrors,proto3,oneof" json:"num_errors,omitempty"`
	CachePath     *string                `protobuf:"bytes,6,opt,name=cache_path,json=cachePath,proto3,oneof" json:"cache_path,omitempty"`
	Size          *int64                 `protobuf:"varint,7,opt,name=size,proto3,oneof" json:"size,omitempty"`
	RangeStart    *int64                 `protobuf:"varint,8,opt,name=range_start,json=rangeStart,proto3,oneof" json:"range_start,omitempty"`
	RangeEnd      *int64                 `protobuf:"varint,9,opt,name=range_end,json=rangeEnd,proto3,oneof" json:"range_end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CacheError) Reset() {
	*x = CacheError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheError) ProtoMessage() {}

func (x *CacheError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheError.ProtoReflect.Descriptor instead.
func (*CacheError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{117}
}

func (x *CacheError) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *CacheError) GetOsErrorCode() int64 {
	if x != nil && x.OsErrorCode != nil {
		return *x.OsErrorCode
	}
	return 0
}

func (x *CacheError) GetRealm() string {
	if x != nil && x.Realm != nil {
		return *x.Realm
	}
	return ""
}

func (x *CacheError) GetFileId() []byte {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *CacheError) GetNumErrors() int64 {
	if x != nil && x.NumErrors != nil {
		return *x.NumErrors
	}
	return 0
}

func (x *CacheError) GetCachePath() string {
	if x != nil && x.CachePath != nil {
		return *x.CachePath
	}
	return ""
}

func (x *CacheError) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *CacheError) GetRangeStart() int64 {
	if x != nil && x.RangeStart != nil {
		return *x.RangeStart
	}
	return 0
}

func (x *CacheError) GetRangeEnd() int64 {
	if x != nil && x.RangeEnd != nil {
		return *x.RangeEnd
	}
	return 0
}

type CachePruningReport struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	CacheId                      []byte                 `protobuf:"bytes,1,opt,name=cache_id,json=cacheId,proto3,oneof" json:"cache_id,omitempty"`
	TimeSpentPruningMs           *int64                 `protobuf:"varint,2,opt,name=time_spent_pruning_ms,json=timeSpentPruningMs,proto3,oneof" json:"time_spent_pruning_ms,omitempty"`
	SizeBeforePruneKb            *int64                 `protobuf:"varint,3,opt,name=size_before_prune_kb,json=sizeBeforePruneKb,proto3,oneof" json:"size_before_prune_kb,omitempty"`
	SizeAfterPruneKb             *int64                 `protobuf:"varint,4,opt,name=size_after_prune_kb,json=sizeAfterPruneKb,proto3,oneof" json:"size_after_prune_kb,omitempty"`
	NumEntriesPruned             *int64                 `protobuf:"varint,5,opt,name=num_entries_pruned,json=numEntriesPruned,proto3,oneof" json:"num_entries_pruned,omitempty"`
	NumEntriesPrunedExpired      *int64                 `protobuf:"varint,6,opt,name=num_entries_pruned_expired,json=numEntriesPrunedExpired,proto3,oneof" json:"num_entries_pruned_expired,omitempty"`
	SizeEntriesPrunedExpiredKb   *int64                 `protobuf:"varint,7,opt,name=size_entries_pruned_expired_kb,json=sizeEntriesPrunedExpiredKb,proto3,oneof" json:"size_entries_pruned_expired_kb,omitempty"`
	NumEntriesPrunedLimit        *int64                 `protobuf:"varint,8,opt,name=num_entries_pruned_limit,json=numEntriesPrunedLimit,proto3,oneof" json:"num_entries_pruned_limit,omitempty"`
	SizePrunedLimitKb            *int64                 `protobuf:"varint,9,opt,name=size_pruned_limit_kb,json=sizePrunedLimitKb,proto3,oneof" json:"size_pruned_limit_kb,omitempty"`
	NumEntriesPrunedNeverUsed    *int64                 `protobuf:"varint,10,opt,name=num_entries_pruned_never_used,json=numEntriesPrunedNeverUsed,proto3,oneof" json:"num_entries_pruned_never_used,omitempty"`
	SizePrunedNeverUsedKb        *int64                 `protobuf:"varint,11,opt,name=size_pruned_never_used_kb,json=sizePrunedNeverUsedKb,proto3,oneof" json:"size_pruned_never_used_kb,omitempty"`
	NumEntriesPrunedMaxRealmSize *int64                 `protobuf:"varint,12,opt,name=num_entries_pruned_max_realm_size,json=numEntriesPrunedMaxRealmSize,proto3,oneof" json:"num_entries_pruned_max_realm_size,omitempty"`
	SizePrunedMaxRealmSizeKb     *int64                 `protobuf:"varint,13,opt,name=size_pruned_max_realm_size_kb,json=sizePrunedMaxRealmSizeKb,proto3,oneof" json:"size_pruned_max_realm_size_kb,omitempty"`
	NumEntriesPrunedMinFreeSpace *int64                 `protobuf:"varint,14,opt,name=num_entries_pruned_min_free_space,json=numEntriesPrunedMinFreeSpace,proto3,oneof" json:"num_entries_pruned_min_free_space,omitempty"`
	SizePrunedMinFreeSpaceKb     *int64                 `protobuf:"varint,15,opt,name=size_pruned_min_free_space_kb,json=sizePrunedMinFreeSpaceKb,proto3,oneof" json:"size_pruned_min_free_space_kb,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *CachePruningReport) Reset() {
	*x = CachePruningReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CachePruningReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CachePruningReport) ProtoMessage() {}

func (x *CachePruningReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CachePruningReport.ProtoReflect.Descriptor instead.
func (*CachePruningReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{118}
}

func (x *CachePruningReport) GetCacheId() []byte {
	if x != nil {
		return x.CacheId
	}
	return nil
}

func (x *CachePruningReport) GetTimeSpentPruningMs() int64 {
	if x != nil && x.TimeSpentPruningMs != nil {
		return *x.TimeSpentPruningMs
	}
	return 0
}

func (x *CachePruningReport) GetSizeBeforePruneKb() int64 {
	if x != nil && x.SizeBeforePruneKb != nil {
		return *x.SizeBeforePruneKb
	}
	return 0
}

func (x *CachePruningReport) GetSizeAfterPruneKb() int64 {
	if x != nil && x.SizeAfterPruneKb != nil {
		return *x.SizeAfterPruneKb
	}
	return 0
}

func (x *CachePruningReport) GetNumEntriesPruned() int64 {
	if x != nil && x.NumEntriesPruned != nil {
		return *x.NumEntriesPruned
	}
	return 0
}

func (x *CachePruningReport) GetNumEntriesPrunedExpired() int64 {
	if x != nil && x.NumEntriesPrunedExpired != nil {
		return *x.NumEntriesPrunedExpired
	}
	return 0
}

func (x *CachePruningReport) GetSizeEntriesPrunedExpiredKb() int64 {
	if x != nil && x.SizeEntriesPrunedExpiredKb != nil {
		return *x.SizeEntriesPrunedExpiredKb
	}
	return 0
}

func (x *CachePruningReport) GetNumEntriesPrunedLimit() int64 {
	if x != nil && x.NumEntriesPrunedLimit != nil {
		return *x.NumEntriesPrunedLimit
	}
	return 0
}

func (x *CachePruningReport) GetSizePrunedLimitKb() int64 {
	if x != nil && x.SizePrunedLimitKb != nil {
		return *x.SizePrunedLimitKb
	}
	return 0
}

func (x *CachePruningReport) GetNumEntriesPrunedNeverUsed() int64 {
	if x != nil && x.NumEntriesPrunedNeverUsed != nil {
		return *x.NumEntriesPrunedNeverUsed
	}
	return 0
}

func (x *CachePruningReport) GetSizePrunedNeverUsedKb() int64 {
	if x != nil && x.SizePrunedNeverUsedKb != nil {
		return *x.SizePrunedNeverUsedKb
	}
	return 0
}

func (x *CachePruningReport) GetNumEntriesPrunedMaxRealmSize() int64 {
	if x != nil && x.NumEntriesPrunedMaxRealmSize != nil {
		return *x.NumEntriesPrunedMaxRealmSize
	}
	return 0
}

func (x *CachePruningReport) GetSizePrunedMaxRealmSizeKb() int64 {
	if x != nil && x.SizePrunedMaxRealmSizeKb != nil {
		return *x.SizePrunedMaxRealmSizeKb
	}
	return 0
}

func (x *CachePruningReport) GetNumEntriesPrunedMinFreeSpace() int64 {
	if x != nil && x.NumEntriesPrunedMinFreeSpace != nil {
		return *x.NumEntriesPrunedMinFreeSpace
	}
	return 0
}

func (x *CachePruningReport) GetSizePrunedMinFreeSpaceKb() int64 {
	if x != nil && x.SizePrunedMinFreeSpaceKb != nil {
		return *x.SizePrunedMinFreeSpaceKb
	}
	return 0
}

type CacheRealmPruningReport struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	CacheId                      []byte                 `protobuf:"bytes,1,opt,name=cache_id,json=cacheId,proto3,oneof" json:"cache_id,omitempty"`
	RealmId                      *int64                 `protobuf:"varint,2,opt,name=realm_id,json=realmId,proto3,oneof" json:"realm_id,omitempty"`
	NumEntriesPruned             *int64                 `protobuf:"varint,3,opt,name=num_entries_pruned,json=numEntriesPruned,proto3,oneof" json:"num_entries_pruned,omitempty"`
	NumEntriesPrunedExpired      *int64                 `protobuf:"varint,4,opt,name=num_entries_pruned_expired,json=numEntriesPrunedExpired,proto3,oneof" json:"num_entries_pruned_expired,omitempty"`
	SizeEntriesPrunedExpiredKb   *int64                 `protobuf:"varint,5,opt,name=size_entries_pruned_expired_kb,json=sizeEntriesPrunedExpiredKb,proto3,oneof" json:"size_entries_pruned_expired_kb,omitempty"`
	NumEntriesPrunedLimit        *int64                 `protobuf:"varint,6,opt,name=num_entries_pruned_limit,json=numEntriesPrunedLimit,proto3,oneof" json:"num_entries_pruned_limit,omitempty"`
	SizePrunedLimitKb            *int64                 `protobuf:"varint,7,opt,name=size_pruned_limit_kb,json=sizePrunedLimitKb,proto3,oneof" json:"size_pruned_limit_kb,omitempty"`
	NumEntriesPrunedNeverUsed    *int64                 `protobuf:"varint,8,opt,name=num_entries_pruned_never_used,json=numEntriesPrunedNeverUsed,proto3,oneof" json:"num_entries_pruned_never_used,omitempty"`
	SizePrunedNeverUsedKb        *int64                 `protobuf:"varint,9,opt,name=size_pruned_never_used_kb,json=sizePrunedNeverUsedKb,proto3,oneof" json:"size_pruned_never_used_kb,omitempty"`
	NumEntriesPrunedMaxRealmSize *int64                 `protobuf:"varint,10,opt,name=num_entries_pruned_max_realm_size,json=numEntriesPrunedMaxRealmSize,proto3,oneof" json:"num_entries_pruned_max_realm_size,omitempty"`
	SizePrunedMaxRealmSizeKb     *int64                 `protobuf:"varint,11,opt,name=size_pruned_max_realm_size_kb,json=sizePrunedMaxRealmSizeKb,proto3,oneof" json:"size_pruned_max_realm_size_kb,omitempty"`
	NumEntriesPrunedMinFreeSpace *int64                 `protobuf:"varint,12,opt,name=num_entries_pruned_min_free_space,json=numEntriesPrunedMinFreeSpace,proto3,oneof" json:"num_entries_pruned_min_free_space,omitempty"`
	SizePrunedMinFreeSpaceKb     *int64                 `protobuf:"varint,13,opt,name=size_pruned_min_free_space_kb,json=sizePrunedMinFreeSpaceKb,proto3,oneof" json:"size_pruned_min_free_space_kb,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *CacheRealmPruningReport) Reset() {
	*x = CacheRealmPruningReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheRealmPruningReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheRealmPruningReport) ProtoMessage() {}

func (x *CacheRealmPruningReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheRealmPruningReport.ProtoReflect.Descriptor instead.
func (*CacheRealmPruningReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{119}
}

func (x *CacheRealmPruningReport) GetCacheId() []byte {
	if x != nil {
		return x.CacheId
	}
	return nil
}

func (x *CacheRealmPruningReport) GetRealmId() int64 {
	if x != nil && x.RealmId != nil {
		return *x.RealmId
	}
	return 0
}

func (x *CacheRealmPruningReport) GetNumEntriesPruned() int64 {
	if x != nil && x.NumEntriesPruned != nil {
		return *x.NumEntriesPruned
	}
	return 0
}

func (x *CacheRealmPruningReport) GetNumEntriesPrunedExpired() int64 {
	if x != nil && x.NumEntriesPrunedExpired != nil {
		return *x.NumEntriesPrunedExpired
	}
	return 0
}

func (x *CacheRealmPruningReport) GetSizeEntriesPrunedExpiredKb() int64 {
	if x != nil && x.SizeEntriesPrunedExpiredKb != nil {
		return *x.SizeEntriesPrunedExpiredKb
	}
	return 0
}

func (x *CacheRealmPruningReport) GetNumEntriesPrunedLimit() int64 {
	if x != nil && x.NumEntriesPrunedLimit != nil {
		return *x.NumEntriesPrunedLimit
	}
	return 0
}

func (x *CacheRealmPruningReport) GetSizePrunedLimitKb() int64 {
	if x != nil && x.SizePrunedLimitKb != nil {
		return *x.SizePrunedLimitKb
	}
	return 0
}

func (x *CacheRealmPruningReport) GetNumEntriesPrunedNeverUsed() int64 {
	if x != nil && x.NumEntriesPrunedNeverUsed != nil {
		return *x.NumEntriesPrunedNeverUsed
	}
	return 0
}

func (x *CacheRealmPruningReport) GetSizePrunedNeverUsedKb() int64 {
	if x != nil && x.SizePrunedNeverUsedKb != nil {
		return *x.SizePrunedNeverUsedKb
	}
	return 0
}

func (x *CacheRealmPruningReport) GetNumEntriesPrunedMaxRealmSize() int64 {
	if x != nil && x.NumEntriesPrunedMaxRealmSize != nil {
		return *x.NumEntriesPrunedMaxRealmSize
	}
	return 0
}

func (x *CacheRealmPruningReport) GetSizePrunedMaxRealmSizeKb() int64 {
	if x != nil && x.SizePrunedMaxRealmSizeKb != nil {
		return *x.SizePrunedMaxRealmSizeKb
	}
	return 0
}

func (x *CacheRealmPruningReport) GetNumEntriesPrunedMinFreeSpace() int64 {
	if x != nil && x.NumEntriesPrunedMinFreeSpace != nil {
		return *x.NumEntriesPrunedMinFreeSpace
	}
	return 0
}

func (x *CacheRealmPruningReport) GetSizePrunedMinFreeSpaceKb() int64 {
	if x != nil && x.SizePrunedMinFreeSpaceKb != nil {
		return *x.SizePrunedMinFreeSpaceKb
	}
	return 0
}

type CacheRealmReport struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	CacheId                     []byte                 `protobuf:"bytes,1,opt,name=cache_id,json=cacheId,proto3,oneof" json:"cache_id,omitempty"`
	RealmId                     *int64                 `protobuf:"varint,2,opt,name=realm_id,json=realmId,proto3,oneof" json:"realm_id,omitempty"`
	NumEntries                  *int64                 `protobuf:"varint,3,opt,name=num_entries,json=numEntries,proto3,oneof" json:"num_entries,omitempty"`
	NumLockedEntries            *int64                 `protobuf:"varint,4,opt,name=num_locked_entries,json=numLockedEntries,proto3,oneof" json:"num_locked_entries,omitempty"`
	NumLockedEntriesCurrentUser *int64                 `protobuf:"varint,5,opt,name=num_locked_entries_current_user,json=numLockedEntriesCurrentUser,proto3,oneof" json:"num_locked_entries_current_user,omitempty"`
	NumFullEntries              *int64                 `protobuf:"varint,6,opt,name=num_full_entries,json=numFullEntries,proto3,oneof" json:"num_full_entries,omitempty"`
	SizeKb                      *int64                 `protobuf:"varint,7,opt,name=size_kb,json=sizeKb,proto3,oneof" json:"size_kb,omitempty"`
	LockedSizeKb                *int64                 `protobuf:"varint,8,opt,name=locked_size_kb,json=lockedSizeKb,proto3,oneof" json:"locked_size_kb,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *CacheRealmReport) Reset() {
	*x = CacheRealmReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheRealmReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheRealmReport) ProtoMessage() {}

func (x *CacheRealmReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheRealmReport.ProtoReflect.Descriptor instead.
func (*CacheRealmReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{120}
}

func (x *CacheRealmReport) GetCacheId() []byte {
	if x != nil {
		return x.CacheId
	}
	return nil
}

func (x *CacheRealmReport) GetRealmId() int64 {
	if x != nil && x.RealmId != nil {
		return *x.RealmId
	}
	return 0
}

func (x *CacheRealmReport) GetNumEntries() int64 {
	if x != nil && x.NumEntries != nil {
		return *x.NumEntries
	}
	return 0
}

func (x *CacheRealmReport) GetNumLockedEntries() int64 {
	if x != nil && x.NumLockedEntries != nil {
		return *x.NumLockedEntries
	}
	return 0
}

func (x *CacheRealmReport) GetNumLockedEntriesCurrentUser() int64 {
	if x != nil && x.NumLockedEntriesCurrentUser != nil {
		return *x.NumLockedEntriesCurrentUser
	}
	return 0
}

func (x *CacheRealmReport) GetNumFullEntries() int64 {
	if x != nil && x.NumFullEntries != nil {
		return *x.NumFullEntries
	}
	return 0
}

func (x *CacheRealmReport) GetSizeKb() int64 {
	if x != nil && x.SizeKb != nil {
		return *x.SizeKb
	}
	return 0
}

func (x *CacheRealmReport) GetLockedSizeKb() int64 {
	if x != nil && x.LockedSizeKb != nil {
		return *x.LockedSizeKb
	}
	return 0
}

type CacheReport struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	CacheId                     []byte                 `protobuf:"bytes,1,opt,name=cache_id,json=cacheId,proto3,oneof" json:"cache_id,omitempty"`
	CachePath                   *string                `protobuf:"bytes,21,opt,name=cache_path,json=cachePath,proto3,oneof" json:"cache_path,omitempty"`
	VolatilePath                *string                `protobuf:"bytes,22,opt,name=volatile_path,json=volatilePath,proto3,oneof" json:"volatile_path,omitempty"`
	MaxCacheSize                *int64                 `protobuf:"varint,2,opt,name=max_cache_size,json=maxCacheSize,proto3,oneof" json:"max_cache_size,omitempty"`
	FreeSpace                   *int64                 `protobuf:"varint,3,opt,name=free_space,json=freeSpace,proto3,oneof" json:"free_space,omitempty"`
	TotalSpace                  *int64                 `protobuf:"varint,4,opt,name=total_space,json=totalSpace,proto3,oneof" json:"total_space,omitempty"`
	VolatileFreeSpace           *int64                 `protobuf:"varint,23,opt,name=volatile_free_space,json=volatileFreeSpace,proto3,oneof" json:"volatile_free_space,omitempty"`
	VolatileTotalSpace          *int64                 `protobuf:"varint,24,opt,name=volatile_total_space,json=volatileTotalSpace,proto3,oneof" json:"volatile_total_space,omitempty"`
	VolatileOnSeparateVolume    *bool                  `protobuf:"varint,25,opt,name=volatile_on_separate_volume,json=volatileOnSeparateVolume,proto3,oneof" json:"volatile_on_separate_volume,omitempty"`
	CacheAge                    *int64                 `protobuf:"varint,5,opt,name=cache_age,json=cacheAge,proto3,oneof" json:"cache_age,omitempty"`
	NumUsersWithLockedEntries   *int64                 `protobuf:"varint,6,opt,name=num_users_with_locked_entries,json=numUsersWithLockedEntries,proto3,oneof" json:"num_users_with_locked_entries,omitempty"`
	PermanentFiles              *int64                 `protobuf:"varint,7,opt,name=permanent_files,json=permanentFiles,proto3,oneof" json:"permanent_files,omitempty"`
	PermanentSizeKb             *int64                 `protobuf:"varint,8,opt,name=permanent_size_kb,json=permanentSizeKb,proto3,oneof" json:"permanent_size_kb,omitempty"`
	UnknownPermanentFiles       *int64                 `protobuf:"varint,9,opt,name=unknown_permanent_files,json=unknownPermanentFiles,proto3,oneof" json:"unknown_permanent_files,omitempty"`
	UnknownPermanentSizeKb      *int64                 `protobuf:"varint,10,opt,name=unknown_permanent_size_kb,json=unknownPermanentSizeKb,proto3,oneof" json:"unknown_permanent_size_kb,omitempty"`
	VolatileFiles               *int64                 `protobuf:"varint,11,opt,name=volatile_files,json=volatileFiles,proto3,oneof" json:"volatile_files,omitempty"`
	VolatileSizeKb              *int64                 `protobuf:"varint,12,opt,name=volatile_size_kb,json=volatileSizeKb,proto3,oneof" json:"volatile_size_kb,omitempty"`
	UnknownVolatileFiles        *int64                 `protobuf:"varint,13,opt,name=unknown_volatile_files,json=unknownVolatileFiles,proto3,oneof" json:"unknown_volatile_files,omitempty"`
	UnknownVolatileSizeKb       *int64                 `protobuf:"varint,14,opt,name=unknown_volatile_size_kb,json=unknownVolatileSizeKb,proto3,oneof" json:"unknown_volatile_size_kb,omitempty"`
	NumEntries                  *int64                 `protobuf:"varint,15,opt,name=num_entries,json=numEntries,proto3,oneof" json:"num_entries,omitempty"`
	NumLockedEntries            *int64                 `protobuf:"varint,16,opt,name=num_locked_entries,json=numLockedEntries,proto3,oneof" json:"num_locked_entries,omitempty"`
	NumLockedEntriesCurrentUser *int64                 `protobuf:"varint,17,opt,name=num_locked_entries_current_user,json=numLockedEntriesCurrentUser,proto3,oneof" json:"num_locked_entries_current_user,omitempty"`
	NumFullEntries              *int64                 `protobuf:"varint,18,opt,name=num_full_entries,json=numFullEntries,proto3,oneof" json:"num_full_entries,omitempty"`
	SizeKb                      *int64                 `protobuf:"varint,19,opt,name=size_kb,json=sizeKb,proto3,oneof" json:"size_kb,omitempty"`
	LockedSizeKb                *int64                 `protobuf:"varint,20,opt,name=locked_size_kb,json=lockedSizeKb,proto3,oneof" json:"locked_size_kb,omitempty"`
	Reason                      *string                `protobuf:"bytes,26,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	MissingFiles                *int64                 `protobuf:"varint,27,opt,name=missing_files,json=missingFiles,proto3,oneof" json:"missing_files,omitempty"`
	MissingSizeKb               *int64                 `protobuf:"varint,28,opt,name=missing_size_kb,json=missingSizeKb,proto3,oneof" json:"missing_size_kb,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *CacheReport) Reset() {
	*x = CacheReport{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheReport) ProtoMessage() {}

func (x *CacheReport) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheReport.ProtoReflect.Descriptor instead.
func (*CacheReport) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{121}
}

func (x *CacheReport) GetCacheId() []byte {
	if x != nil {
		return x.CacheId
	}
	return nil
}

func (x *CacheReport) GetCachePath() string {
	if x != nil && x.CachePath != nil {
		return *x.CachePath
	}
	return ""
}

func (x *CacheReport) GetVolatilePath() string {
	if x != nil && x.VolatilePath != nil {
		return *x.VolatilePath
	}
	return ""
}

func (x *CacheReport) GetMaxCacheSize() int64 {
	if x != nil && x.MaxCacheSize != nil {
		return *x.MaxCacheSize
	}
	return 0
}

func (x *CacheReport) GetFreeSpace() int64 {
	if x != nil && x.FreeSpace != nil {
		return *x.FreeSpace
	}
	return 0
}

func (x *CacheReport) GetTotalSpace() int64 {
	if x != nil && x.TotalSpace != nil {
		return *x.TotalSpace
	}
	return 0
}

func (x *CacheReport) GetVolatileFreeSpace() int64 {
	if x != nil && x.VolatileFreeSpace != nil {
		return *x.VolatileFreeSpace
	}
	return 0
}

func (x *CacheReport) GetVolatileTotalSpace() int64 {
	if x != nil && x.VolatileTotalSpace != nil {
		return *x.VolatileTotalSpace
	}
	return 0
}

func (x *CacheReport) GetVolatileOnSeparateVolume() bool {
	if x != nil && x.VolatileOnSeparateVolume != nil {
		return *x.VolatileOnSeparateVolume
	}
	return false
}

func (x *CacheReport) GetCacheAge() int64 {
	if x != nil && x.CacheAge != nil {
		return *x.CacheAge
	}
	return 0
}

func (x *CacheReport) GetNumUsersWithLockedEntries() int64 {
	if x != nil && x.NumUsersWithLockedEntries != nil {
		return *x.NumUsersWithLockedEntries
	}
	return 0
}

func (x *CacheReport) GetPermanentFiles() int64 {
	if x != nil && x.PermanentFiles != nil {
		return *x.PermanentFiles
	}
	return 0
}

func (x *CacheReport) GetPermanentSizeKb() int64 {
	if x != nil && x.PermanentSizeKb != nil {
		return *x.PermanentSizeKb
	}
	return 0
}

func (x *CacheReport) GetUnknownPermanentFiles() int64 {
	if x != nil && x.UnknownPermanentFiles != nil {
		return *x.UnknownPermanentFiles
	}
	return 0
}

func (x *CacheReport) GetUnknownPermanentSizeKb() int64 {
	if x != nil && x.UnknownPermanentSizeKb != nil {
		return *x.UnknownPermanentSizeKb
	}
	return 0
}

func (x *CacheReport) GetVolatileFiles() int64 {
	if x != nil && x.VolatileFiles != nil {
		return *x.VolatileFiles
	}
	return 0
}

func (x *CacheReport) GetVolatileSizeKb() int64 {
	if x != nil && x.VolatileSizeKb != nil {
		return *x.VolatileSizeKb
	}
	return 0
}

func (x *CacheReport) GetUnknownVolatileFiles() int64 {
	if x != nil && x.UnknownVolatileFiles != nil {
		return *x.UnknownVolatileFiles
	}
	return 0
}

func (x *CacheReport) GetUnknownVolatileSizeKb() int64 {
	if x != nil && x.UnknownVolatileSizeKb != nil {
		return *x.UnknownVolatileSizeKb
	}
	return 0
}

func (x *CacheReport) GetNumEntries() int64 {
	if x != nil && x.NumEntries != nil {
		return *x.NumEntries
	}
	return 0
}

func (x *CacheReport) GetNumLockedEntries() int64 {
	if x != nil && x.NumLockedEntries != nil {
		return *x.NumLockedEntries
	}
	return 0
}

func (x *CacheReport) GetNumLockedEntriesCurrentUser() int64 {
	if x != nil && x.NumLockedEntriesCurrentUser != nil {
		return *x.NumLockedEntriesCurrentUser
	}
	return 0
}

func (x *CacheReport) GetNumFullEntries() int64 {
	if x != nil && x.NumFullEntries != nil {
		return *x.NumFullEntries
	}
	return 0
}

func (x *CacheReport) GetSizeKb() int64 {
	if x != nil && x.SizeKb != nil {
		return *x.SizeKb
	}
	return 0
}

func (x *CacheReport) GetLockedSizeKb() int64 {
	if x != nil && x.LockedSizeKb != nil {
		return *x.LockedSizeKb
	}
	return 0
}

func (x *CacheReport) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *CacheReport) GetMissingFiles() int64 {
	if x != nil && x.MissingFiles != nil {
		return *x.MissingFiles
	}
	return 0
}

func (x *CacheReport) GetMissingSizeKb() int64 {
	if x != nil && x.MissingSizeKb != nil {
		return *x.MissingSizeKb
	}
	return 0
}

type ConnectPullFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransferData  []byte                 `protobuf:"bytes,1,opt,name=transfer_data,json=transferData,proto3,oneof" json:"transfer_data,omitempty"`
	ErrorCode     *int64                 `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	Reasons       map[string]string      `protobuf:"bytes,3,rep,name=reasons,proto3" json:"reasons,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectPullFailure) Reset() {
	*x = ConnectPullFailure{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectPullFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectPullFailure) ProtoMessage() {}

func (x *ConnectPullFailure) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectPullFailure.ProtoReflect.Descriptor instead.
func (*ConnectPullFailure) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{122}
}

func (x *ConnectPullFailure) GetTransferData() []byte {
	if x != nil {
		return x.TransferData
	}
	return nil
}

func (x *ConnectPullFailure) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *ConnectPullFailure) GetReasons() map[string]string {
	if x != nil {
		return x.Reasons
	}
	return nil
}

type CorePlaybackFinished struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     *string                `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
	PlaybackId    []byte                 `protobuf:"bytes,2,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CorePlaybackFinished) Reset() {
	*x = CorePlaybackFinished{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CorePlaybackFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorePlaybackFinished) ProtoMessage() {}

func (x *CorePlaybackFinished) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorePlaybackFinished.ProtoReflect.Descriptor instead.
func (*CorePlaybackFinished) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{123}
}

func (x *CorePlaybackFinished) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *CorePlaybackFinished) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

type Download struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	FileId                []byte                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3,oneof" json:"file_id,omitempty"`
	PlaybackId            []byte                 `protobuf:"bytes,2,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	BytesFromAp           *int64                 `protobuf:"varint,3,opt,name=bytes_from_ap,json=bytesFromAp,proto3,oneof" json:"bytes_from_ap,omitempty"`
	WasteFromAp           *int64                 `protobuf:"varint,4,opt,name=waste_from_ap,json=wasteFromAp,proto3,oneof" json:"waste_from_ap,omitempty"`
	ReqsFromAp            *int64                 `protobuf:"varint,5,opt,name=reqs_from_ap,json=reqsFromAp,proto3,oneof" json:"reqs_from_ap,omitempty"`
	ErrorFromAp           *int64                 `protobuf:"varint,6,opt,name=error_from_ap,json=errorFromAp,proto3,oneof" json:"error_from_ap,omitempty"`
	BytesFromCdn          *int64                 `protobuf:"varint,7,opt,name=bytes_from_cdn,json=bytesFromCdn,proto3,oneof" json:"bytes_from_cdn,omitempty"`
	WasteFromCdn          *int64                 `protobuf:"varint,8,opt,name=waste_from_cdn,json=wasteFromCdn,proto3,oneof" json:"waste_from_cdn,omitempty"`
	BytesFromCache        *int64                 `protobuf:"varint,9,opt,name=bytes_from_cache,json=bytesFromCache,proto3,oneof" json:"bytes_from_cache,omitempty"`
	ContentSize           *int64                 `protobuf:"varint,10,opt,name=content_size,json=contentSize,proto3,oneof" json:"content_size,omitempty"`
	ContentType           *string                `protobuf:"bytes,11,opt,name=content_type,json=contentType,proto3,oneof" json:"content_type,omitempty"`
	ApInitialLatency      *int64                 `protobuf:"varint,12,opt,name=ap_initial_latency,json=apInitialLatency,proto3,oneof" json:"ap_initial_latency,omitempty"`
	ApMaxLatency          *int64                 `protobuf:"varint,13,opt,name=ap_max_latency,json=apMaxLatency,proto3,oneof" json:"ap_max_latency,omitempty"`
	ApMinLatency          *int64                 `protobuf:"varint,14,opt,name=ap_min_latency,json=apMinLatency,proto3,oneof" json:"ap_min_latency,omitempty"`
	ApAvgLatency          *float64               `protobuf:"fixed64,15,opt,name=ap_avg_latency,json=apAvgLatency,proto3,oneof" json:"ap_avg_latency,omitempty"`
	ApMedianLatency       *int64                 `protobuf:"varint,16,opt,name=ap_median_latency,json=apMedianLatency,proto3,oneof" json:"ap_median_latency,omitempty"`
	ApAvgBw               *float64               `protobuf:"fixed64,17,opt,name=ap_avg_bw,json=apAvgBw,proto3,oneof" json:"ap_avg_bw,omitempty"`
	CdnInitialLatency     *int64                 `protobuf:"varint,18,opt,name=cdn_initial_latency,json=cdnInitialLatency,proto3,oneof" json:"cdn_initial_latency,omitempty"`
	CdnMaxLatency         *int64                 `protobuf:"varint,19,opt,name=cdn_max_latency,json=cdnMaxLatency,proto3,oneof" json:"cdn_max_latency,omitempty"`
	CdnMinLatency         *int64                 `protobuf:"varint,20,opt,name=cdn_min_latency,json=cdnMinLatency,proto3,oneof" json:"cdn_min_latency,omitempty"`
	CdnAvgLatency         *float64               `protobuf:"fixed64,21,opt,name=cdn_avg_latency,json=cdnAvgLatency,proto3,oneof" json:"cdn_avg_latency,omitempty"`
	CdnMedianLatency      *int64                 `protobuf:"varint,22,opt,name=cdn_median_latency,json=cdnMedianLatency,proto3,oneof" json:"cdn_median_latency,omitempty"`
	Cdn_64KInitialLatency *int64                 `protobuf:"varint,23,opt,name=cdn_64k_initial_latency,json=cdn64kInitialLatency,proto3,oneof" json:"cdn_64k_initial_latency,omitempty"`
	Cdn_64KMaxLatency     *int64                 `protobuf:"varint,24,opt,name=cdn_64k_max_latency,json=cdn64kMaxLatency,proto3,oneof" json:"cdn_64k_max_latency,omitempty"`
	Cdn_64KMinLatency     *int64                 `protobuf:"varint,25,opt,name=cdn_64k_min_latency,json=cdn64kMinLatency,proto3,oneof" json:"cdn_64k_min_latency,omitempty"`
	Cdn_64KAvgLatency     *float64               `protobuf:"fixed64,26,opt,name=cdn_64k_avg_latency,json=cdn64kAvgLatency,proto3,oneof" json:"cdn_64k_avg_latency,omitempty"`
	Cdn_64KMedianLatency  *int64                 `protobuf:"varint,27,opt,name=cdn_64k_median_latency,json=cdn64kMedianLatency,proto3,oneof" json:"cdn_64k_median_latency,omitempty"`
	CdnAvgBw              *float64               `protobuf:"fixed64,28,opt,name=cdn_avg_bw,json=cdnAvgBw,proto3,oneof" json:"cdn_avg_bw,omitempty"`
	CdnInitialBwEstimate  *float64               `protobuf:"fixed64,29,opt,name=cdn_initial_bw_estimate,json=cdnInitialBwEstimate,proto3,oneof" json:"cdn_initial_bw_estimate,omitempty"`
	CdnUriScheme          *string                `protobuf:"bytes,30,opt,name=cdn_uri_scheme,json=cdnUriScheme,proto3,oneof" json:"cdn_uri_scheme,omitempty"`
	CdnDomain             *string                `protobuf:"bytes,31,opt,name=cdn_domain,json=cdnDomain,proto3,oneof" json:"cdn_domain,omitempty"`
	CdnSocketReuse        *string                `protobuf:"bytes,32,opt,name=cdn_socket_reuse,json=cdnSocketReuse,proto3,oneof" json:"cdn_socket_reuse,omitempty"`
	CdnProtocol           *string                `protobuf:"bytes,46,opt,name=cdn_protocol,json=cdnProtocol,proto3,oneof" json:"cdn_protocol,omitempty"`
	NumCacheError         *int64                 `protobuf:"varint,33,opt,name=num_cache_error,json=numCacheError,proto3,oneof" json:"num_cache_error,omitempty"`
	BytesFromCarrier      *int64                 `protobuf:"varint,34,opt,name=bytes_from_carrier,json=bytesFromCarrier,proto3,oneof" json:"bytes_from_carrier,omitempty"`
	BytesFromUnknown      *int64                 `protobuf:"varint,35,opt,name=bytes_from_unknown,json=bytesFromUnknown,proto3,oneof" json:"bytes_from_unknown,omitempty"`
	BytesFromWifi         *int64                 `protobuf:"varint,36,opt,name=bytes_from_wifi,json=bytesFromWifi,proto3,oneof" json:"bytes_from_wifi,omitempty"`
	BytesFromEthernet     *int64                 `protobuf:"varint,37,opt,name=bytes_from_ethernet,json=bytesFromEthernet,proto3,oneof" json:"bytes_from_ethernet,omitempty"`
	RequestType           *string                `protobuf:"bytes,38,opt,name=request_type,json=requestType,proto3,oneof" json:"request_type,omitempty"`
	TotalTime             *int64                 `protobuf:"varint,39,opt,name=total_time,json=totalTime,proto3,oneof" json:"total_time,omitempty"`
	Bitrate               *int64                 `protobuf:"varint,40,opt,name=bitrate,proto3,oneof" json:"bitrate,omitempty"`
	ReqsFromCdn           *int64                 `protobuf:"varint,41,opt,name=reqs_from_cdn,json=reqsFromCdn,proto3,oneof" json:"reqs_from_cdn,omitempty"`
	ErrorFromCdn          *int64                 `protobuf:"varint,42,opt,name=error_from_cdn,json=errorFromCdn,proto3,oneof" json:"error_from_cdn,omitempty"`
	FileOrigin            *string                `protobuf:"bytes,43,opt,name=file_origin,json=fileOrigin,proto3,oneof" json:"file_origin,omitempty"`
	InitialDiskState      *string                `protobuf:"bytes,44,opt,name=initial_disk_state,json=initialDiskState,proto3,oneof" json:"initial_disk_state,omitempty"`
	Locked                *bool                  `protobuf:"varint,45,opt,name=locked,proto3,oneof" json:"locked,omitempty"`
	StorageResolveLatency *int64                 `protobuf:"varint,47,opt,name=storage_resolve_latency,json=storageResolveLatency,proto3,oneof" json:"storage_resolve_latency,omitempty"`
	OriginalCdnDomain     *string                `protobuf:"bytes,48,opt,name=original_cdn_domain,json=originalCdnDomain,proto3,oneof" json:"original_cdn_domain,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Download) Reset() {
	*x = Download{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Download) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Download) ProtoMessage() {}

func (x *Download) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Download.ProtoReflect.Descriptor instead.
func (*Download) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{124}
}

func (x *Download) GetFileId() []byte {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *Download) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *Download) GetBytesFromAp() int64 {
	if x != nil && x.BytesFromAp != nil {
		return *x.BytesFromAp
	}
	return 0
}

func (x *Download) GetWasteFromAp() int64 {
	if x != nil && x.WasteFromAp != nil {
		return *x.WasteFromAp
	}
	return 0
}

func (x *Download) GetReqsFromAp() int64 {
	if x != nil && x.ReqsFromAp != nil {
		return *x.ReqsFromAp
	}
	return 0
}

func (x *Download) GetErrorFromAp() int64 {
	if x != nil && x.ErrorFromAp != nil {
		return *x.ErrorFromAp
	}
	return 0
}

func (x *Download) GetBytesFromCdn() int64 {
	if x != nil && x.BytesFromCdn != nil {
		return *x.BytesFromCdn
	}
	return 0
}

func (x *Download) GetWasteFromCdn() int64 {
	if x != nil && x.WasteFromCdn != nil {
		return *x.WasteFromCdn
	}
	return 0
}

func (x *Download) GetBytesFromCache() int64 {
	if x != nil && x.BytesFromCache != nil {
		return *x.BytesFromCache
	}
	return 0
}

func (x *Download) GetContentSize() int64 {
	if x != nil && x.ContentSize != nil {
		return *x.ContentSize
	}
	return 0
}

func (x *Download) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

func (x *Download) GetApInitialLatency() int64 {
	if x != nil && x.ApInitialLatency != nil {
		return *x.ApInitialLatency
	}
	return 0
}

func (x *Download) GetApMaxLatency() int64 {
	if x != nil && x.ApMaxLatency != nil {
		return *x.ApMaxLatency
	}
	return 0
}

func (x *Download) GetApMinLatency() int64 {
	if x != nil && x.ApMinLatency != nil {
		return *x.ApMinLatency
	}
	return 0
}

func (x *Download) GetApAvgLatency() float64 {
	if x != nil && x.ApAvgLatency != nil {
		return *x.ApAvgLatency
	}
	return 0
}

func (x *Download) GetApMedianLatency() int64 {
	if x != nil && x.ApMedianLatency != nil {
		return *x.ApMedianLatency
	}
	return 0
}

func (x *Download) GetApAvgBw() float64 {
	if x != nil && x.ApAvgBw != nil {
		return *x.ApAvgBw
	}
	return 0
}

func (x *Download) GetCdnInitialLatency() int64 {
	if x != nil && x.CdnInitialLatency != nil {
		return *x.CdnInitialLatency
	}
	return 0
}

func (x *Download) GetCdnMaxLatency() int64 {
	if x != nil && x.CdnMaxLatency != nil {
		return *x.CdnMaxLatency
	}
	return 0
}

func (x *Download) GetCdnMinLatency() int64 {
	if x != nil && x.CdnMinLatency != nil {
		return *x.CdnMinLatency
	}
	return 0
}

func (x *Download) GetCdnAvgLatency() float64 {
	if x != nil && x.CdnAvgLatency != nil {
		return *x.CdnAvgLatency
	}
	return 0
}

func (x *Download) GetCdnMedianLatency() int64 {
	if x != nil && x.CdnMedianLatency != nil {
		return *x.CdnMedianLatency
	}
	return 0
}

func (x *Download) GetCdn_64KInitialLatency() int64 {
	if x != nil && x.Cdn_64KInitialLatency != nil {
		return *x.Cdn_64KInitialLatency
	}
	return 0
}

func (x *Download) GetCdn_64KMaxLatency() int64 {
	if x != nil && x.Cdn_64KMaxLatency != nil {
		return *x.Cdn_64KMaxLatency
	}
	return 0
}

func (x *Download) GetCdn_64KMinLatency() int64 {
	if x != nil && x.Cdn_64KMinLatency != nil {
		return *x.Cdn_64KMinLatency
	}
	return 0
}

func (x *Download) GetCdn_64KAvgLatency() float64 {
	if x != nil && x.Cdn_64KAvgLatency != nil {
		return *x.Cdn_64KAvgLatency
	}
	return 0
}

func (x *Download) GetCdn_64KMedianLatency() int64 {
	if x != nil && x.Cdn_64KMedianLatency != nil {
		return *x.Cdn_64KMedianLatency
	}
	return 0
}

func (x *Download) GetCdnAvgBw() float64 {
	if x != nil && x.CdnAvgBw != nil {
		return *x.CdnAvgBw
	}
	return 0
}

func (x *Download) GetCdnInitialBwEstimate() float64 {
	if x != nil && x.CdnInitialBwEstimate != nil {
		return *x.CdnInitialBwEstimate
	}
	return 0
}

func (x *Download) GetCdnUriScheme() string {
	if x != nil && x.CdnUriScheme != nil {
		return *x.CdnUriScheme
	}
	return ""
}

func (x *Download) GetCdnDomain() string {
	if x != nil && x.CdnDomain != nil {
		return *x.CdnDomain
	}
	return ""
}

func (x *Download) GetCdnSocketReuse() string {
	if x != nil && x.CdnSocketReuse != nil {
		return *x.CdnSocketReuse
	}
	return ""
}

func (x *Download) GetCdnProtocol() string {
	if x != nil && x.CdnProtocol != nil {
		return *x.CdnProtocol
	}
	return ""
}

func (x *Download) GetNumCacheError() int64 {
	if x != nil && x.NumCacheError != nil {
		return *x.NumCacheError
	}
	return 0
}

func (x *Download) GetBytesFromCarrier() int64 {
	if x != nil && x.BytesFromCarrier != nil {
		return *x.BytesFromCarrier
	}
	return 0
}

func (x *Download) GetBytesFromUnknown() int64 {
	if x != nil && x.BytesFromUnknown != nil {
		return *x.BytesFromUnknown
	}
	return 0
}

func (x *Download) GetBytesFromWifi() int64 {
	if x != nil && x.BytesFromWifi != nil {
		return *x.BytesFromWifi
	}
	return 0
}

func (x *Download) GetBytesFromEthernet() int64 {
	if x != nil && x.BytesFromEthernet != nil {
		return *x.BytesFromEthernet
	}
	return 0
}

func (x *Download) GetRequestType() string {
	if x != nil && x.RequestType != nil {
		return *x.RequestType
	}
	return ""
}

func (x *Download) GetTotalTime() int64 {
	if x != nil && x.TotalTime != nil {
		return *x.TotalTime
	}
	return 0
}

func (x *Download) GetBitrate() int64 {
	if x != nil && x.Bitrate != nil {
		return *x.Bitrate
	}
	return 0
}

func (x *Download) GetReqsFromCdn() int64 {
	if x != nil && x.ReqsFromCdn != nil {
		return *x.ReqsFromCdn
	}
	return 0
}

func (x *Download) GetErrorFromCdn() int64 {
	if x != nil && x.ErrorFromCdn != nil {
		return *x.ErrorFromCdn
	}
	return 0
}

func (x *Download) GetFileOrigin() string {
	if x != nil && x.FileOrigin != nil {
		return *x.FileOrigin
	}
	return ""
}

func (x *Download) GetInitialDiskState() string {
	if x != nil && x.InitialDiskState != nil {
		return *x.InitialDiskState
	}
	return ""
}

func (x *Download) GetLocked() bool {
	if x != nil && x.Locked != nil {
		return *x.Locked
	}
	return false
}

func (x *Download) GetStorageResolveLatency() int64 {
	if x != nil && x.StorageResolveLatency != nil {
		return *x.StorageResolveLatency
	}
	return 0
}

func (x *Download) GetOriginalCdnDomain() string {
	if x != nil && x.OriginalCdnDomain != nil {
		return *x.OriginalCdnDomain
	}
	return ""
}

type DrmRequestFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        *string                `protobuf:"bytes,1,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	ErrorCode     *int64                 `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	Fatal         *bool                  `protobuf:"varint,3,opt,name=fatal,proto3,oneof" json:"fatal,omitempty"`
	PlaybackId    []byte                 `protobuf:"bytes,4,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DrmRequestFailure) Reset() {
	*x = DrmRequestFailure{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrmRequestFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrmRequestFailure) ProtoMessage() {}

func (x *DrmRequestFailure) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrmRequestFailure.ProtoReflect.Descriptor instead.
func (*DrmRequestFailure) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{125}
}

func (x *DrmRequestFailure) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *DrmRequestFailure) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *DrmRequestFailure) GetFatal() bool {
	if x != nil && x.Fatal != nil {
		return *x.Fatal
	}
	return false
}

func (x *DrmRequestFailure) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

type EndAd struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	FileId              []byte                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3,oneof" json:"file_id,omitempty"`
	PlaybackId          []byte                 `protobuf:"bytes,2,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	SongId              []byte                 `protobuf:"bytes,3,opt,name=song_id,json=songId,proto3,oneof" json:"song_id,omitempty"`
	SourceStart         *string                `protobuf:"bytes,4,opt,name=source_start,json=sourceStart,proto3,oneof" json:"source_start,omitempty"`
	ReasonStart         *string                `protobuf:"bytes,5,opt,name=reason_start,json=reasonStart,proto3,oneof" json:"reason_start,omitempty"`
	SourceEnd           *string                `protobuf:"bytes,6,opt,name=source_end,json=sourceEnd,proto3,oneof" json:"source_end,omitempty"`
	ReasonEnd           *string                `protobuf:"bytes,7,opt,name=reason_end,json=reasonEnd,proto3,oneof" json:"reason_end,omitempty"`
	BytesPlayed         *int64                 `protobuf:"varint,8,opt,name=bytes_played,json=bytesPlayed,proto3,oneof" json:"bytes_played,omitempty"`
	BytesInSong         *int64                 `protobuf:"varint,9,opt,name=bytes_in_song,json=bytesInSong,proto3,oneof" json:"bytes_in_song,omitempty"`
	MsPlayed            *int64                 `protobuf:"varint,10,opt,name=ms_played,json=msPlayed,proto3,oneof" json:"ms_played,omitempty"`
	MsTotalEst          *int64                 `protobuf:"varint,11,opt,name=ms_total_est,json=msTotalEst,proto3,oneof" json:"ms_total_est,omitempty"`
	MsRcvLatency        *int64                 `protobuf:"varint,12,opt,name=ms_rcv_latency,json=msRcvLatency,proto3,oneof" json:"ms_rcv_latency,omitempty"`
	NSeekback           *int64                 `protobuf:"varint,13,opt,name=n_seekback,json=nSeekback,proto3,oneof" json:"n_seekback,omitempty"`
	MsSeekback          *int64                 `protobuf:"varint,14,opt,name=ms_seekback,json=msSeekback,proto3,oneof" json:"ms_seekback,omitempty"`
	NSeekfwd            *int64                 `protobuf:"varint,15,opt,name=n_seekfwd,json=nSeekfwd,proto3,oneof" json:"n_seekfwd,omitempty"`
	MsSeekfwd           *int64                 `protobuf:"varint,16,opt,name=ms_seekfwd,json=msSeekfwd,proto3,oneof" json:"ms_seekfwd,omitempty"`
	MsLatency           *int64                 `protobuf:"varint,17,opt,name=ms_latency,json=msLatency,proto3,oneof" json:"ms_latency,omitempty"`
	NStutter            *int64                 `protobuf:"varint,18,opt,name=n_stutter,json=nStutter,proto3,oneof" json:"n_stutter,omitempty"`
	PLowbuffer          *int64                 `protobuf:"varint,19,opt,name=p_lowbuffer,json=pLowbuffer,proto3,oneof" json:"p_lowbuffer,omitempty"`
	Skipped             *bool                  `protobuf:"varint,20,opt,name=skipped,proto3,oneof" json:"skipped,omitempty"`
	AdClicked           *bool                  `protobuf:"varint,21,opt,name=ad_clicked,json=adClicked,proto3,oneof" json:"ad_clicked,omitempty"`
	Token               *string                `protobuf:"bytes,22,opt,name=token,proto3,oneof" json:"token,omitempty"`
	ClientAdCount       *int64                 `protobuf:"varint,23,opt,name=client_ad_count,json=clientAdCount,proto3,oneof" json:"client_ad_count,omitempty"`
	ClientCampaignCount *int64                 `protobuf:"varint,24,opt,name=client_campaign_count,json=clientCampaignCount,proto3,oneof" json:"client_campaign_count,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *EndAd) Reset() {
	*x = EndAd{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndAd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndAd) ProtoMessage() {}

func (x *EndAd) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndAd.ProtoReflect.Descriptor instead.
func (*EndAd) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{126}
}

func (x *EndAd) GetFileId() []byte {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *EndAd) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *EndAd) GetSongId() []byte {
	if x != nil {
		return x.SongId
	}
	return nil
}

func (x *EndAd) GetSourceStart() string {
	if x != nil && x.SourceStart != nil {
		return *x.SourceStart
	}
	return ""
}

func (x *EndAd) GetReasonStart() string {
	if x != nil && x.ReasonStart != nil {
		return *x.ReasonStart
	}
	return ""
}

func (x *EndAd) GetSourceEnd() string {
	if x != nil && x.SourceEnd != nil {
		return *x.SourceEnd
	}
	return ""
}

func (x *EndAd) GetReasonEnd() string {
	if x != nil && x.ReasonEnd != nil {
		return *x.ReasonEnd
	}
	return ""
}

func (x *EndAd) GetBytesPlayed() int64 {
	if x != nil && x.BytesPlayed != nil {
		return *x.BytesPlayed
	}
	return 0
}

func (x *EndAd) GetBytesInSong() int64 {
	if x != nil && x.BytesInSong != nil {
		return *x.BytesInSong
	}
	return 0
}

func (x *EndAd) GetMsPlayed() int64 {
	if x != nil && x.MsPlayed != nil {
		return *x.MsPlayed
	}
	return 0
}

func (x *EndAd) GetMsTotalEst() int64 {
	if x != nil && x.MsTotalEst != nil {
		return *x.MsTotalEst
	}
	return 0
}

func (x *EndAd) GetMsRcvLatency() int64 {
	if x != nil && x.MsRcvLatency != nil {
		return *x.MsRcvLatency
	}
	return 0
}

func (x *EndAd) GetNSeekback() int64 {
	if x != nil && x.NSeekback != nil {
		return *x.NSeekback
	}
	return 0
}

func (x *EndAd) GetMsSeekback() int64 {
	if x != nil && x.MsSeekback != nil {
		return *x.MsSeekback
	}
	return 0
}

func (x *EndAd) GetNSeekfwd() int64 {
	if x != nil && x.NSeekfwd != nil {
		return *x.NSeekfwd
	}
	return 0
}

func (x *EndAd) GetMsSeekfwd() int64 {
	if x != nil && x.MsSeekfwd != nil {
		return *x.MsSeekfwd
	}
	return 0
}

func (x *EndAd) GetMsLatency() int64 {
	if x != nil && x.MsLatency != nil {
		return *x.MsLatency
	}
	return 0
}

func (x *EndAd) GetNStutter() int64 {
	if x != nil && x.NStutter != nil {
		return *x.NStutter
	}
	return 0
}

func (x *EndAd) GetPLowbuffer() int64 {
	if x != nil && x.PLowbuffer != nil {
		return *x.PLowbuffer
	}
	return 0
}

func (x *EndAd) GetSkipped() bool {
	if x != nil && x.Skipped != nil {
		return *x.Skipped
	}
	return false
}

func (x *EndAd) GetAdClicked() bool {
	if x != nil && x.AdClicked != nil {
		return *x.AdClicked
	}
	return false
}

func (x *EndAd) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *EndAd) GetClientAdCount() int64 {
	if x != nil && x.ClientAdCount != nil {
		return *x.ClientAdCount
	}
	return 0
}

func (x *EndAd) GetClientCampaignCount() int64 {
	if x != nil && x.ClientCampaignCount != nil {
		return *x.ClientCampaignCount
	}
	return 0
}

type EventSenderStats2NonAuth struct {
	state                                protoimpl.MessageState `protogen:"open.v1"`
	SequenceIds                          [][]byte               `protobuf:"bytes,1,rep,name=sequence_ids,json=sequenceIds,proto3" json:"sequence_ids,omitempty"`
	EventNames                           []string               `protobuf:"bytes,2,rep,name=event_names,json=eventNames,proto3" json:"event_names,omitempty"`
	LossStatsNumEntriesPerSequenceId     []int32                `protobuf:"varint,3,rep,packed,name=loss_stats_num_entries_per_sequence_id,json=lossStatsNumEntriesPerSequenceId,proto3" json:"loss_stats_num_entries_per_sequence_id,omitempty"`
	LossStatsEventNameIndex              []int32                `protobuf:"varint,4,rep,packed,name=loss_stats_event_name_index,json=lossStatsEventNameIndex,proto3" json:"loss_stats_event_name_index,omitempty"`
	LossStatsStorageSizes                []int64                `protobuf:"varint,5,rep,packed,name=loss_stats_storage_sizes,json=lossStatsStorageSizes,proto3" json:"loss_stats_storage_sizes,omitempty"`
	LossStatsSequenceNumberMins          []int64                `protobuf:"varint,6,rep,packed,name=loss_stats_sequence_number_mins,json=lossStatsSequenceNumberMins,proto3" json:"loss_stats_sequence_number_mins,omitempty"`
	LossStatsSequenceNumberNexts         []int64                `protobuf:"varint,7,rep,packed,name=loss_stats_sequence_number_nexts,json=lossStatsSequenceNumberNexts,proto3" json:"loss_stats_sequence_number_nexts,omitempty"`
	RatelimiterStatsEventNameIndex       []int32                `protobuf:"varint,8,rep,packed,name=ratelimiter_stats_event_name_index,json=ratelimiterStatsEventNameIndex,proto3" json:"ratelimiter_stats_event_name_index,omitempty"`
	RatelimiterStatsDropCount            []int64                `protobuf:"varint,9,rep,packed,name=ratelimiter_stats_drop_count,json=ratelimiterStatsDropCount,proto3" json:"ratelimiter_stats_drop_count,omitempty"`
	DropListNumEntriesPerSequenceId      []int32                `protobuf:"varint,10,rep,packed,name=drop_list_num_entries_per_sequence_id,json=dropListNumEntriesPerSequenceId,proto3" json:"drop_list_num_entries_per_sequence_id,omitempty"`
	DropListEventNameIndex               []int32                `protobuf:"varint,11,rep,packed,name=drop_list_event_name_index,json=dropListEventNameIndex,proto3" json:"drop_list_event_name_index,omitempty"`
	DropListCountsTotal                  []int64                `protobuf:"varint,12,rep,packed,name=drop_list_counts_total,json=dropListCountsTotal,proto3" json:"drop_list_counts_total,omitempty"`
	DropListCountsUnreported             []int64                `protobuf:"varint,13,rep,packed,name=drop_list_counts_unreported,json=dropListCountsUnreported,proto3" json:"drop_list_counts_unreported,omitempty"`
	StatesListEventNameIndex             []int32                `protobuf:"varint,15,rep,packed,name=states_list_event_name_index,json=statesListEventNameIndex,proto3" json:"states_list_event_name_index,omitempty"`
	StatesListEnteredCountsTotal         []int64                `protobuf:"varint,16,rep,packed,name=states_list_entered_counts_total,json=statesListEnteredCountsTotal,proto3" json:"states_list_entered_counts_total,omitempty"`
	StatesListRejectedClientCountsTotal  []int64                `protobuf:"varint,17,rep,packed,name=states_list_rejected_client_counts_total,json=statesListRejectedClientCountsTotal,proto3" json:"states_list_rejected_client_counts_total,omitempty"`
	StatesListDroppedCountsTotal         []int64                `protobuf:"varint,18,rep,packed,name=states_list_dropped_counts_total,json=statesListDroppedCountsTotal,proto3" json:"states_list_dropped_counts_total,omitempty"`
	StatesListPersistedCountsTotal       []int64                `protobuf:"varint,19,rep,packed,name=states_list_persisted_counts_total,json=statesListPersistedCountsTotal,proto3" json:"states_list_persisted_counts_total,omitempty"`
	StatesListRejectedBackendCountsTotal []int64                `protobuf:"varint,20,rep,packed,name=states_list_rejected_backend_counts_total,json=statesListRejectedBackendCountsTotal,proto3" json:"states_list_rejected_backend_counts_total,omitempty"`
	StatesListDeliveredCountsTotal       []int64                `protobuf:"varint,21,rep,packed,name=states_list_delivered_counts_total,json=statesListDeliveredCountsTotal,proto3" json:"states_list_delivered_counts_total,omitempty"`
	StatesListDeletedCountsTotal         []int64                `protobuf:"varint,22,rep,packed,name=states_list_deleted_counts_total,json=statesListDeletedCountsTotal,proto3" json:"states_list_deleted_counts_total,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *EventSenderStats2NonAuth) Reset() {
	*x = EventSenderStats2NonAuth{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSenderStats2NonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSenderStats2NonAuth) ProtoMessage() {}

func (x *EventSenderStats2NonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSenderStats2NonAuth.ProtoReflect.Descriptor instead.
func (*EventSenderStats2NonAuth) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{127}
}

func (x *EventSenderStats2NonAuth) GetSequenceIds() [][]byte {
	if x != nil {
		return x.SequenceIds
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetEventNames() []string {
	if x != nil {
		return x.EventNames
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetLossStatsNumEntriesPerSequenceId() []int32 {
	if x != nil {
		return x.LossStatsNumEntriesPerSequenceId
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetLossStatsEventNameIndex() []int32 {
	if x != nil {
		return x.LossStatsEventNameIndex
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetLossStatsStorageSizes() []int64 {
	if x != nil {
		return x.LossStatsStorageSizes
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetLossStatsSequenceNumberMins() []int64 {
	if x != nil {
		return x.LossStatsSequenceNumberMins
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetLossStatsSequenceNumberNexts() []int64 {
	if x != nil {
		return x.LossStatsSequenceNumberNexts
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetRatelimiterStatsEventNameIndex() []int32 {
	if x != nil {
		return x.RatelimiterStatsEventNameIndex
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetRatelimiterStatsDropCount() []int64 {
	if x != nil {
		return x.RatelimiterStatsDropCount
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetDropListNumEntriesPerSequenceId() []int32 {
	if x != nil {
		return x.DropListNumEntriesPerSequenceId
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetDropListEventNameIndex() []int32 {
	if x != nil {
		return x.DropListEventNameIndex
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetDropListCountsTotal() []int64 {
	if x != nil {
		return x.DropListCountsTotal
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetDropListCountsUnreported() []int64 {
	if x != nil {
		return x.DropListCountsUnreported
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetStatesListEventNameIndex() []int32 {
	if x != nil {
		return x.StatesListEventNameIndex
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetStatesListEnteredCountsTotal() []int64 {
	if x != nil {
		return x.StatesListEnteredCountsTotal
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetStatesListRejectedClientCountsTotal() []int64 {
	if x != nil {
		return x.StatesListRejectedClientCountsTotal
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetStatesListDroppedCountsTotal() []int64 {
	if x != nil {
		return x.StatesListDroppedCountsTotal
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetStatesListPersistedCountsTotal() []int64 {
	if x != nil {
		return x.StatesListPersistedCountsTotal
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetStatesListRejectedBackendCountsTotal() []int64 {
	if x != nil {
		return x.StatesListRejectedBackendCountsTotal
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetStatesListDeliveredCountsTotal() []int64 {
	if x != nil {
		return x.StatesListDeliveredCountsTotal
	}
	return nil
}

func (x *EventSenderStats2NonAuth) GetStatesListDeletedCountsTotal() []int64 {
	if x != nil {
		return x.StatesListDeletedCountsTotal
	}
	return nil
}

type HeadFileDownload struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FileId           []byte                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3,oneof" json:"file_id,omitempty"`
	PlaybackId       []byte                 `protobuf:"bytes,2,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	CdnUriScheme     *string                `protobuf:"bytes,3,opt,name=cdn_uri_scheme,json=cdnUriScheme,proto3,oneof" json:"cdn_uri_scheme,omitempty"`
	CdnDomain        *string                `protobuf:"bytes,4,opt,name=cdn_domain,json=cdnDomain,proto3,oneof" json:"cdn_domain,omitempty"`
	HeadFileSize     *int64                 `protobuf:"varint,5,opt,name=head_file_size,json=headFileSize,proto3,oneof" json:"head_file_size,omitempty"`
	BytesDownloaded  *int64                 `protobuf:"varint,6,opt,name=bytes_downloaded,json=bytesDownloaded,proto3,oneof" json:"bytes_downloaded,omitempty"`
	BytesWasted      *int64                 `protobuf:"varint,7,opt,name=bytes_wasted,json=bytesWasted,proto3,oneof" json:"bytes_wasted,omitempty"`
	HttpLatency      *int64                 `protobuf:"varint,8,opt,name=http_latency,json=httpLatency,proto3,oneof" json:"http_latency,omitempty"`
	Http_64KLatency  *int64                 `protobuf:"varint,9,opt,name=http_64k_latency,json=http64kLatency,proto3,oneof" json:"http_64k_latency,omitempty"`
	TotalTime        *int64                 `protobuf:"varint,10,opt,name=total_time,json=totalTime,proto3,oneof" json:"total_time,omitempty"`
	HttpResult       *int64                 `protobuf:"varint,11,opt,name=http_result,json=httpResult,proto3,oneof" json:"http_result,omitempty"`
	ErrorCode        *int64                 `protobuf:"varint,12,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	CachedBytes      *int64                 `protobuf:"varint,13,opt,name=cached_bytes,json=cachedBytes,proto3,oneof" json:"cached_bytes,omitempty"`
	BytesFromCache   *int64                 `protobuf:"varint,14,opt,name=bytes_from_cache,json=bytesFromCache,proto3,oneof" json:"bytes_from_cache,omitempty"`
	SocketReuse      *string                `protobuf:"bytes,15,opt,name=socket_reuse,json=socketReuse,proto3,oneof" json:"socket_reuse,omitempty"`
	RequestType      *string                `protobuf:"bytes,16,opt,name=request_type,json=requestType,proto3,oneof" json:"request_type,omitempty"`
	InitialDiskState *string                `protobuf:"bytes,17,opt,name=initial_disk_state,json=initialDiskState,proto3,oneof" json:"initial_disk_state,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HeadFileDownload) Reset() {
	*x = HeadFileDownload{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeadFileDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadFileDownload) ProtoMessage() {}

func (x *HeadFileDownload) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadFileDownload.ProtoReflect.Descriptor instead.
func (*HeadFileDownload) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{128}
}

func (x *HeadFileDownload) GetFileId() []byte {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *HeadFileDownload) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *HeadFileDownload) GetCdnUriScheme() string {
	if x != nil && x.CdnUriScheme != nil {
		return *x.CdnUriScheme
	}
	return ""
}

func (x *HeadFileDownload) GetCdnDomain() string {
	if x != nil && x.CdnDomain != nil {
		return *x.CdnDomain
	}
	return ""
}

func (x *HeadFileDownload) GetHeadFileSize() int64 {
	if x != nil && x.HeadFileSize != nil {
		return *x.HeadFileSize
	}
	return 0
}

func (x *HeadFileDownload) GetBytesDownloaded() int64 {
	if x != nil && x.BytesDownloaded != nil {
		return *x.BytesDownloaded
	}
	return 0
}

func (x *HeadFileDownload) GetBytesWasted() int64 {
	if x != nil && x.BytesWasted != nil {
		return *x.BytesWasted
	}
	return 0
}

func (x *HeadFileDownload) GetHttpLatency() int64 {
	if x != nil && x.HttpLatency != nil {
		return *x.HttpLatency
	}
	return 0
}

func (x *HeadFileDownload) GetHttp_64KLatency() int64 {
	if x != nil && x.Http_64KLatency != nil {
		return *x.Http_64KLatency
	}
	return 0
}

func (x *HeadFileDownload) GetTotalTime() int64 {
	if x != nil && x.TotalTime != nil {
		return *x.TotalTime
	}
	return 0
}

func (x *HeadFileDownload) GetHttpResult() int64 {
	if x != nil && x.HttpResult != nil {
		return *x.HttpResult
	}
	return 0
}

func (x *HeadFileDownload) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *HeadFileDownload) GetCachedBytes() int64 {
	if x != nil && x.CachedBytes != nil {
		return *x.CachedBytes
	}
	return 0
}

func (x *HeadFileDownload) GetBytesFromCache() int64 {
	if x != nil && x.BytesFromCache != nil {
		return *x.BytesFromCache
	}
	return 0
}

func (x *HeadFileDownload) GetSocketReuse() string {
	if x != nil && x.SocketReuse != nil {
		return *x.SocketReuse
	}
	return ""
}

func (x *HeadFileDownload) GetRequestType() string {
	if x != nil && x.RequestType != nil {
		return *x.RequestType
	}
	return ""
}

func (x *HeadFileDownload) GetInitialDiskState() string {
	if x != nil && x.InitialDiskState != nil {
		return *x.InitialDiskState
	}
	return ""
}

type LegacyEndSong struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	SequenceNumber         *int64                 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3,oneof" json:"sequence_number,omitempty"`
	SequenceId             *string                `protobuf:"bytes,2,opt,name=sequence_id,json=sequenceId,proto3,oneof" json:"sequence_id,omitempty"`
	PlaybackId             []byte                 `protobuf:"bytes,3,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	ParentPlaybackId       []byte                 `protobuf:"bytes,4,opt,name=parent_playback_id,json=parentPlaybackId,proto3,oneof" json:"parent_playback_id,omitempty"`
	SourceStart            *string                `protobuf:"bytes,5,opt,name=source_start,json=sourceStart,proto3,oneof" json:"source_start,omitempty"`
	ReasonStart            *string                `protobuf:"bytes,6,opt,name=reason_start,json=reasonStart,proto3,oneof" json:"reason_start,omitempty"`
	SourceEnd              *string                `protobuf:"bytes,7,opt,name=source_end,json=sourceEnd,proto3,oneof" json:"source_end,omitempty"`
	ReasonEnd              *string                `protobuf:"bytes,8,opt,name=reason_end,json=reasonEnd,proto3,oneof" json:"reason_end,omitempty"`
	BytesPlayed            *int64                 `protobuf:"varint,9,opt,name=bytes_played,json=bytesPlayed,proto3,oneof" json:"bytes_played,omitempty"`
	BytesInSong            *int64                 `protobuf:"varint,10,opt,name=bytes_in_song,json=bytesInSong,proto3,oneof" json:"bytes_in_song,omitempty"`
	MsPlayed               *int64                 `protobuf:"varint,11,opt,name=ms_played,json=msPlayed,proto3,oneof" json:"ms_played,omitempty"`
	MsNominalPlayed        *int64                 `protobuf:"varint,12,opt,name=ms_nominal_played,json=msNominalPlayed,proto3,oneof" json:"ms_nominal_played,omitempty"`
	MsTotalEst             *int64                 `protobuf:"varint,13,opt,name=ms_total_est,json=msTotalEst,proto3,oneof" json:"ms_total_est,omitempty"`
	MsRcvLatency           *int64                 `protobuf:"varint,14,opt,name=ms_rcv_latency,json=msRcvLatency,proto3,oneof" json:"ms_rcv_latency,omitempty"`
	MsOverlapping          *int64                 `protobuf:"varint,15,opt,name=ms_overlapping,json=msOverlapping,proto3,oneof" json:"ms_overlapping,omitempty"`
	NSeekback              *int64                 `protobuf:"varint,16,opt,name=n_seekback,json=nSeekback,proto3,oneof" json:"n_seekback,omitempty"`
	MsSeekback             *int64                 `protobuf:"varint,17,opt,name=ms_seekback,json=msSeekback,proto3,oneof" json:"ms_seekback,omitempty"`
	NSeekfwd               *int64                 `protobuf:"varint,18,opt,name=n_seekfwd,json=nSeekfwd,proto3,oneof" json:"n_seekfwd,omitempty"`
	MsSeekfwd              *int64                 `protobuf:"varint,19,opt,name=ms_seekfwd,json=msSeekfwd,proto3,oneof" json:"ms_seekfwd,omitempty"`
	MsLatency              *int64                 `protobuf:"varint,20,opt,name=ms_latency,json=msLatency,proto3,oneof" json:"ms_latency,omitempty"`
	UiLatency              *int64                 `protobuf:"varint,21,opt,name=ui_latency,json=uiLatency,proto3,oneof" json:"ui_latency,omitempty"`
	PlayerId               *string                `protobuf:"bytes,22,opt,name=player_id,json=playerId,proto3,oneof" json:"player_id,omitempty"`
	MsKeyLatency           *int64                 `protobuf:"varint,23,opt,name=ms_key_latency,json=msKeyLatency,proto3,oneof" json:"ms_key_latency,omitempty"`
	OfflineKey             *bool                  `protobuf:"varint,24,opt,name=offline_key,json=offlineKey,proto3,oneof" json:"offline_key,omitempty"`
	CachedKey              *bool                  `protobuf:"varint,25,opt,name=cached_key,json=cachedKey,proto3,oneof" json:"cached_key,omitempty"`
	NStutter               *int64                 `protobuf:"varint,26,opt,name=n_stutter,json=nStutter,proto3,oneof" json:"n_stutter,omitempty"`
	PLowbuffer             *int64                 `protobuf:"varint,27,opt,name=p_lowbuffer,json=pLowbuffer,proto3,oneof" json:"p_lowbuffer,omitempty"`
	Shuffle                *bool                  `protobuf:"varint,28,opt,name=shuffle,proto3,oneof" json:"shuffle,omitempty"`
	MaxContinous           *int64                 `protobuf:"varint,29,opt,name=max_continous,json=maxContinous,proto3,oneof" json:"max_continous,omitempty"`
	UnionPlayed            *int64                 `protobuf:"varint,30,opt,name=union_played,json=unionPlayed,proto3,oneof" json:"union_played,omitempty"`
	ArtificialDelay        *int64                 `protobuf:"varint,31,opt,name=artificial_delay,json=artificialDelay,proto3,oneof" json:"artificial_delay,omitempty"`
	Bitrate                *int64                 `protobuf:"varint,32,opt,name=bitrate,proto3,oneof" json:"bitrate,omitempty"`
	PlayContext            *string                `protobuf:"bytes,33,opt,name=play_context,json=playContext,proto3,oneof" json:"play_context,omitempty"`
	Audiocodec             *string                `protobuf:"bytes,34,opt,name=audiocodec,proto3,oneof" json:"audiocodec,omitempty"`
	PlayTrack              *string                `protobuf:"bytes,35,opt,name=play_track,json=playTrack,proto3,oneof" json:"play_track,omitempty"`
	DisplayTrack           *string                `protobuf:"bytes,36,opt,name=display_track,json=displayTrack,proto3,oneof" json:"display_track,omitempty"`
	Offline                *bool                  `protobuf:"varint,37,opt,name=offline,proto3,oneof" json:"offline,omitempty"`
	OfflineTimestamp       *int64                 `protobuf:"varint,38,opt,name=offline_timestamp,json=offlineTimestamp,proto3,oneof" json:"offline_timestamp,omitempty"`
	IncognitoMode          *bool                  `protobuf:"varint,39,opt,name=incognito_mode,json=incognitoMode,proto3,oneof" json:"incognito_mode,omitempty"`
	Provider               *string                `protobuf:"bytes,40,opt,name=provider,proto3,oneof" json:"provider,omitempty"`
	Referer                *string                `protobuf:"bytes,41,opt,name=referer,proto3,oneof" json:"referer,omitempty"`
	ReferrerVersion        *string                `protobuf:"bytes,42,opt,name=referrer_version,json=referrerVersion,proto3,oneof" json:"referrer_version,omitempty"`
	ReferrerVendor         *string                `protobuf:"bytes,43,opt,name=referrer_vendor,json=referrerVendor,proto3,oneof" json:"referrer_vendor,omitempty"`
	Transition             *string                `protobuf:"bytes,44,opt,name=transition,proto3,oneof" json:"transition,omitempty"`
	StreamingRule          *string                `protobuf:"bytes,45,opt,name=streaming_rule,json=streamingRule,proto3,oneof" json:"streaming_rule,omitempty"`
	GaiaDevId              *string                `protobuf:"bytes,46,opt,name=gaia_dev_id,json=gaiaDevId,proto3,oneof" json:"gaia_dev_id,omitempty"`
	AcceptedTc             *string                `protobuf:"bytes,47,opt,name=accepted_tc,json=acceptedTc,proto3,oneof" json:"accepted_tc,omitempty"`
	PromotionType          *string                `protobuf:"bytes,48,opt,name=promotion_type,json=promotionType,proto3,oneof" json:"promotion_type,omitempty"`
	PageInstanceId         *string                `protobuf:"bytes,49,opt,name=page_instance_id,json=pageInstanceId,proto3,oneof" json:"page_instance_id,omitempty"`
	InteractionId          *string                `protobuf:"bytes,50,opt,name=interaction_id,json=interactionId,proto3,oneof" json:"interaction_id,omitempty"`
	ParentPlayTrack        *string                `protobuf:"bytes,51,opt,name=parent_play_track,json=parentPlayTrack,proto3,oneof" json:"parent_play_track,omitempty"`
	CoreVersion            *int64                 `protobuf:"varint,52,opt,name=core_version,json=coreVersion,proto3,oneof" json:"core_version,omitempty"`
	MsNarrationOverlapping *int64                 `protobuf:"varint,53,opt,name=ms_narration_overlapping,json=msNarrationOverlapping,proto3,oneof" json:"ms_narration_overlapping,omitempty"`
	MsTrimmed              *int64                 `protobuf:"varint,54,opt,name=ms_trimmed,json=msTrimmed,proto3,oneof" json:"ms_trimmed,omitempty"`
	MsNominalTrimmed       *int64                 `protobuf:"varint,55,opt,name=ms_nominal_trimmed,json=msNominalTrimmed,proto3,oneof" json:"ms_nominal_trimmed,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *LegacyEndSong) Reset() {
	*x = LegacyEndSong{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LegacyEndSong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyEndSong) ProtoMessage() {}

func (x *LegacyEndSong) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyEndSong.ProtoReflect.Descriptor instead.
func (*LegacyEndSong) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{129}
}

func (x *LegacyEndSong) GetSequenceNumber() int64 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *LegacyEndSong) GetSequenceId() string {
	if x != nil && x.SequenceId != nil {
		return *x.SequenceId
	}
	return ""
}

func (x *LegacyEndSong) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *LegacyEndSong) GetParentPlaybackId() []byte {
	if x != nil {
		return x.ParentPlaybackId
	}
	return nil
}

func (x *LegacyEndSong) GetSourceStart() string {
	if x != nil && x.SourceStart != nil {
		return *x.SourceStart
	}
	return ""
}

func (x *LegacyEndSong) GetReasonStart() string {
	if x != nil && x.ReasonStart != nil {
		return *x.ReasonStart
	}
	return ""
}

func (x *LegacyEndSong) GetSourceEnd() string {
	if x != nil && x.SourceEnd != nil {
		return *x.SourceEnd
	}
	return ""
}

func (x *LegacyEndSong) GetReasonEnd() string {
	if x != nil && x.ReasonEnd != nil {
		return *x.ReasonEnd
	}
	return ""
}

func (x *LegacyEndSong) GetBytesPlayed() int64 {
	if x != nil && x.BytesPlayed != nil {
		return *x.BytesPlayed
	}
	return 0
}

func (x *LegacyEndSong) GetBytesInSong() int64 {
	if x != nil && x.BytesInSong != nil {
		return *x.BytesInSong
	}
	return 0
}

func (x *LegacyEndSong) GetMsPlayed() int64 {
	if x != nil && x.MsPlayed != nil {
		return *x.MsPlayed
	}
	return 0
}

func (x *LegacyEndSong) GetMsNominalPlayed() int64 {
	if x != nil && x.MsNominalPlayed != nil {
		return *x.MsNominalPlayed
	}
	return 0
}

func (x *LegacyEndSong) GetMsTotalEst() int64 {
	if x != nil && x.MsTotalEst != nil {
		return *x.MsTotalEst
	}
	return 0
}

func (x *LegacyEndSong) GetMsRcvLatency() int64 {
	if x != nil && x.MsRcvLatency != nil {
		return *x.MsRcvLatency
	}
	return 0
}

func (x *LegacyEndSong) GetMsOverlapping() int64 {
	if x != nil && x.MsOverlapping != nil {
		return *x.MsOverlapping
	}
	return 0
}

func (x *LegacyEndSong) GetNSeekback() int64 {
	if x != nil && x.NSeekback != nil {
		return *x.NSeekback
	}
	return 0
}

func (x *LegacyEndSong) GetMsSeekback() int64 {
	if x != nil && x.MsSeekback != nil {
		return *x.MsSeekback
	}
	return 0
}

func (x *LegacyEndSong) GetNSeekfwd() int64 {
	if x != nil && x.NSeekfwd != nil {
		return *x.NSeekfwd
	}
	return 0
}

func (x *LegacyEndSong) GetMsSeekfwd() int64 {
	if x != nil && x.MsSeekfwd != nil {
		return *x.MsSeekfwd
	}
	return 0
}

func (x *LegacyEndSong) GetMsLatency() int64 {
	if x != nil && x.MsLatency != nil {
		return *x.MsLatency
	}
	return 0
}

func (x *LegacyEndSong) GetUiLatency() int64 {
	if x != nil && x.UiLatency != nil {
		return *x.UiLatency
	}
	return 0
}

func (x *LegacyEndSong) GetPlayerId() string {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return ""
}

func (x *LegacyEndSong) GetMsKeyLatency() int64 {
	if x != nil && x.MsKeyLatency != nil {
		return *x.MsKeyLatency
	}
	return 0
}

func (x *LegacyEndSong) GetOfflineKey() bool {
	if x != nil && x.OfflineKey != nil {
		return *x.OfflineKey
	}
	return false
}

func (x *LegacyEndSong) GetCachedKey() bool {
	if x != nil && x.CachedKey != nil {
		return *x.CachedKey
	}
	return false
}

func (x *LegacyEndSong) GetNStutter() int64 {
	if x != nil && x.NStutter != nil {
		return *x.NStutter
	}
	return 0
}

func (x *LegacyEndSong) GetPLowbuffer() int64 {
	if x != nil && x.PLowbuffer != nil {
		return *x.PLowbuffer
	}
	return 0
}

func (x *LegacyEndSong) GetShuffle() bool {
	if x != nil && x.Shuffle != nil {
		return *x.Shuffle
	}
	return false
}

func (x *LegacyEndSong) GetMaxContinous() int64 {
	if x != nil && x.MaxContinous != nil {
		return *x.MaxContinous
	}
	return 0
}

func (x *LegacyEndSong) GetUnionPlayed() int64 {
	if x != nil && x.UnionPlayed != nil {
		return *x.UnionPlayed
	}
	return 0
}

func (x *LegacyEndSong) GetArtificialDelay() int64 {
	if x != nil && x.ArtificialDelay != nil {
		return *x.ArtificialDelay
	}
	return 0
}

func (x *LegacyEndSong) GetBitrate() int64 {
	if x != nil && x.Bitrate != nil {
		return *x.Bitrate
	}
	return 0
}

func (x *LegacyEndSong) GetPlayContext() string {
	if x != nil && x.PlayContext != nil {
		return *x.PlayContext
	}
	return ""
}

func (x *LegacyEndSong) GetAudiocodec() string {
	if x != nil && x.Audiocodec != nil {
		return *x.Audiocodec
	}
	return ""
}

func (x *LegacyEndSong) GetPlayTrack() string {
	if x != nil && x.PlayTrack != nil {
		return *x.PlayTrack
	}
	return ""
}

func (x *LegacyEndSong) GetDisplayTrack() string {
	if x != nil && x.DisplayTrack != nil {
		return *x.DisplayTrack
	}
	return ""
}

func (x *LegacyEndSong) GetOffline() bool {
	if x != nil && x.Offline != nil {
		return *x.Offline
	}
	return false
}

func (x *LegacyEndSong) GetOfflineTimestamp() int64 {
	if x != nil && x.OfflineTimestamp != nil {
		return *x.OfflineTimestamp
	}
	return 0
}

func (x *LegacyEndSong) GetIncognitoMode() bool {
	if x != nil && x.IncognitoMode != nil {
		return *x.IncognitoMode
	}
	return false
}

func (x *LegacyEndSong) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *LegacyEndSong) GetReferer() string {
	if x != nil && x.Referer != nil {
		return *x.Referer
	}
	return ""
}

func (x *LegacyEndSong) GetReferrerVersion() string {
	if x != nil && x.ReferrerVersion != nil {
		return *x.ReferrerVersion
	}
	return ""
}

func (x *LegacyEndSong) GetReferrerVendor() string {
	if x != nil && x.ReferrerVendor != nil {
		return *x.ReferrerVendor
	}
	return ""
}

func (x *LegacyEndSong) GetTransition() string {
	if x != nil && x.Transition != nil {
		return *x.Transition
	}
	return ""
}

func (x *LegacyEndSong) GetStreamingRule() string {
	if x != nil && x.StreamingRule != nil {
		return *x.StreamingRule
	}
	return ""
}

func (x *LegacyEndSong) GetGaiaDevId() string {
	if x != nil && x.GaiaDevId != nil {
		return *x.GaiaDevId
	}
	return ""
}

func (x *LegacyEndSong) GetAcceptedTc() string {
	if x != nil && x.AcceptedTc != nil {
		return *x.AcceptedTc
	}
	return ""
}

func (x *LegacyEndSong) GetPromotionType() string {
	if x != nil && x.PromotionType != nil {
		return *x.PromotionType
	}
	return ""
}

func (x *LegacyEndSong) GetPageInstanceId() string {
	if x != nil && x.PageInstanceId != nil {
		return *x.PageInstanceId
	}
	return ""
}

func (x *LegacyEndSong) GetInteractionId() string {
	if x != nil && x.InteractionId != nil {
		return *x.InteractionId
	}
	return ""
}

func (x *LegacyEndSong) GetParentPlayTrack() string {
	if x != nil && x.ParentPlayTrack != nil {
		return *x.ParentPlayTrack
	}
	return ""
}

func (x *LegacyEndSong) GetCoreVersion() int64 {
	if x != nil && x.CoreVersion != nil {
		return *x.CoreVersion
	}
	return 0
}

func (x *LegacyEndSong) GetMsNarrationOverlapping() int64 {
	if x != nil && x.MsNarrationOverlapping != nil {
		return *x.MsNarrationOverlapping
	}
	return 0
}

func (x *LegacyEndSong) GetMsTrimmed() int64 {
	if x != nil && x.MsTrimmed != nil {
		return *x.MsTrimmed
	}
	return 0
}

func (x *LegacyEndSong) GetMsNominalTrimmed() int64 {
	if x != nil && x.MsNominalTrimmed != nil {
		return *x.MsNominalTrimmed
	}
	return 0
}

type MetadataExtensionClientStatistic struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TaskId                 []byte                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3,oneof" json:"task_id,omitempty"`
	FeatureId              *string                `protobuf:"bytes,2,opt,name=feature_id,json=featureId,proto3,oneof" json:"feature_id,omitempty"`
	IsOnlineParam          *bool                  `protobuf:"varint,3,opt,name=is_online_param,json=isOnlineParam,proto3,oneof" json:"is_online_param,omitempty"`
	NumExtensionsWithEtags *int32                 `protobuf:"varint,4,opt,name=num_extensions_with_etags,json=numExtensionsWithEtags,proto3,oneof" json:"num_extensions_with_etags,omitempty"`
	NumExtensionsRequested *int32                 `protobuf:"varint,5,opt,name=num_extensions_requested,json=numExtensionsRequested,proto3,oneof" json:"num_extensions_requested,omitempty"`
	NumExtensionsNeeded    *int32                 `protobuf:"varint,6,opt,name=num_extensions_needed,json=numExtensionsNeeded,proto3,oneof" json:"num_extensions_needed,omitempty"`
	NumUrisRequested       *int32                 `protobuf:"varint,7,opt,name=num_uris_requested,json=numUrisRequested,proto3,oneof" json:"num_uris_requested,omitempty"`
	NumUrisNeeded          *int32                 `protobuf:"varint,8,opt,name=num_uris_needed,json=numUrisNeeded,proto3,oneof" json:"num_uris_needed,omitempty"`
	NumPreparedRequests    *int32                 `protobuf:"varint,9,opt,name=num_prepared_requests,json=numPreparedRequests,proto3,oneof" json:"num_prepared_requests,omitempty"`
	NumSentRequests        *int32                 `protobuf:"varint,10,opt,name=num_sent_requests,json=numSentRequests,proto3,oneof" json:"num_sent_requests,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MetadataExtensionClientStatistic) Reset() {
	*x = MetadataExtensionClientStatistic{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataExtensionClientStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataExtensionClientStatistic) ProtoMessage() {}

func (x *MetadataExtensionClientStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataExtensionClientStatistic.ProtoReflect.Descriptor instead.
func (*MetadataExtensionClientStatistic) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{130}
}

func (x *MetadataExtensionClientStatistic) GetTaskId() []byte {
	if x != nil {
		return x.TaskId
	}
	return nil
}

func (x *MetadataExtensionClientStatistic) GetFeatureId() string {
	if x != nil && x.FeatureId != nil {
		return *x.FeatureId
	}
	return ""
}

func (x *MetadataExtensionClientStatistic) GetIsOnlineParam() bool {
	if x != nil && x.IsOnlineParam != nil {
		return *x.IsOnlineParam
	}
	return false
}

func (x *MetadataExtensionClientStatistic) GetNumExtensionsWithEtags() int32 {
	if x != nil && x.NumExtensionsWithEtags != nil {
		return *x.NumExtensionsWithEtags
	}
	return 0
}

func (x *MetadataExtensionClientStatistic) GetNumExtensionsRequested() int32 {
	if x != nil && x.NumExtensionsRequested != nil {
		return *x.NumExtensionsRequested
	}
	return 0
}

func (x *MetadataExtensionClientStatistic) GetNumExtensionsNeeded() int32 {
	if x != nil && x.NumExtensionsNeeded != nil {
		return *x.NumExtensionsNeeded
	}
	return 0
}

func (x *MetadataExtensionClientStatistic) GetNumUrisRequested() int32 {
	if x != nil && x.NumUrisRequested != nil {
		return *x.NumUrisRequested
	}
	return 0
}

func (x *MetadataExtensionClientStatistic) GetNumUrisNeeded() int32 {
	if x != nil && x.NumUrisNeeded != nil {
		return *x.NumUrisNeeded
	}
	return 0
}

func (x *MetadataExtensionClientStatistic) GetNumPreparedRequests() int32 {
	if x != nil && x.NumPreparedRequests != nil {
		return *x.NumPreparedRequests
	}
	return 0
}

func (x *MetadataExtensionClientStatistic) GetNumSentRequests() int32 {
	if x != nil && x.NumSentRequests != nil {
		return *x.NumSentRequests
	}
	return 0
}

type PlaybackError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        []byte                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3,oneof" json:"file_id,omitempty"`
	PlaybackId    []byte                 `protobuf:"bytes,2,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	TrackId       *string                `protobuf:"bytes,3,opt,name=track_id,json=trackId,proto3,oneof" json:"track_id,omitempty"`
	Bitrate       *int64                 `protobuf:"varint,4,opt,name=bitrate,proto3,oneof" json:"bitrate,omitempty"`
	ErrorCode     *int64                 `protobuf:"varint,5,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	Fatal         *bool                  `protobuf:"varint,6,opt,name=fatal,proto3,oneof" json:"fatal,omitempty"`
	Audiocodec    *string                `protobuf:"bytes,7,opt,name=audiocodec,proto3,oneof" json:"audiocodec,omitempty"`
	ExternalTrack *bool                  `protobuf:"varint,8,opt,name=external_track,json=externalTrack,proto3,oneof" json:"external_track,omitempty"`
	PositionMs    *int64                 `protobuf:"varint,9,opt,name=position_ms,json=positionMs,proto3,oneof" json:"position_ms,omitempty"`
	KeyChecksum   *int64                 `protobuf:"varint,10,opt,name=key_checksum,json=keyChecksum,proto3,oneof" json:"key_checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaybackError) Reset() {
	*x = PlaybackError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaybackError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackError) ProtoMessage() {}

func (x *PlaybackError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackError.ProtoReflect.Descriptor instead.
func (*PlaybackError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{131}
}

func (x *PlaybackError) GetFileId() []byte {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *PlaybackError) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *PlaybackError) GetTrackId() string {
	if x != nil && x.TrackId != nil {
		return *x.TrackId
	}
	return ""
}

func (x *PlaybackError) GetBitrate() int64 {
	if x != nil && x.Bitrate != nil {
		return *x.Bitrate
	}
	return 0
}

func (x *PlaybackError) GetErrorCode() int64 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *PlaybackError) GetFatal() bool {
	if x != nil && x.Fatal != nil {
		return *x.Fatal
	}
	return false
}

func (x *PlaybackError) GetAudiocodec() string {
	if x != nil && x.Audiocodec != nil {
		return *x.Audiocodec
	}
	return ""
}

func (x *PlaybackError) GetExternalTrack() bool {
	if x != nil && x.ExternalTrack != nil {
		return *x.ExternalTrack
	}
	return false
}

func (x *PlaybackError) GetPositionMs() int64 {
	if x != nil && x.PositionMs != nil {
		return *x.PositionMs
	}
	return 0
}

func (x *PlaybackError) GetKeyChecksum() int64 {
	if x != nil && x.KeyChecksum != nil {
		return *x.KeyChecksum
	}
	return 0
}

type PlaybackRetry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Track         *string                `protobuf:"bytes,1,opt,name=track,proto3,oneof" json:"track,omitempty"`
	PlaybackId    []byte                 `protobuf:"bytes,2,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	Method        *string                `protobuf:"bytes,3,opt,name=method,proto3,oneof" json:"method,omitempty"`
	Status        *string                `protobuf:"bytes,4,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Reason        *string                `protobuf:"bytes,5,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	PrevEtag      *string                `protobuf:"bytes,6,opt,name=prev_etag,json=prevEtag,proto3,oneof" json:"prev_etag,omitempty"`
	PrevExpiry    *int64                 `protobuf:"varint,7,opt,name=prev_expiry,json=prevExpiry,proto3,oneof" json:"prev_expiry,omitempty"`
	Etag          *string                `protobuf:"bytes,8,opt,name=etag,proto3,oneof" json:"etag,omitempty"`
	Expiry        *int64                 `protobuf:"varint,9,opt,name=expiry,proto3,oneof" json:"expiry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaybackRetry) Reset() {
	*x = PlaybackRetry{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaybackRetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackRetry) ProtoMessage() {}

func (x *PlaybackRetry) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackRetry.ProtoReflect.Descriptor instead.
func (*PlaybackRetry) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{132}
}

func (x *PlaybackRetry) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

func (x *PlaybackRetry) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *PlaybackRetry) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *PlaybackRetry) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *PlaybackRetry) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *PlaybackRetry) GetPrevEtag() string {
	if x != nil && x.PrevEtag != nil {
		return *x.PrevEtag
	}
	return ""
}

func (x *PlaybackRetry) GetPrevExpiry() int64 {
	if x != nil && x.PrevExpiry != nil {
		return *x.PrevExpiry
	}
	return 0
}

func (x *PlaybackRetry) GetEtag() string {
	if x != nil && x.Etag != nil {
		return *x.Etag
	}
	return ""
}

func (x *PlaybackRetry) GetExpiry() int64 {
	if x != nil && x.Expiry != nil {
		return *x.Expiry
	}
	return 0
}

type PlaybackSegments struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId    []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	TrackUri      *string                `protobuf:"bytes,2,opt,name=track_uri,json=trackUri,proto3,oneof" json:"track_uri,omitempty"`
	Overflow      *bool                  `protobuf:"varint,3,opt,name=overflow,proto3,oneof" json:"overflow,omitempty"`
	Segments      *string                `protobuf:"bytes,4,opt,name=segments,proto3,oneof" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaybackSegments) Reset() {
	*x = PlaybackSegments{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaybackSegments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackSegments) ProtoMessage() {}

func (x *PlaybackSegments) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackSegments.ProtoReflect.Descriptor instead.
func (*PlaybackSegments) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{133}
}

func (x *PlaybackSegments) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *PlaybackSegments) GetTrackUri() string {
	if x != nil && x.TrackUri != nil {
		return *x.TrackUri
	}
	return ""
}

func (x *PlaybackSegments) GetOverflow() bool {
	if x != nil && x.Overflow != nil {
		return *x.Overflow
	}
	return false
}

func (x *PlaybackSegments) GetSegments() string {
	if x != nil && x.Segments != nil {
		return *x.Segments
	}
	return ""
}

type Prefetch struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Strategies        *int64                 `protobuf:"varint,1,opt,name=strategies,proto3,oneof" json:"strategies,omitempty"`
	Strategy          *int64                 `protobuf:"varint,2,opt,name=strategy,proto3,oneof" json:"strategy,omitempty"`
	FileId            []byte                 `protobuf:"bytes,3,opt,name=file_id,json=fileId,proto3,oneof" json:"file_id,omitempty"`
	Track             *string                `protobuf:"bytes,4,opt,name=track,proto3,oneof" json:"track,omitempty"`
	PrefetchIndex     *int64                 `protobuf:"varint,5,opt,name=prefetch_index,json=prefetchIndex,proto3,oneof" json:"prefetch_index,omitempty"`
	CurrentWindowSize *int64                 `protobuf:"varint,6,opt,name=current_window_size,json=currentWindowSize,proto3,oneof" json:"current_window_size,omitempty"`
	MaxWindowSize     *int64                 `protobuf:"varint,7,opt,name=max_window_size,json=maxWindowSize,proto3,oneof" json:"max_window_size,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Prefetch) Reset() {
	*x = Prefetch{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Prefetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prefetch) ProtoMessage() {}

func (x *Prefetch) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prefetch.ProtoReflect.Descriptor instead.
func (*Prefetch) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{134}
}

func (x *Prefetch) GetStrategies() int64 {
	if x != nil && x.Strategies != nil {
		return *x.Strategies
	}
	return 0
}

func (x *Prefetch) GetStrategy() int64 {
	if x != nil && x.Strategy != nil {
		return *x.Strategy
	}
	return 0
}

func (x *Prefetch) GetFileId() []byte {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *Prefetch) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

func (x *Prefetch) GetPrefetchIndex() int64 {
	if x != nil && x.PrefetchIndex != nil {
		return *x.PrefetchIndex
	}
	return 0
}

func (x *Prefetch) GetCurrentWindowSize() int64 {
	if x != nil && x.CurrentWindowSize != nil {
		return *x.CurrentWindowSize
	}
	return 0
}

func (x *Prefetch) GetMaxWindowSize() int64 {
	if x != nil && x.MaxWindowSize != nil {
		return *x.MaxWindowSize
	}
	return 0
}

type PrototypeStreamSegment struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId              []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	StartPosition           *int64                 `protobuf:"varint,2,opt,name=start_position,json=startPosition,proto3,oneof" json:"start_position,omitempty"`
	EndPosition             *int64                 `protobuf:"varint,3,opt,name=end_position,json=endPosition,proto3,oneof" json:"end_position,omitempty"`
	MsPlayed                *int32                 `protobuf:"varint,4,opt,name=ms_played,json=msPlayed,proto3,oneof" json:"ms_played,omitempty"`
	ReasonStart             *string                `protobuf:"bytes,5,opt,name=reason_start,json=reasonStart,proto3,oneof" json:"reason_start,omitempty"`
	ReasonEnd               *string                `protobuf:"bytes,6,opt,name=reason_end,json=reasonEnd,proto3,oneof" json:"reason_end,omitempty"`
	PlaybackSpeed           *float64               `protobuf:"fixed64,7,opt,name=playback_speed,json=playbackSpeed,proto3,oneof" json:"playback_speed,omitempty"`
	StartTimestamp          *int64                 `protobuf:"varint,8,opt,name=start_timestamp,json=startTimestamp,proto3,oneof" json:"start_timestamp,omitempty"`
	EndTimestamp            *int64                 `protobuf:"varint,9,opt,name=end_timestamp,json=endTimestamp,proto3,oneof" json:"end_timestamp,omitempty"`
	IsSeek                  *bool                  `protobuf:"varint,10,opt,name=is_seek,json=isSeek,proto3,oneof" json:"is_seek,omitempty"`
	IsPause                 *bool                  `protobuf:"varint,11,opt,name=is_pause,json=isPause,proto3,oneof" json:"is_pause,omitempty"`
	SequenceId              *int64                 `protobuf:"varint,12,opt,name=sequence_id,json=sequenceId,proto3,oneof" json:"sequence_id,omitempty"`
	MediaType               *string                `protobuf:"bytes,13,opt,name=media_type,json=mediaType,proto3,oneof" json:"media_type,omitempty"`
	CoreVersion             *int64                 `protobuf:"varint,14,opt,name=core_version,json=coreVersion,proto3,oneof" json:"core_version,omitempty"`
	ContentUri              *string                `protobuf:"bytes,15,opt,name=content_uri,json=contentUri,proto3,oneof" json:"content_uri,omitempty"`
	StartMonotonicTimestamp *int64                 `protobuf:"varint,16,opt,name=start_monotonic_timestamp,json=startMonotonicTimestamp,proto3,oneof" json:"start_monotonic_timestamp,omitempty"`
	EndMonotonicTimestamp   *int64                 `protobuf:"varint,17,opt,name=end_monotonic_timestamp,json=endMonotonicTimestamp,proto3,oneof" json:"end_monotonic_timestamp,omitempty"`
	IsLast                  *bool                  `protobuf:"varint,18,opt,name=is_last,json=isLast,proto3,oneof" json:"is_last,omitempty"`
	Provider                *string                `protobuf:"bytes,19,opt,name=provider,proto3,oneof" json:"provider,omitempty"`
	PlaybackStack           *string                `protobuf:"bytes,20,opt,name=playback_stack,json=playbackStack,proto3,oneof" json:"playback_stack,omitempty"`
	FeatureUuid             *string                `protobuf:"bytes,21,opt,name=feature_uuid,json=featureUuid,proto3,oneof" json:"feature_uuid,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PrototypeStreamSegment) Reset() {
	*x = PrototypeStreamSegment{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrototypeStreamSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrototypeStreamSegment) ProtoMessage() {}

func (x *PrototypeStreamSegment) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrototypeStreamSegment.ProtoReflect.Descriptor instead.
func (*PrototypeStreamSegment) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{135}
}

func (x *PrototypeStreamSegment) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *PrototypeStreamSegment) GetStartPosition() int64 {
	if x != nil && x.StartPosition != nil {
		return *x.StartPosition
	}
	return 0
}

func (x *PrototypeStreamSegment) GetEndPosition() int64 {
	if x != nil && x.EndPosition != nil {
		return *x.EndPosition
	}
	return 0
}

func (x *PrototypeStreamSegment) GetMsPlayed() int32 {
	if x != nil && x.MsPlayed != nil {
		return *x.MsPlayed
	}
	return 0
}

func (x *PrototypeStreamSegment) GetReasonStart() string {
	if x != nil && x.ReasonStart != nil {
		return *x.ReasonStart
	}
	return ""
}

func (x *PrototypeStreamSegment) GetReasonEnd() string {
	if x != nil && x.ReasonEnd != nil {
		return *x.ReasonEnd
	}
	return ""
}

func (x *PrototypeStreamSegment) GetPlaybackSpeed() float64 {
	if x != nil && x.PlaybackSpeed != nil {
		return *x.PlaybackSpeed
	}
	return 0
}

func (x *PrototypeStreamSegment) GetStartTimestamp() int64 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *PrototypeStreamSegment) GetEndTimestamp() int64 {
	if x != nil && x.EndTimestamp != nil {
		return *x.EndTimestamp
	}
	return 0
}

func (x *PrototypeStreamSegment) GetIsSeek() bool {
	if x != nil && x.IsSeek != nil {
		return *x.IsSeek
	}
	return false
}

func (x *PrototypeStreamSegment) GetIsPause() bool {
	if x != nil && x.IsPause != nil {
		return *x.IsPause
	}
	return false
}

func (x *PrototypeStreamSegment) GetSequenceId() int64 {
	if x != nil && x.SequenceId != nil {
		return *x.SequenceId
	}
	return 0
}

func (x *PrototypeStreamSegment) GetMediaType() string {
	if x != nil && x.MediaType != nil {
		return *x.MediaType
	}
	return ""
}

func (x *PrototypeStreamSegment) GetCoreVersion() int64 {
	if x != nil && x.CoreVersion != nil {
		return *x.CoreVersion
	}
	return 0
}

func (x *PrototypeStreamSegment) GetContentUri() string {
	if x != nil && x.ContentUri != nil {
		return *x.ContentUri
	}
	return ""
}

func (x *PrototypeStreamSegment) GetStartMonotonicTimestamp() int64 {
	if x != nil && x.StartMonotonicTimestamp != nil {
		return *x.StartMonotonicTimestamp
	}
	return 0
}

func (x *PrototypeStreamSegment) GetEndMonotonicTimestamp() int64 {
	if x != nil && x.EndMonotonicTimestamp != nil {
		return *x.EndMonotonicTimestamp
	}
	return 0
}

func (x *PrototypeStreamSegment) GetIsLast() bool {
	if x != nil && x.IsLast != nil {
		return *x.IsLast
	}
	return false
}

func (x *PrototypeStreamSegment) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *PrototypeStreamSegment) GetPlaybackStack() string {
	if x != nil && x.PlaybackStack != nil {
		return *x.PlaybackStack
	}
	return ""
}

func (x *PrototypeStreamSegment) GetFeatureUuid() string {
	if x != nil && x.FeatureUuid != nil {
		return *x.FeatureUuid
	}
	return ""
}

type RawCoreStream struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId                  []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	ParentPlaybackId            []byte                 `protobuf:"bytes,2,opt,name=parent_playback_id,json=parentPlaybackId,proto3,oneof" json:"parent_playback_id,omitempty"`
	VideoSessionId              *string                `protobuf:"bytes,3,opt,name=video_session_id,json=videoSessionId,proto3,oneof" json:"video_session_id,omitempty"`
	MediaId                     []byte                 `protobuf:"bytes,4,opt,name=media_id,json=mediaId,proto3,oneof" json:"media_id,omitempty"`
	MediaType                   *string                `protobuf:"bytes,5,opt,name=media_type,json=mediaType,proto3,oneof" json:"media_type,omitempty"`
	FeatureIdentifier           *string                `protobuf:"bytes,6,opt,name=feature_identifier,json=featureIdentifier,proto3,oneof" json:"feature_identifier,omitempty"`
	FeatureVersion              *string                `protobuf:"bytes,7,opt,name=feature_version,json=featureVersion,proto3,oneof" json:"feature_version,omitempty"`
	ViewUri                     *string                `protobuf:"bytes,8,opt,name=view_uri,json=viewUri,proto3,oneof" json:"view_uri,omitempty"`
	SourceStart                 *string                `protobuf:"bytes,9,opt,name=source_start,json=sourceStart,proto3,oneof" json:"source_start,omitempty"`
	ReasonStart                 *string                `protobuf:"bytes,10,opt,name=reason_start,json=reasonStart,proto3,oneof" json:"reason_start,omitempty"`
	SourceEnd                   *string                `protobuf:"bytes,11,opt,name=source_end,json=sourceEnd,proto3,oneof" json:"source_end,omitempty"`
	ReasonEnd                   *string                `protobuf:"bytes,12,opt,name=reason_end,json=reasonEnd,proto3,oneof" json:"reason_end,omitempty"`
	PlaybackStartTime           *int64                 `protobuf:"varint,13,opt,name=playback_start_time,json=playbackStartTime,proto3,oneof" json:"playback_start_time,omitempty"`
	MsPlayed                    *int32                 `protobuf:"varint,14,opt,name=ms_played,json=msPlayed,proto3,oneof" json:"ms_played,omitempty"`
	MsPlayedNominal             *int32                 `protobuf:"varint,15,opt,name=ms_played_nominal,json=msPlayedNominal,proto3,oneof" json:"ms_played_nominal,omitempty"`
	MsPlayedOverlapping         *int32                 `protobuf:"varint,16,opt,name=ms_played_overlapping,json=msPlayedOverlapping,proto3,oneof" json:"ms_played_overlapping,omitempty"`
	MsPlayedVideo               *int32                 `protobuf:"varint,17,opt,name=ms_played_video,json=msPlayedVideo,proto3,oneof" json:"ms_played_video,omitempty"`
	MsPlayedBackground          *int32                 `protobuf:"varint,18,opt,name=ms_played_background,json=msPlayedBackground,proto3,oneof" json:"ms_played_background,omitempty"`
	MsPlayedFullscreen          *int32                 `protobuf:"varint,19,opt,name=ms_played_fullscreen,json=msPlayedFullscreen,proto3,oneof" json:"ms_played_fullscreen,omitempty"`
	Live                        *bool                  `protobuf:"varint,20,opt,name=live,proto3,oneof" json:"live,omitempty"`
	Shuffle                     *bool                  `protobuf:"varint,21,opt,name=shuffle,proto3,oneof" json:"shuffle,omitempty"`
	AudioFormat                 *string                `protobuf:"bytes,22,opt,name=audio_format,json=audioFormat,proto3,oneof" json:"audio_format,omitempty"`
	PlayContext                 *string                `protobuf:"bytes,23,opt,name=play_context,json=playContext,proto3,oneof" json:"play_context,omitempty"`
	ContentUri                  *string                `protobuf:"bytes,24,opt,name=content_uri,json=contentUri,proto3,oneof" json:"content_uri,omitempty"`
	DisplayedContentUri         *string                `protobuf:"bytes,25,opt,name=displayed_content_uri,json=displayedContentUri,proto3,oneof" json:"displayed_content_uri,omitempty"`
	ContentIsDownloaded         *bool                  `protobuf:"varint,26,opt,name=content_is_downloaded,json=contentIsDownloaded,proto3,oneof" json:"content_is_downloaded,omitempty"`
	IncognitoMode               *bool                  `protobuf:"varint,27,opt,name=incognito_mode,json=incognitoMode,proto3,oneof" json:"incognito_mode,omitempty"`
	Provider                    *string                `protobuf:"bytes,28,opt,name=provider,proto3,oneof" json:"provider,omitempty"`
	Referrer                    *string                `protobuf:"bytes,29,opt,name=referrer,proto3,oneof" json:"referrer,omitempty"`
	ReferrerVersion             *string                `protobuf:"bytes,30,opt,name=referrer_version,json=referrerVersion,proto3,oneof" json:"referrer_version,omitempty"`
	ReferrerVendor              *string                `protobuf:"bytes,31,opt,name=referrer_vendor,json=referrerVendor,proto3,oneof" json:"referrer_vendor,omitempty"`
	StreamingRule               *string                `protobuf:"bytes,32,opt,name=streaming_rule,json=streamingRule,proto3,oneof" json:"streaming_rule,omitempty"`
	ConnectControllerDeviceId   *string                `protobuf:"bytes,33,opt,name=connect_controller_device_id,json=connectControllerDeviceId,proto3,oneof" json:"connect_controller_device_id,omitempty"`
	ConnectControllerDeviceIdV2 *string                `protobuf:"bytes,44,opt,name=connect_controller_device_id_v2,json=connectControllerDeviceIdV2,proto3,oneof" json:"connect_controller_device_id_v2,omitempty"`
	PageInstanceId              *string                `protobuf:"bytes,34,opt,name=page_instance_id,json=pageInstanceId,proto3,oneof" json:"page_instance_id,omitempty"`
	InteractionId               *string                `protobuf:"bytes,35,opt,name=interaction_id,json=interactionId,proto3,oneof" json:"interaction_id,omitempty"`
	ParentContentUri            *string                `protobuf:"bytes,36,opt,name=parent_content_uri,json=parentContentUri,proto3,oneof" json:"parent_content_uri,omitempty"`
	CoreVersion                 *int64                 `protobuf:"varint,37,opt,name=core_version,json=coreVersion,proto3,oneof" json:"core_version,omitempty"`
	CoreBundle                  *string                `protobuf:"bytes,38,opt,name=core_bundle,json=coreBundle,proto3,oneof" json:"core_bundle,omitempty"`
	IsAssumedPremium            *bool                  `protobuf:"varint,39,opt,name=is_assumed_premium,json=isAssumedPremium,proto3,oneof" json:"is_assumed_premium,omitempty"`
	MsPlayedExternal            *int32                 `protobuf:"varint,40,opt,name=ms_played_external,json=msPlayedExternal,proto3,oneof" json:"ms_played_external,omitempty"`
	LocalContentUri             *string                `protobuf:"bytes,41,opt,name=local_content_uri,json=localContentUri,proto3,oneof" json:"local_content_uri,omitempty"`
	ClientOfflineAtStreamStart  *bool                  `protobuf:"varint,42,opt,name=client_offline_at_stream_start,json=clientOfflineAtStreamStart,proto3,oneof" json:"client_offline_at_stream_start,omitempty"`
	SocialListening             *bool                  `protobuf:"varint,43,opt,name=social_listening,json=socialListening,proto3,oneof" json:"social_listening,omitempty"`
	PlaybackStack               *string                `protobuf:"bytes,45,opt,name=playback_stack,json=playbackStack,proto3,oneof" json:"playback_stack,omitempty"`
	MsNarrationOverlapping      *int32                 `protobuf:"varint,46,opt,name=ms_narration_overlapping,json=msNarrationOverlapping,proto3,oneof" json:"ms_narration_overlapping,omitempty"`
	CustomReportingAttribution  *string                `protobuf:"bytes,47,opt,name=custom_reporting_attribution,json=customReportingAttribution,proto3,oneof" json:"custom_reporting_attribution,omitempty"`
	DecisionId                  *string                `protobuf:"bytes,48,opt,name=decision_id,json=decisionId,proto3,oneof" json:"decision_id,omitempty"`
	PlayContextDecisionId       *string                `protobuf:"bytes,49,opt,name=play_context_decision_id,json=playContextDecisionId,proto3,oneof" json:"play_context_decision_id,omitempty"`
	MsTrimmed                   *int32                 `protobuf:"varint,50,opt,name=ms_trimmed,json=msTrimmed,proto3,oneof" json:"ms_trimmed,omitempty"`
	MsNominalTrimmed            *int32                 `protobuf:"varint,51,opt,name=ms_nominal_trimmed,json=msNominalTrimmed,proto3,oneof" json:"ms_nominal_trimmed,omitempty"`
	FeatureUuid                 *string                `protobuf:"bytes,52,opt,name=feature_uuid,json=featureUuid,proto3,oneof" json:"feature_uuid,omitempty"`
	StreamId                    []byte                 `protobuf:"bytes,53,opt,name=stream_id,json=streamId,proto3,oneof" json:"stream_id,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *RawCoreStream) Reset() {
	*x = RawCoreStream{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawCoreStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawCoreStream) ProtoMessage() {}

func (x *RawCoreStream) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawCoreStream.ProtoReflect.Descriptor instead.
func (*RawCoreStream) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{136}
}

func (x *RawCoreStream) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *RawCoreStream) GetParentPlaybackId() []byte {
	if x != nil {
		return x.ParentPlaybackId
	}
	return nil
}

func (x *RawCoreStream) GetVideoSessionId() string {
	if x != nil && x.VideoSessionId != nil {
		return *x.VideoSessionId
	}
	return ""
}

func (x *RawCoreStream) GetMediaId() []byte {
	if x != nil {
		return x.MediaId
	}
	return nil
}

func (x *RawCoreStream) GetMediaType() string {
	if x != nil && x.MediaType != nil {
		return *x.MediaType
	}
	return ""
}

func (x *RawCoreStream) GetFeatureIdentifier() string {
	if x != nil && x.FeatureIdentifier != nil {
		return *x.FeatureIdentifier
	}
	return ""
}

func (x *RawCoreStream) GetFeatureVersion() string {
	if x != nil && x.FeatureVersion != nil {
		return *x.FeatureVersion
	}
	return ""
}

func (x *RawCoreStream) GetViewUri() string {
	if x != nil && x.ViewUri != nil {
		return *x.ViewUri
	}
	return ""
}

func (x *RawCoreStream) GetSourceStart() string {
	if x != nil && x.SourceStart != nil {
		return *x.SourceStart
	}
	return ""
}

func (x *RawCoreStream) GetReasonStart() string {
	if x != nil && x.ReasonStart != nil {
		return *x.ReasonStart
	}
	return ""
}

func (x *RawCoreStream) GetSourceEnd() string {
	if x != nil && x.SourceEnd != nil {
		return *x.SourceEnd
	}
	return ""
}

func (x *RawCoreStream) GetReasonEnd() string {
	if x != nil && x.ReasonEnd != nil {
		return *x.ReasonEnd
	}
	return ""
}

func (x *RawCoreStream) GetPlaybackStartTime() int64 {
	if x != nil && x.PlaybackStartTime != nil {
		return *x.PlaybackStartTime
	}
	return 0
}

func (x *RawCoreStream) GetMsPlayed() int32 {
	if x != nil && x.MsPlayed != nil {
		return *x.MsPlayed
	}
	return 0
}

func (x *RawCoreStream) GetMsPlayedNominal() int32 {
	if x != nil && x.MsPlayedNominal != nil {
		return *x.MsPlayedNominal
	}
	return 0
}

func (x *RawCoreStream) GetMsPlayedOverlapping() int32 {
	if x != nil && x.MsPlayedOverlapping != nil {
		return *x.MsPlayedOverlapping
	}
	return 0
}

func (x *RawCoreStream) GetMsPlayedVideo() int32 {
	if x != nil && x.MsPlayedVideo != nil {
		return *x.MsPlayedVideo
	}
	return 0
}

func (x *RawCoreStream) GetMsPlayedBackground() int32 {
	if x != nil && x.MsPlayedBackground != nil {
		return *x.MsPlayedBackground
	}
	return 0
}

func (x *RawCoreStream) GetMsPlayedFullscreen() int32 {
	if x != nil && x.MsPlayedFullscreen != nil {
		return *x.MsPlayedFullscreen
	}
	return 0
}

func (x *RawCoreStream) GetLive() bool {
	if x != nil && x.Live != nil {
		return *x.Live
	}
	return false
}

func (x *RawCoreStream) GetShuffle() bool {
	if x != nil && x.Shuffle != nil {
		return *x.Shuffle
	}
	return false
}

func (x *RawCoreStream) GetAudioFormat() string {
	if x != nil && x.AudioFormat != nil {
		return *x.AudioFormat
	}
	return ""
}

func (x *RawCoreStream) GetPlayContext() string {
	if x != nil && x.PlayContext != nil {
		return *x.PlayContext
	}
	return ""
}

func (x *RawCoreStream) GetContentUri() string {
	if x != nil && x.ContentUri != nil {
		return *x.ContentUri
	}
	return ""
}

func (x *RawCoreStream) GetDisplayedContentUri() string {
	if x != nil && x.DisplayedContentUri != nil {
		return *x.DisplayedContentUri
	}
	return ""
}

func (x *RawCoreStream) GetContentIsDownloaded() bool {
	if x != nil && x.ContentIsDownloaded != nil {
		return *x.ContentIsDownloaded
	}
	return false
}

func (x *RawCoreStream) GetIncognitoMode() bool {
	if x != nil && x.IncognitoMode != nil {
		return *x.IncognitoMode
	}
	return false
}

func (x *RawCoreStream) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *RawCoreStream) GetReferrer() string {
	if x != nil && x.Referrer != nil {
		return *x.Referrer
	}
	return ""
}

func (x *RawCoreStream) GetReferrerVersion() string {
	if x != nil && x.ReferrerVersion != nil {
		return *x.ReferrerVersion
	}
	return ""
}

func (x *RawCoreStream) GetReferrerVendor() string {
	if x != nil && x.ReferrerVendor != nil {
		return *x.ReferrerVendor
	}
	return ""
}

func (x *RawCoreStream) GetStreamingRule() string {
	if x != nil && x.StreamingRule != nil {
		return *x.StreamingRule
	}
	return ""
}

func (x *RawCoreStream) GetConnectControllerDeviceId() string {
	if x != nil && x.ConnectControllerDeviceId != nil {
		return *x.ConnectControllerDeviceId
	}
	return ""
}

func (x *RawCoreStream) GetConnectControllerDeviceIdV2() string {
	if x != nil && x.ConnectControllerDeviceIdV2 != nil {
		return *x.ConnectControllerDeviceIdV2
	}
	return ""
}

func (x *RawCoreStream) GetPageInstanceId() string {
	if x != nil && x.PageInstanceId != nil {
		return *x.PageInstanceId
	}
	return ""
}

func (x *RawCoreStream) GetInteractionId() string {
	if x != nil && x.InteractionId != nil {
		return *x.InteractionId
	}
	return ""
}

func (x *RawCoreStream) GetParentContentUri() string {
	if x != nil && x.ParentContentUri != nil {
		return *x.ParentContentUri
	}
	return ""
}

func (x *RawCoreStream) GetCoreVersion() int64 {
	if x != nil && x.CoreVersion != nil {
		return *x.CoreVersion
	}
	return 0
}

func (x *RawCoreStream) GetCoreBundle() string {
	if x != nil && x.CoreBundle != nil {
		return *x.CoreBundle
	}
	return ""
}

func (x *RawCoreStream) GetIsAssumedPremium() bool {
	if x != nil && x.IsAssumedPremium != nil {
		return *x.IsAssumedPremium
	}
	return false
}

func (x *RawCoreStream) GetMsPlayedExternal() int32 {
	if x != nil && x.MsPlayedExternal != nil {
		return *x.MsPlayedExternal
	}
	return 0
}

func (x *RawCoreStream) GetLocalContentUri() string {
	if x != nil && x.LocalContentUri != nil {
		return *x.LocalContentUri
	}
	return ""
}

func (x *RawCoreStream) GetClientOfflineAtStreamStart() bool {
	if x != nil && x.ClientOfflineAtStreamStart != nil {
		return *x.ClientOfflineAtStreamStart
	}
	return false
}

func (x *RawCoreStream) GetSocialListening() bool {
	if x != nil && x.SocialListening != nil {
		return *x.SocialListening
	}
	return false
}

func (x *RawCoreStream) GetPlaybackStack() string {
	if x != nil && x.PlaybackStack != nil {
		return *x.PlaybackStack
	}
	return ""
}

func (x *RawCoreStream) GetMsNarrationOverlapping() int32 {
	if x != nil && x.MsNarrationOverlapping != nil {
		return *x.MsNarrationOverlapping
	}
	return 0
}

func (x *RawCoreStream) GetCustomReportingAttribution() string {
	if x != nil && x.CustomReportingAttribution != nil {
		return *x.CustomReportingAttribution
	}
	return ""
}

func (x *RawCoreStream) GetDecisionId() string {
	if x != nil && x.DecisionId != nil {
		return *x.DecisionId
	}
	return ""
}

func (x *RawCoreStream) GetPlayContextDecisionId() string {
	if x != nil && x.PlayContextDecisionId != nil {
		return *x.PlayContextDecisionId
	}
	return ""
}

func (x *RawCoreStream) GetMsTrimmed() int32 {
	if x != nil && x.MsTrimmed != nil {
		return *x.MsTrimmed
	}
	return 0
}

func (x *RawCoreStream) GetMsNominalTrimmed() int32 {
	if x != nil && x.MsNominalTrimmed != nil {
		return *x.MsNominalTrimmed
	}
	return 0
}

func (x *RawCoreStream) GetFeatureUuid() string {
	if x != nil && x.FeatureUuid != nil {
		return *x.FeatureUuid
	}
	return ""
}

func (x *RawCoreStream) GetStreamId() []byte {
	if x != nil {
		return x.StreamId
	}
	return nil
}

type RawCoreStreamStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId    []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	ContentUri    *string                `protobuf:"bytes,2,opt,name=content_uri,json=contentUri,proto3,oneof" json:"content_uri,omitempty"`
	MediaType     *string                `protobuf:"bytes,3,opt,name=media_type,json=mediaType,proto3,oneof" json:"media_type,omitempty"`
	ReasonStart   *string                `protobuf:"bytes,4,opt,name=reason_start,json=reasonStart,proto3,oneof" json:"reason_start,omitempty"`
	CoreVersion   *int64                 `protobuf:"varint,5,opt,name=core_version,json=coreVersion,proto3,oneof" json:"core_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawCoreStreamStart) Reset() {
	*x = RawCoreStreamStart{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawCoreStreamStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawCoreStreamStart) ProtoMessage() {}

func (x *RawCoreStreamStart) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawCoreStreamStart.ProtoReflect.Descriptor instead.
func (*RawCoreStreamStart) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{137}
}

func (x *RawCoreStreamStart) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *RawCoreStreamStart) GetContentUri() string {
	if x != nil && x.ContentUri != nil {
		return *x.ContentUri
	}
	return ""
}

func (x *RawCoreStreamStart) GetMediaType() string {
	if x != nil && x.MediaType != nil {
		return *x.MediaType
	}
	return ""
}

func (x *RawCoreStreamStart) GetReasonStart() string {
	if x != nil && x.ReasonStart != nil {
		return *x.ReasonStart
	}
	return ""
}

func (x *RawCoreStreamStart) GetCoreVersion() int64 {
	if x != nil && x.CoreVersion != nil {
		return *x.CoreVersion
	}
	return 0
}

type RawCoreStreamSegment struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId              []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	StartPosition           *int64                 `protobuf:"varint,2,opt,name=start_position,json=startPosition,proto3,oneof" json:"start_position,omitempty"`
	EndPosition             *int64                 `protobuf:"varint,3,opt,name=end_position,json=endPosition,proto3,oneof" json:"end_position,omitempty"`
	MsPlayed                *int32                 `protobuf:"varint,4,opt,name=ms_played,json=msPlayed,proto3,oneof" json:"ms_played,omitempty"`
	ReasonStart             *string                `protobuf:"bytes,5,opt,name=reason_start,json=reasonStart,proto3,oneof" json:"reason_start,omitempty"`
	ReasonEnd               *string                `protobuf:"bytes,6,opt,name=reason_end,json=reasonEnd,proto3,oneof" json:"reason_end,omitempty"`
	PlaybackSpeed           *float64               `protobuf:"fixed64,7,opt,name=playback_speed,json=playbackSpeed,proto3,oneof" json:"playback_speed,omitempty"`
	StartTimestamp          *int64                 `protobuf:"varint,8,opt,name=start_timestamp,json=startTimestamp,proto3,oneof" json:"start_timestamp,omitempty"`
	EndTimestamp            *int64                 `protobuf:"varint,9,opt,name=end_timestamp,json=endTimestamp,proto3,oneof" json:"end_timestamp,omitempty"`
	IsSeek                  *bool                  `protobuf:"varint,10,opt,name=is_seek,json=isSeek,proto3,oneof" json:"is_seek,omitempty"`
	IsPause                 *bool                  `protobuf:"varint,11,opt,name=is_pause,json=isPause,proto3,oneof" json:"is_pause,omitempty"`
	SequenceId              *int64                 `protobuf:"varint,12,opt,name=sequence_id,json=sequenceId,proto3,oneof" json:"sequence_id,omitempty"`
	MediaType               *string                `protobuf:"bytes,13,opt,name=media_type,json=mediaType,proto3,oneof" json:"media_type,omitempty"`
	CoreVersion             *int64                 `protobuf:"varint,14,opt,name=core_version,json=coreVersion,proto3,oneof" json:"core_version,omitempty"`
	ContentUri              *string                `protobuf:"bytes,15,opt,name=content_uri,json=contentUri,proto3,oneof" json:"content_uri,omitempty"`
	StartMonotonicTimestamp *int64                 `protobuf:"varint,16,opt,name=start_monotonic_timestamp,json=startMonotonicTimestamp,proto3,oneof" json:"start_monotonic_timestamp,omitempty"`
	EndMonotonicTimestamp   *int64                 `protobuf:"varint,17,opt,name=end_monotonic_timestamp,json=endMonotonicTimestamp,proto3,oneof" json:"end_monotonic_timestamp,omitempty"`
	IsLast                  *bool                  `protobuf:"varint,18,opt,name=is_last,json=isLast,proto3,oneof" json:"is_last,omitempty"`
	Provider                *string                `protobuf:"bytes,19,opt,name=provider,proto3,oneof" json:"provider,omitempty"`
	PlaybackStack           *string                `protobuf:"bytes,20,opt,name=playback_stack,json=playbackStack,proto3,oneof" json:"playback_stack,omitempty"`
	FeatureUuid             *string                `protobuf:"bytes,21,opt,name=feature_uuid,json=featureUuid,proto3,oneof" json:"feature_uuid,omitempty"`
	StreamId                []byte                 `protobuf:"bytes,22,opt,name=stream_id,json=streamId,proto3,oneof" json:"stream_id,omitempty"`
	PageInstanceId          *string                `protobuf:"bytes,23,opt,name=page_instance_id,json=pageInstanceId,proto3,oneof" json:"page_instance_id,omitempty"`
	InteractionId           *string                `protobuf:"bytes,24,opt,name=interaction_id,json=interactionId,proto3,oneof" json:"interaction_id,omitempty"`
	PlayContext             *string                `protobuf:"bytes,25,opt,name=play_context,json=playContext,proto3,oneof" json:"play_context,omitempty"`
	StartTimestampInternal  *int64                 `protobuf:"varint,26,opt,name=start_timestamp_internal,json=startTimestampInternal,proto3,oneof" json:"start_timestamp_internal,omitempty"`
	EndTimestampInternal    *int64                 `protobuf:"varint,27,opt,name=end_timestamp_internal,json=endTimestampInternal,proto3,oneof" json:"end_timestamp_internal,omitempty"`
	SequenceIdInternal      *int64                 `protobuf:"varint,28,opt,name=sequence_id_internal,json=sequenceIdInternal,proto3,oneof" json:"sequence_id_internal,omitempty"`
	IsAudioOn               *bool                  `protobuf:"varint,29,opt,name=is_audio_on,json=isAudioOn,proto3,oneof" json:"is_audio_on,omitempty"`
	IsVideoOn               *bool                  `protobuf:"varint,30,opt,name=is_video_on,json=isVideoOn,proto3,oneof" json:"is_video_on,omitempty"`
	VideoSurface            *string                `protobuf:"bytes,31,opt,name=video_surface,json=videoSurface,proto3,oneof" json:"video_surface,omitempty"`
	IsSystemSeek            *bool                  `protobuf:"varint,32,opt,name=is_system_seek,json=isSystemSeek,proto3,oneof" json:"is_system_seek,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RawCoreStreamSegment) Reset() {
	*x = RawCoreStreamSegment{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawCoreStreamSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawCoreStreamSegment) ProtoMessage() {}

func (x *RawCoreStreamSegment) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawCoreStreamSegment.ProtoReflect.Descriptor instead.
func (*RawCoreStreamSegment) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{138}
}

func (x *RawCoreStreamSegment) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *RawCoreStreamSegment) GetStartPosition() int64 {
	if x != nil && x.StartPosition != nil {
		return *x.StartPosition
	}
	return 0
}

func (x *RawCoreStreamSegment) GetEndPosition() int64 {
	if x != nil && x.EndPosition != nil {
		return *x.EndPosition
	}
	return 0
}

func (x *RawCoreStreamSegment) GetMsPlayed() int32 {
	if x != nil && x.MsPlayed != nil {
		return *x.MsPlayed
	}
	return 0
}

func (x *RawCoreStreamSegment) GetReasonStart() string {
	if x != nil && x.ReasonStart != nil {
		return *x.ReasonStart
	}
	return ""
}

func (x *RawCoreStreamSegment) GetReasonEnd() string {
	if x != nil && x.ReasonEnd != nil {
		return *x.ReasonEnd
	}
	return ""
}

func (x *RawCoreStreamSegment) GetPlaybackSpeed() float64 {
	if x != nil && x.PlaybackSpeed != nil {
		return *x.PlaybackSpeed
	}
	return 0
}

func (x *RawCoreStreamSegment) GetStartTimestamp() int64 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *RawCoreStreamSegment) GetEndTimestamp() int64 {
	if x != nil && x.EndTimestamp != nil {
		return *x.EndTimestamp
	}
	return 0
}

func (x *RawCoreStreamSegment) GetIsSeek() bool {
	if x != nil && x.IsSeek != nil {
		return *x.IsSeek
	}
	return false
}

func (x *RawCoreStreamSegment) GetIsPause() bool {
	if x != nil && x.IsPause != nil {
		return *x.IsPause
	}
	return false
}

func (x *RawCoreStreamSegment) GetSequenceId() int64 {
	if x != nil && x.SequenceId != nil {
		return *x.SequenceId
	}
	return 0
}

func (x *RawCoreStreamSegment) GetMediaType() string {
	if x != nil && x.MediaType != nil {
		return *x.MediaType
	}
	return ""
}

func (x *RawCoreStreamSegment) GetCoreVersion() int64 {
	if x != nil && x.CoreVersion != nil {
		return *x.CoreVersion
	}
	return 0
}

func (x *RawCoreStreamSegment) GetContentUri() string {
	if x != nil && x.ContentUri != nil {
		return *x.ContentUri
	}
	return ""
}

func (x *RawCoreStreamSegment) GetStartMonotonicTimestamp() int64 {
	if x != nil && x.StartMonotonicTimestamp != nil {
		return *x.StartMonotonicTimestamp
	}
	return 0
}

func (x *RawCoreStreamSegment) GetEndMonotonicTimestamp() int64 {
	if x != nil && x.EndMonotonicTimestamp != nil {
		return *x.EndMonotonicTimestamp
	}
	return 0
}

func (x *RawCoreStreamSegment) GetIsLast() bool {
	if x != nil && x.IsLast != nil {
		return *x.IsLast
	}
	return false
}

func (x *RawCoreStreamSegment) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *RawCoreStreamSegment) GetPlaybackStack() string {
	if x != nil && x.PlaybackStack != nil {
		return *x.PlaybackStack
	}
	return ""
}

func (x *RawCoreStreamSegment) GetFeatureUuid() string {
	if x != nil && x.FeatureUuid != nil {
		return *x.FeatureUuid
	}
	return ""
}

func (x *RawCoreStreamSegment) GetStreamId() []byte {
	if x != nil {
		return x.StreamId
	}
	return nil
}

func (x *RawCoreStreamSegment) GetPageInstanceId() string {
	if x != nil && x.PageInstanceId != nil {
		return *x.PageInstanceId
	}
	return ""
}

func (x *RawCoreStreamSegment) GetInteractionId() string {
	if x != nil && x.InteractionId != nil {
		return *x.InteractionId
	}
	return ""
}

func (x *RawCoreStreamSegment) GetPlayContext() string {
	if x != nil && x.PlayContext != nil {
		return *x.PlayContext
	}
	return ""
}

func (x *RawCoreStreamSegment) GetStartTimestampInternal() int64 {
	if x != nil && x.StartTimestampInternal != nil {
		return *x.StartTimestampInternal
	}
	return 0
}

func (x *RawCoreStreamSegment) GetEndTimestampInternal() int64 {
	if x != nil && x.EndTimestampInternal != nil {
		return *x.EndTimestampInternal
	}
	return 0
}

func (x *RawCoreStreamSegment) GetSequenceIdInternal() int64 {
	if x != nil && x.SequenceIdInternal != nil {
		return *x.SequenceIdInternal
	}
	return 0
}

func (x *RawCoreStreamSegment) GetIsAudioOn() bool {
	if x != nil && x.IsAudioOn != nil {
		return *x.IsAudioOn
	}
	return false
}

func (x *RawCoreStreamSegment) GetIsVideoOn() bool {
	if x != nil && x.IsVideoOn != nil {
		return *x.IsVideoOn
	}
	return false
}

func (x *RawCoreStreamSegment) GetVideoSurface() string {
	if x != nil && x.VideoSurface != nil {
		return *x.VideoSurface
	}
	return ""
}

func (x *RawCoreStreamSegment) GetIsSystemSeek() bool {
	if x != nil && x.IsSystemSeek != nil {
		return *x.IsSystemSeek
	}
	return false
}

type ShowRequestDebug struct {
	state                                        protoimpl.MessageState `protogen:"open.v1"`
	NumRepliesIsOnlineFalse                      *int32                 `protobuf:"varint,1,opt,name=num_replies_is_online_false,json=numRepliesIsOnlineFalse,proto3,oneof" json:"num_replies_is_online_false,omitempty"`
	NumRepliesIsOnlineTrue                       *int32                 `protobuf:"varint,2,opt,name=num_replies_is_online_true,json=numRepliesIsOnlineTrue,proto3,oneof" json:"num_replies_is_online_true,omitempty"`
	LastReplyEpisodeId_0                         []byte                 `protobuf:"bytes,3,opt,name=last_reply_episode_id_0,json=lastReplyEpisodeId0,proto3,oneof" json:"last_reply_episode_id_0,omitempty"`
	LastReplyEpisodeId_1                         []byte                 `protobuf:"bytes,4,opt,name=last_reply_episode_id_1,json=lastReplyEpisodeId1,proto3,oneof" json:"last_reply_episode_id_1,omitempty"`
	LastReplyEpisodeId_2                         []byte                 `protobuf:"bytes,5,opt,name=last_reply_episode_id_2,json=lastReplyEpisodeId2,proto3,oneof" json:"last_reply_episode_id_2,omitempty"`
	NumLoadShowOkIsOnlineFalse                   *int32                 `protobuf:"varint,6,opt,name=num_load_show_ok_is_online_false,json=numLoadShowOkIsOnlineFalse,proto3,oneof" json:"num_load_show_ok_is_online_false,omitempty"`
	NumLoadShowOkIsOnlineTrue                    *int32                 `protobuf:"varint,7,opt,name=num_load_show_ok_is_online_true,json=numLoadShowOkIsOnlineTrue,proto3,oneof" json:"num_load_show_ok_is_online_true,omitempty"`
	NumLoadShowFailIsOnlineFalse                 *int32                 `protobuf:"varint,8,opt,name=num_load_show_fail_is_online_false,json=numLoadShowFailIsOnlineFalse,proto3,oneof" json:"num_load_show_fail_is_online_false,omitempty"`
	NumLoadShowFailIsOnlineTrue                  *int32                 `protobuf:"varint,9,opt,name=num_load_show_fail_is_online_true,json=numLoadShowFailIsOnlineTrue,proto3,oneof" json:"num_load_show_fail_is_online_true,omitempty"`
	LastLoadShowV4EpisodeId_0                    []byte                 `protobuf:"bytes,10,opt,name=last_load_show_v4_episode_id_0,json=lastLoadShowV4EpisodeId0,proto3,oneof" json:"last_load_show_v4_episode_id_0,omitempty"`
	LastLoadShowV4Episode_0CacheAvailability     *int32                 `protobuf:"varint,11,opt,name=last_load_show_v4_episode_0_cache_availability,json=lastLoadShowV4Episode0CacheAvailability,proto3,oneof" json:"last_load_show_v4_episode_0_cache_availability,omitempty"`
	LastLoadShowV4EpisodeId_1                    []byte                 `protobuf:"bytes,12,opt,name=last_load_show_v4_episode_id_1,json=lastLoadShowV4EpisodeId1,proto3,oneof" json:"last_load_show_v4_episode_id_1,omitempty"`
	LastLoadShowV4Episode_1CacheAvailability     *int32                 `protobuf:"varint,13,opt,name=last_load_show_v4_episode_1_cache_availability,json=lastLoadShowV4Episode1CacheAvailability,proto3,oneof" json:"last_load_show_v4_episode_1_cache_availability,omitempty"`
	LastLoadShowV4EpisodeId_2                    []byte                 `protobuf:"bytes,14,opt,name=last_load_show_v4_episode_id_2,json=lastLoadShowV4EpisodeId2,proto3,oneof" json:"last_load_show_v4_episode_id_2,omitempty"`
	LastLoadShowV4Episode_2CacheAvailability     *int32                 `protobuf:"varint,15,opt,name=last_load_show_v4_episode_2_cache_availability,json=lastLoadShowV4Episode2CacheAvailability,proto3,oneof" json:"last_load_show_v4_episode_2_cache_availability,omitempty"`
	LastLoadShowV4Etag                           *string                `protobuf:"bytes,16,opt,name=last_load_show_v4_etag,json=lastLoadShowV4Etag,proto3,oneof" json:"last_load_show_v4_etag,omitempty"`
	LastLoadError                                *int32                 `protobuf:"varint,17,opt,name=last_load_error,json=lastLoadError,proto3,oneof" json:"last_load_error,omitempty"`
	IsOnline                                     *bool                  `protobuf:"varint,18,opt,name=is_online,json=isOnline,proto3,oneof" json:"is_online,omitempty"`
	OptimizationLevel                            *int32                 `protobuf:"varint,19,opt,name=optimization_level,json=optimizationLevel,proto3,oneof" json:"optimization_level,omitempty"`
	EnvNow                                       *int32                 `protobuf:"varint,20,opt,name=env_now,json=envNow,proto3,oneof" json:"env_now,omitempty"`
	ShowUri                                      *string                `protobuf:"bytes,21,opt,name=show_uri,json=showUri,proto3,oneof" json:"show_uri,omitempty"`
	LastLoadShowV4StoredAtTimestamp              *int32                 `protobuf:"varint,22,opt,name=last_load_show_v4_stored_at_timestamp,json=lastLoadShowV4StoredAtTimestamp,proto3,oneof" json:"last_load_show_v4_stored_at_timestamp,omitempty"`
	LastLoadShowV4EpisodeUris                    []string               `protobuf:"bytes,23,rep,name=last_load_show_v4_episode_uris,json=lastLoadShowV4EpisodeUris,proto3" json:"last_load_show_v4_episode_uris,omitempty"`
	LastLoadShowV4EpisodeCacheAvailabilities     []int32                `protobuf:"varint,24,rep,packed,name=last_load_show_v4_episode_cache_availabilities,json=lastLoadShowV4EpisodeCacheAvailabilities,proto3" json:"last_load_show_v4_episode_cache_availabilities,omitempty"`
	LastLoadShowV4EpisodeCacheExpiryTimestamps   []int32                `protobuf:"varint,25,rep,packed,name=last_load_show_v4_episode_cache_expiry_timestamps,json=lastLoadShowV4EpisodeCacheExpiryTimestamps,proto3" json:"last_load_show_v4_episode_cache_expiry_timestamps,omitempty"`
	LastLoadShowV4EpisodeOfflineExpiryTimestamps []int32                `protobuf:"varint,26,rep,packed,name=last_load_show_v4_episode_offline_expiry_timestamps,json=lastLoadShowV4EpisodeOfflineExpiryTimestamps,proto3" json:"last_load_show_v4_episode_offline_expiry_timestamps,omitempty"`
	LastLoadShowV4EpisodeEtags                   []string               `protobuf:"bytes,27,rep,name=last_load_show_v4_episode_etags,json=lastLoadShowV4EpisodeEtags,proto3" json:"last_load_show_v4_episode_etags,omitempty"`
	LastLoadShowV4EpisodeStatusCodes             []int32                `protobuf:"varint,28,rep,packed,name=last_load_show_v4_episode_status_codes,json=lastLoadShowV4EpisodeStatusCodes,proto3" json:"last_load_show_v4_episode_status_codes,omitempty"`
	LastLoadShowV4EpisodeStoredAtTimestamps      []int32                `protobuf:"varint,29,rep,packed,name=last_load_show_v4_episode_stored_at_timestamps,json=lastLoadShowV4EpisodeStoredAtTimestamps,proto3" json:"last_load_show_v4_episode_stored_at_timestamps,omitempty"`
	unknownFields                                protoimpl.UnknownFields
	sizeCache                                    protoimpl.SizeCache
}

func (x *ShowRequestDebug) Reset() {
	*x = ShowRequestDebug{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowRequestDebug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowRequestDebug) ProtoMessage() {}

func (x *ShowRequestDebug) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowRequestDebug.ProtoReflect.Descriptor instead.
func (*ShowRequestDebug) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{139}
}

func (x *ShowRequestDebug) GetNumRepliesIsOnlineFalse() int32 {
	if x != nil && x.NumRepliesIsOnlineFalse != nil {
		return *x.NumRepliesIsOnlineFalse
	}
	return 0
}

func (x *ShowRequestDebug) GetNumRepliesIsOnlineTrue() int32 {
	if x != nil && x.NumRepliesIsOnlineTrue != nil {
		return *x.NumRepliesIsOnlineTrue
	}
	return 0
}

func (x *ShowRequestDebug) GetLastReplyEpisodeId_0() []byte {
	if x != nil {
		return x.LastReplyEpisodeId_0
	}
	return nil
}

func (x *ShowRequestDebug) GetLastReplyEpisodeId_1() []byte {
	if x != nil {
		return x.LastReplyEpisodeId_1
	}
	return nil
}

func (x *ShowRequestDebug) GetLastReplyEpisodeId_2() []byte {
	if x != nil {
		return x.LastReplyEpisodeId_2
	}
	return nil
}

func (x *ShowRequestDebug) GetNumLoadShowOkIsOnlineFalse() int32 {
	if x != nil && x.NumLoadShowOkIsOnlineFalse != nil {
		return *x.NumLoadShowOkIsOnlineFalse
	}
	return 0
}

func (x *ShowRequestDebug) GetNumLoadShowOkIsOnlineTrue() int32 {
	if x != nil && x.NumLoadShowOkIsOnlineTrue != nil {
		return *x.NumLoadShowOkIsOnlineTrue
	}
	return 0
}

func (x *ShowRequestDebug) GetNumLoadShowFailIsOnlineFalse() int32 {
	if x != nil && x.NumLoadShowFailIsOnlineFalse != nil {
		return *x.NumLoadShowFailIsOnlineFalse
	}
	return 0
}

func (x *ShowRequestDebug) GetNumLoadShowFailIsOnlineTrue() int32 {
	if x != nil && x.NumLoadShowFailIsOnlineTrue != nil {
		return *x.NumLoadShowFailIsOnlineTrue
	}
	return 0
}

func (x *ShowRequestDebug) GetLastLoadShowV4EpisodeId_0() []byte {
	if x != nil {
		return x.LastLoadShowV4EpisodeId_0
	}
	return nil
}

func (x *ShowRequestDebug) GetLastLoadShowV4Episode_0CacheAvailability() int32 {
	if x != nil && x.LastLoadShowV4Episode_0CacheAvailability != nil {
		return *x.LastLoadShowV4Episode_0CacheAvailability
	}
	return 0
}

func (x *ShowRequestDebug) GetLastLoadShowV4EpisodeId_1() []byte {
	if x != nil {
		return x.LastLoadShowV4EpisodeId_1
	}
	return nil
}

func (x *ShowRequestDebug) GetLastLoadShowV4Episode_1CacheAvailability() int32 {
	if x != nil && x.LastLoadShowV4Episode_1CacheAvailability != nil {
		return *x.LastLoadShowV4Episode_1CacheAvailability
	}
	return 0
}

func (x *ShowRequestDebug) GetLastLoadShowV4EpisodeId_2() []byte {
	if x != nil {
		return x.LastLoadShowV4EpisodeId_2
	}
	return nil
}

func (x *ShowRequestDebug) GetLastLoadShowV4Episode_2CacheAvailability() int32 {
	if x != nil && x.LastLoadShowV4Episode_2CacheAvailability != nil {
		return *x.LastLoadShowV4Episode_2CacheAvailability
	}
	return 0
}

func (x *ShowRequestDebug) GetLastLoadShowV4Etag() string {
	if x != nil && x.LastLoadShowV4Etag != nil {
		return *x.LastLoadShowV4Etag
	}
	return ""
}

func (x *ShowRequestDebug) GetLastLoadError() int32 {
	if x != nil && x.LastLoadError != nil {
		return *x.LastLoadError
	}
	return 0
}

func (x *ShowRequestDebug) GetIsOnline() bool {
	if x != nil && x.IsOnline != nil {
		return *x.IsOnline
	}
	return false
}

func (x *ShowRequestDebug) GetOptimizationLevel() int32 {
	if x != nil && x.OptimizationLevel != nil {
		return *x.OptimizationLevel
	}
	return 0
}

func (x *ShowRequestDebug) GetEnvNow() int32 {
	if x != nil && x.EnvNow != nil {
		return *x.EnvNow
	}
	return 0
}

func (x *ShowRequestDebug) GetShowUri() string {
	if x != nil && x.ShowUri != nil {
		return *x.ShowUri
	}
	return ""
}

func (x *ShowRequestDebug) GetLastLoadShowV4StoredAtTimestamp() int32 {
	if x != nil && x.LastLoadShowV4StoredAtTimestamp != nil {
		return *x.LastLoadShowV4StoredAtTimestamp
	}
	return 0
}

func (x *ShowRequestDebug) GetLastLoadShowV4EpisodeUris() []string {
	if x != nil {
		return x.LastLoadShowV4EpisodeUris
	}
	return nil
}

func (x *ShowRequestDebug) GetLastLoadShowV4EpisodeCacheAvailabilities() []int32 {
	if x != nil {
		return x.LastLoadShowV4EpisodeCacheAvailabilities
	}
	return nil
}

func (x *ShowRequestDebug) GetLastLoadShowV4EpisodeCacheExpiryTimestamps() []int32 {
	if x != nil {
		return x.LastLoadShowV4EpisodeCacheExpiryTimestamps
	}
	return nil
}

func (x *ShowRequestDebug) GetLastLoadShowV4EpisodeOfflineExpiryTimestamps() []int32 {
	if x != nil {
		return x.LastLoadShowV4EpisodeOfflineExpiryTimestamps
	}
	return nil
}

func (x *ShowRequestDebug) GetLastLoadShowV4EpisodeEtags() []string {
	if x != nil {
		return x.LastLoadShowV4EpisodeEtags
	}
	return nil
}

func (x *ShowRequestDebug) GetLastLoadShowV4EpisodeStatusCodes() []int32 {
	if x != nil {
		return x.LastLoadShowV4EpisodeStatusCodes
	}
	return nil
}

func (x *ShowRequestDebug) GetLastLoadShowV4EpisodeStoredAtTimestamps() []int32 {
	if x != nil {
		return x.LastLoadShowV4EpisodeStoredAtTimestamps
	}
	return nil
}

type StreamReportingError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId    []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	ErrorType     *string                `protobuf:"bytes,2,opt,name=error_type,json=errorType,proto3,oneof" json:"error_type,omitempty"`
	ErrorReason   *string                `protobuf:"bytes,3,opt,name=error_reason,json=errorReason,proto3,oneof" json:"error_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamReportingError) Reset() {
	*x = StreamReportingError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamReportingError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamReportingError) ProtoMessage() {}

func (x *StreamReportingError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamReportingError.ProtoReflect.Descriptor instead.
func (*StreamReportingError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{140}
}

func (x *StreamReportingError) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *StreamReportingError) GetErrorType() string {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return ""
}

func (x *StreamReportingError) GetErrorReason() string {
	if x != nil && x.ErrorReason != nil {
		return *x.ErrorReason
	}
	return ""
}

type StreamReportingSegmentsDebug struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId          []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	Segments            []string               `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"`
	Start               []int64                `protobuf:"varint,3,rep,packed,name=start,proto3" json:"start,omitempty"`
	End                 []int64                `protobuf:"varint,4,rep,packed,name=end,proto3" json:"end,omitempty"`
	Video               []bool                 `protobuf:"varint,5,rep,packed,name=video,proto3" json:"video,omitempty"`
	Overlapping         []bool                 `protobuf:"varint,6,rep,packed,name=overlapping,proto3" json:"overlapping,omitempty"`
	Background          []bool                 `protobuf:"varint,7,rep,packed,name=background,proto3" json:"background,omitempty"`
	Fullscreen          []bool                 `protobuf:"varint,8,rep,packed,name=fullscreen,proto3" json:"fullscreen,omitempty"`
	External            []bool                 `protobuf:"varint,9,rep,packed,name=external,proto3" json:"external,omitempty"`
	PlaybackSpeed       []float32              `protobuf:"fixed32,10,rep,packed,name=playback_speed,json=playbackSpeed,proto3" json:"playback_speed,omitempty"`
	AppSessionTimestamp *int64                 `protobuf:"varint,11,opt,name=app_session_timestamp,json=appSessionTimestamp,proto3,oneof" json:"app_session_timestamp,omitempty"`
	Narration           []bool                 `protobuf:"varint,12,rep,packed,name=narration,proto3" json:"narration,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StreamReportingSegmentsDebug) Reset() {
	*x = StreamReportingSegmentsDebug{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamReportingSegmentsDebug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamReportingSegmentsDebug) ProtoMessage() {}

func (x *StreamReportingSegmentsDebug) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamReportingSegmentsDebug.ProtoReflect.Descriptor instead.
func (*StreamReportingSegmentsDebug) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{141}
}

func (x *StreamReportingSegmentsDebug) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *StreamReportingSegmentsDebug) GetSegments() []string {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *StreamReportingSegmentsDebug) GetStart() []int64 {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *StreamReportingSegmentsDebug) GetEnd() []int64 {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *StreamReportingSegmentsDebug) GetVideo() []bool {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *StreamReportingSegmentsDebug) GetOverlapping() []bool {
	if x != nil {
		return x.Overlapping
	}
	return nil
}

func (x *StreamReportingSegmentsDebug) GetBackground() []bool {
	if x != nil {
		return x.Background
	}
	return nil
}

func (x *StreamReportingSegmentsDebug) GetFullscreen() []bool {
	if x != nil {
		return x.Fullscreen
	}
	return nil
}

func (x *StreamReportingSegmentsDebug) GetExternal() []bool {
	if x != nil {
		return x.External
	}
	return nil
}

func (x *StreamReportingSegmentsDebug) GetPlaybackSpeed() []float32 {
	if x != nil {
		return x.PlaybackSpeed
	}
	return nil
}

func (x *StreamReportingSegmentsDebug) GetAppSessionTimestamp() int64 {
	if x != nil && x.AppSessionTimestamp != nil {
		return *x.AppSessionTimestamp
	}
	return 0
}

func (x *StreamReportingSegmentsDebug) GetNarration() []bool {
	if x != nil {
		return x.Narration
	}
	return nil
}

type StreamReportingDebugTracerTest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	EventSchemaVersion   *int64                 `protobuf:"varint,1,opt,name=event_schema_version,json=eventSchemaVersion,proto3,oneof" json:"event_schema_version,omitempty"`
	MessageVersion       *int64                 `protobuf:"varint,2,opt,name=message_version,json=messageVersion,proto3,oneof" json:"message_version,omitempty"`
	PlaybackId           []byte                 `protobuf:"bytes,3,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	CoreVersion          *int64                 `protobuf:"varint,4,opt,name=core_version,json=coreVersion,proto3,oneof" json:"core_version,omitempty"`
	Sequence             []int32                `protobuf:"varint,5,rep,packed,name=sequence,proto3" json:"sequence,omitempty"`
	ReasonSend           *string                `protobuf:"bytes,6,opt,name=reason_send,json=reasonSend,proto3,oneof" json:"reason_send,omitempty"`
	SendIteration        *int64                 `protobuf:"varint,7,opt,name=send_iteration,json=sendIteration,proto3,oneof" json:"send_iteration,omitempty"`
	TotalSend            *int64                 `protobuf:"varint,8,opt,name=total_send,json=totalSend,proto3,oneof" json:"total_send,omitempty"`
	StreamHandle         []int32                `protobuf:"varint,9,rep,packed,name=stream_handle,json=streamHandle,proto3" json:"stream_handle,omitempty"`
	StreamDataHolderSize []int64                `protobuf:"varint,10,rep,packed,name=stream_data_holder_size,json=streamDataHolderSize,proto3" json:"stream_data_holder_size,omitempty"`
	Timestamp            []int64                `protobuf:"varint,11,rep,packed,name=timestamp,proto3" json:"timestamp,omitempty"`
	InitialTimestamp     *int64                 `protobuf:"varint,12,opt,name=initial_timestamp,json=initialTimestamp,proto3,oneof" json:"initial_timestamp,omitempty"`
	CoreVersionTiny      *int64                 `protobuf:"varint,13,opt,name=core_version_tiny,json=coreVersionTiny,proto3,oneof" json:"core_version_tiny,omitempty"`
	Configuration        *string                `protobuf:"bytes,14,opt,name=configuration,proto3,oneof" json:"configuration,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StreamReportingDebugTracerTest) Reset() {
	*x = StreamReportingDebugTracerTest{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamReportingDebugTracerTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamReportingDebugTracerTest) ProtoMessage() {}

func (x *StreamReportingDebugTracerTest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamReportingDebugTracerTest.ProtoReflect.Descriptor instead.
func (*StreamReportingDebugTracerTest) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{142}
}

func (x *StreamReportingDebugTracerTest) GetEventSchemaVersion() int64 {
	if x != nil && x.EventSchemaVersion != nil {
		return *x.EventSchemaVersion
	}
	return 0
}

func (x *StreamReportingDebugTracerTest) GetMessageVersion() int64 {
	if x != nil && x.MessageVersion != nil {
		return *x.MessageVersion
	}
	return 0
}

func (x *StreamReportingDebugTracerTest) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *StreamReportingDebugTracerTest) GetCoreVersion() int64 {
	if x != nil && x.CoreVersion != nil {
		return *x.CoreVersion
	}
	return 0
}

func (x *StreamReportingDebugTracerTest) GetSequence() []int32 {
	if x != nil {
		return x.Sequence
	}
	return nil
}

func (x *StreamReportingDebugTracerTest) GetReasonSend() string {
	if x != nil && x.ReasonSend != nil {
		return *x.ReasonSend
	}
	return ""
}

func (x *StreamReportingDebugTracerTest) GetSendIteration() int64 {
	if x != nil && x.SendIteration != nil {
		return *x.SendIteration
	}
	return 0
}

func (x *StreamReportingDebugTracerTest) GetTotalSend() int64 {
	if x != nil && x.TotalSend != nil {
		return *x.TotalSend
	}
	return 0
}

func (x *StreamReportingDebugTracerTest) GetStreamHandle() []int32 {
	if x != nil {
		return x.StreamHandle
	}
	return nil
}

func (x *StreamReportingDebugTracerTest) GetStreamDataHolderSize() []int64 {
	if x != nil {
		return x.StreamDataHolderSize
	}
	return nil
}

func (x *StreamReportingDebugTracerTest) GetTimestamp() []int64 {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StreamReportingDebugTracerTest) GetInitialTimestamp() int64 {
	if x != nil && x.InitialTimestamp != nil {
		return *x.InitialTimestamp
	}
	return 0
}

func (x *StreamReportingDebugTracerTest) GetCoreVersionTiny() int64 {
	if x != nil && x.CoreVersionTiny != nil {
		return *x.CoreVersionTiny
	}
	return 0
}

func (x *StreamReportingDebugTracerTest) GetConfiguration() string {
	if x != nil && x.Configuration != nil {
		return *x.Configuration
	}
	return ""
}

type Stutter struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FileId         []byte                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3,oneof" json:"file_id,omitempty"`
	PlaybackId     []byte                 `protobuf:"bytes,2,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	Track          *string                `protobuf:"bytes,3,opt,name=track,proto3,oneof" json:"track,omitempty"`
	BufferSize     *int64                 `protobuf:"varint,4,opt,name=buffer_size,json=bufferSize,proto3,oneof" json:"buffer_size,omitempty"`
	MaxBufferSize  *int64                 `protobuf:"varint,5,opt,name=max_buffer_size,json=maxBufferSize,proto3,oneof" json:"max_buffer_size,omitempty"`
	FileByteOffset *int64                 `protobuf:"varint,6,opt,name=file_byte_offset,json=fileByteOffset,proto3,oneof" json:"file_byte_offset,omitempty"`
	FileByteTotal  *int64                 `protobuf:"varint,7,opt,name=file_byte_total,json=fileByteTotal,proto3,oneof" json:"file_byte_total,omitempty"`
	TargetBuffer   *int64                 `protobuf:"varint,8,opt,name=target_buffer,json=targetBuffer,proto3,oneof" json:"target_buffer,omitempty"`
	AudioDriver    *string                `protobuf:"bytes,9,opt,name=audio_driver,json=audioDriver,proto3,oneof" json:"audio_driver,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Stutter) Reset() {
	*x = Stutter{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stutter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stutter) ProtoMessage() {}

func (x *Stutter) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stutter.ProtoReflect.Descriptor instead.
func (*Stutter) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{143}
}

func (x *Stutter) GetFileId() []byte {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *Stutter) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *Stutter) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

func (x *Stutter) GetBufferSize() int64 {
	if x != nil && x.BufferSize != nil {
		return *x.BufferSize
	}
	return 0
}

func (x *Stutter) GetMaxBufferSize() int64 {
	if x != nil && x.MaxBufferSize != nil {
		return *x.MaxBufferSize
	}
	return 0
}

func (x *Stutter) GetFileByteOffset() int64 {
	if x != nil && x.FileByteOffset != nil {
		return *x.FileByteOffset
	}
	return 0
}

func (x *Stutter) GetFileByteTotal() int64 {
	if x != nil && x.FileByteTotal != nil {
		return *x.FileByteTotal
	}
	return 0
}

func (x *Stutter) GetTargetBuffer() int64 {
	if x != nil && x.TargetBuffer != nil {
		return *x.TargetBuffer
	}
	return 0
}

func (x *Stutter) GetAudioDriver() string {
	if x != nil && x.AudioDriver != nil {
		return *x.AudioDriver
	}
	return ""
}

type TimeStretcherInstrumentation struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId        []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	WasPlaybackPaused *bool                  `protobuf:"varint,2,opt,name=was_playback_paused,json=wasPlaybackPaused,proto3,oneof" json:"was_playback_paused,omitempty"`
	TotalBufferSize   *int64                 `protobuf:"varint,3,opt,name=total_buffer_size,json=totalBufferSize,proto3,oneof" json:"total_buffer_size,omitempty"`
	NumberOfCalls     *int64                 `protobuf:"varint,4,opt,name=number_of_calls,json=numberOfCalls,proto3,oneof" json:"number_of_calls,omitempty"`
	TotalDuration     *int64                 `protobuf:"varint,5,opt,name=total_duration,json=totalDuration,proto3,oneof" json:"total_duration,omitempty"`
	DurationPerByte   *float32               `protobuf:"fixed32,6,opt,name=duration_per_byte,json=durationPerByte,proto3,oneof" json:"duration_per_byte,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TimeStretcherInstrumentation) Reset() {
	*x = TimeStretcherInstrumentation{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeStretcherInstrumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeStretcherInstrumentation) ProtoMessage() {}

func (x *TimeStretcherInstrumentation) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeStretcherInstrumentation.ProtoReflect.Descriptor instead.
func (*TimeStretcherInstrumentation) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{144}
}

func (x *TimeStretcherInstrumentation) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *TimeStretcherInstrumentation) GetWasPlaybackPaused() bool {
	if x != nil && x.WasPlaybackPaused != nil {
		return *x.WasPlaybackPaused
	}
	return false
}

func (x *TimeStretcherInstrumentation) GetTotalBufferSize() int64 {
	if x != nil && x.TotalBufferSize != nil {
		return *x.TotalBufferSize
	}
	return 0
}

func (x *TimeStretcherInstrumentation) GetNumberOfCalls() int64 {
	if x != nil && x.NumberOfCalls != nil {
		return *x.NumberOfCalls
	}
	return 0
}

func (x *TimeStretcherInstrumentation) GetTotalDuration() int64 {
	if x != nil && x.TotalDuration != nil {
		return *x.TotalDuration
	}
	return 0
}

func (x *TimeStretcherInstrumentation) GetDurationPerByte() float32 {
	if x != nil && x.DurationPerByte != nil {
		return *x.DurationPerByte
	}
	return 0
}

type TrackNotPlayed struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlaybackId      []byte                 `protobuf:"bytes,1,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	SourceStart     *string                `protobuf:"bytes,2,opt,name=source_start,json=sourceStart,proto3,oneof" json:"source_start,omitempty"`
	ReasonStart     *string                `protobuf:"bytes,3,opt,name=reason_start,json=reasonStart,proto3,oneof" json:"reason_start,omitempty"`
	SourceEnd       *string                `protobuf:"bytes,4,opt,name=source_end,json=sourceEnd,proto3,oneof" json:"source_end,omitempty"`
	ReasonEnd       *string                `protobuf:"bytes,5,opt,name=reason_end,json=reasonEnd,proto3,oneof" json:"reason_end,omitempty"`
	PlayContext     *string                `protobuf:"bytes,6,opt,name=play_context,json=playContext,proto3,oneof" json:"play_context,omitempty"`
	PlayTrack       *string                `protobuf:"bytes,7,opt,name=play_track,json=playTrack,proto3,oneof" json:"play_track,omitempty"`
	DisplayTrack    *string                `protobuf:"bytes,8,opt,name=display_track,json=displayTrack,proto3,oneof" json:"display_track,omitempty"`
	Provider        *string                `protobuf:"bytes,9,opt,name=provider,proto3,oneof" json:"provider,omitempty"`
	Referer         *string                `protobuf:"bytes,10,opt,name=referer,proto3,oneof" json:"referer,omitempty"`
	ReferrerVersion *string                `protobuf:"bytes,11,opt,name=referrer_version,json=referrerVersion,proto3,oneof" json:"referrer_version,omitempty"`
	ReferrerVendor  *string                `protobuf:"bytes,12,opt,name=referrer_vendor,json=referrerVendor,proto3,oneof" json:"referrer_vendor,omitempty"`
	GaiaDevId       *string                `protobuf:"bytes,13,opt,name=gaia_dev_id,json=gaiaDevId,proto3,oneof" json:"gaia_dev_id,omitempty"`
	ReasonNotPlayed *string                `protobuf:"bytes,14,opt,name=reason_not_played,json=reasonNotPlayed,proto3,oneof" json:"reason_not_played,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TrackNotPlayed) Reset() {
	*x = TrackNotPlayed{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackNotPlayed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackNotPlayed) ProtoMessage() {}

func (x *TrackNotPlayed) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackNotPlayed.ProtoReflect.Descriptor instead.
func (*TrackNotPlayed) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{145}
}

func (x *TrackNotPlayed) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *TrackNotPlayed) GetSourceStart() string {
	if x != nil && x.SourceStart != nil {
		return *x.SourceStart
	}
	return ""
}

func (x *TrackNotPlayed) GetReasonStart() string {
	if x != nil && x.ReasonStart != nil {
		return *x.ReasonStart
	}
	return ""
}

func (x *TrackNotPlayed) GetSourceEnd() string {
	if x != nil && x.SourceEnd != nil {
		return *x.SourceEnd
	}
	return ""
}

func (x *TrackNotPlayed) GetReasonEnd() string {
	if x != nil && x.ReasonEnd != nil {
		return *x.ReasonEnd
	}
	return ""
}

func (x *TrackNotPlayed) GetPlayContext() string {
	if x != nil && x.PlayContext != nil {
		return *x.PlayContext
	}
	return ""
}

func (x *TrackNotPlayed) GetPlayTrack() string {
	if x != nil && x.PlayTrack != nil {
		return *x.PlayTrack
	}
	return ""
}

func (x *TrackNotPlayed) GetDisplayTrack() string {
	if x != nil && x.DisplayTrack != nil {
		return *x.DisplayTrack
	}
	return ""
}

func (x *TrackNotPlayed) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *TrackNotPlayed) GetReferer() string {
	if x != nil && x.Referer != nil {
		return *x.Referer
	}
	return ""
}

func (x *TrackNotPlayed) GetReferrerVersion() string {
	if x != nil && x.ReferrerVersion != nil {
		return *x.ReferrerVersion
	}
	return ""
}

func (x *TrackNotPlayed) GetReferrerVendor() string {
	if x != nil && x.ReferrerVendor != nil {
		return *x.ReferrerVendor
	}
	return ""
}

func (x *TrackNotPlayed) GetGaiaDevId() string {
	if x != nil && x.GaiaDevId != nil {
		return *x.GaiaDevId
	}
	return ""
}

func (x *TrackNotPlayed) GetReasonNotPlayed() string {
	if x != nil && x.ReasonNotPlayed != nil {
		return *x.ReasonNotPlayed
	}
	return ""
}

type TrackStuck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Track         *string                `protobuf:"bytes,1,opt,name=track,proto3,oneof" json:"track,omitempty"`
	PlaybackId    []byte                 `protobuf:"bytes,2,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	SourceStart   *string                `protobuf:"bytes,3,opt,name=source_start,json=sourceStart,proto3,oneof" json:"source_start,omitempty"`
	ReasonStart   *string                `protobuf:"bytes,4,opt,name=reason_start,json=reasonStart,proto3,oneof" json:"reason_start,omitempty"`
	Offline       *bool                  `protobuf:"varint,5,opt,name=offline,proto3,oneof" json:"offline,omitempty"`
	Position      *int64                 `protobuf:"varint,6,opt,name=position,proto3,oneof" json:"position,omitempty"`
	Count         *int64                 `protobuf:"varint,7,opt,name=count,proto3,oneof" json:"count,omitempty"`
	AudioDriver   *string                `protobuf:"bytes,8,opt,name=audio_driver,json=audioDriver,proto3,oneof" json:"audio_driver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackStuck) Reset() {
	*x = TrackStuck{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackStuck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackStuck) ProtoMessage() {}

func (x *TrackStuck) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackStuck.ProtoReflect.Descriptor instead.
func (*TrackStuck) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{146}
}

func (x *TrackStuck) GetTrack() string {
	if x != nil && x.Track != nil {
		return *x.Track
	}
	return ""
}

func (x *TrackStuck) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *TrackStuck) GetSourceStart() string {
	if x != nil && x.SourceStart != nil {
		return *x.SourceStart
	}
	return ""
}

func (x *TrackStuck) GetReasonStart() string {
	if x != nil && x.ReasonStart != nil {
		return *x.ReasonStart
	}
	return ""
}

func (x *TrackStuck) GetOffline() bool {
	if x != nil && x.Offline != nil {
		return *x.Offline
	}
	return false
}

func (x *TrackStuck) GetPosition() int64 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *TrackStuck) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *TrackStuck) GetAudioDriver() string {
	if x != nil && x.AudioDriver != nil {
		return *x.AudioDriver
	}
	return ""
}

type UctStreamedDecision struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	DecisionId            *string                `protobuf:"bytes,1,opt,name=decision_id,json=decisionId,proto3,oneof" json:"decision_id,omitempty"`
	PlaybackId            []byte                 `protobuf:"bytes,2,opt,name=playback_id,json=playbackId,proto3,oneof" json:"playback_id,omitempty"`
	PlayContextDecisionId *string                `protobuf:"bytes,3,opt,name=play_context_decision_id,json=playContextDecisionId,proto3,oneof" json:"play_context_decision_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *UctStreamedDecision) Reset() {
	*x = UctStreamedDecision{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UctStreamedDecision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UctStreamedDecision) ProtoMessage() {}

func (x *UctStreamedDecision) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UctStreamedDecision.ProtoReflect.Descriptor instead.
func (*UctStreamedDecision) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{147}
}

func (x *UctStreamedDecision) GetDecisionId() string {
	if x != nil && x.DecisionId != nil {
		return *x.DecisionId
	}
	return ""
}

func (x *UctStreamedDecision) GetPlaybackId() []byte {
	if x != nil {
		return x.PlaybackId
	}
	return nil
}

func (x *UctStreamedDecision) GetPlayContextDecisionId() string {
	if x != nil && x.PlayContextDecisionId != nil {
		return *x.PlayContextDecisionId
	}
	return ""
}

type DroppedEventByEventName_DroppedEventsInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TotalCount      uint32                 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	UnreportedCount uint32                 `protobuf:"varint,2,opt,name=unreported_count,json=unreportedCount,proto3" json:"unreported_count,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DroppedEventByEventName_DroppedEventsInfo) Reset() {
	*x = DroppedEventByEventName_DroppedEventsInfo{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[150]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DroppedEventByEventName_DroppedEventsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DroppedEventByEventName_DroppedEventsInfo) ProtoMessage() {}

func (x *DroppedEventByEventName_DroppedEventsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[150]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DroppedEventByEventName_DroppedEventsInfo.ProtoReflect.Descriptor instead.
func (*DroppedEventByEventName_DroppedEventsInfo) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{12, 1}
}

func (x *DroppedEventByEventName_DroppedEventsInfo) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *DroppedEventByEventName_DroppedEventsInfo) GetUnreportedCount() uint32 {
	if x != nil {
		return x.UnreportedCount
	}
	return 0
}

type EventEnvelope_EventFragment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventEnvelope_EventFragment) Reset() {
	*x = EventEnvelope_EventFragment{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventEnvelope_EventFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEnvelope_EventFragment) ProtoMessage() {}

func (x *EventEnvelope_EventFragment) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEnvelope_EventFragment.ProtoReflect.Descriptor instead.
func (*EventEnvelope_EventFragment) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{14, 0}
}

func (x *EventEnvelope_EventFragment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventEnvelope_EventFragment) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PublishEventsResponse_EventError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Transient     bool                   `protobuf:"varint,2,opt,name=transient,proto3" json:"transient,omitempty"`
	Reason        int32                  `protobuf:"varint,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishEventsResponse_EventError) Reset() {
	*x = PublishEventsResponse_EventError{}
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[152]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishEventsResponse_EventError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishEventsResponse_EventError) ProtoMessage() {}

func (x *PublishEventsResponse_EventError) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_event_sender_gabito_proto_msgTypes[152]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishEventsResponse_EventError.ProtoReflect.Descriptor instead.
func (*PublishEventsResponse_EventError) Descriptor() ([]byte, []int) {
	return file_spotify_event_sender_gabito_proto_rawDescGZIP(), []int{16, 0}
}

func (x *PublishEventsResponse_EventError) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *PublishEventsResponse_EventError) GetTransient() bool {
	if x != nil {
		return x.Transient
	}
	return false
}

func (x *PublishEventsResponse_EventError) GetReason() int32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

var File_spotify_event_sender_gabito_proto protoreflect.FileDescriptor

const file_spotify_event_sender_gabito_proto_rawDesc = "" +
	"\n" +
	"!spotify/event_sender/gabito.proto\x12\x14spotify.event_sender\"'\n" +
	"\vApplication\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"}\n" +
	"\x12ApplicationDesktop\x12%\n" +
	"\x0eversion_string\x18\x01 \x01(\tR\rversionString\x12!\n" +
	"\fversion_code\x18\x02 \x01(\x03R\vversionCode\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\fR\tsessionId\"'\n" +
	"\x0fClientContextId\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\" \n" +
	"\bClientId\x12\x14\n" +
	"\x05value\x18\x01 \x01(\fR\x05value\"B\n" +
	"\x06Device\x12\"\n" +
	"\fmanufacturer\x18\x01 \x01(\tR\fmanufacturer\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\"\xc4\x01\n" +
	"\rDeviceDesktop\x12#\n" +
	"\rplatform_type\x18\x01 \x01(\tR\fplatformType\x12/\n" +
	"\x13device_manufacturer\x18\x02 \x01(\tR\x12deviceManufacturer\x12!\n" +
	"\fdevice_model\x18\x03 \x01(\tR\vdeviceModel\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"os_version\x18\x05 \x01(\tR\tosVersion\"&\n" +
	"\x0eInstallationId\x12\x14\n" +
	"\x05value\x18\x01 \x01(\fR\x05value\"6\n" +
	"\x0eMonotonicClock\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value\"2\n" +
	"\x02Os\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"<\n" +
	"\x03Sdk\x12!\n" +
	"\fversion_name\x18\x01 \x01(\tR\vversionName\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"\x1c\n" +
	"\x04Time\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x03R\x05value\"\x93\x02\n" +
	"\rDroppedEvents\x12\x84\x01\n" +
	"\x1ddropped_events_by_sequence_id\x18\x01 \x03(\v2B.spotify.event_sender.DroppedEvents.DroppedEventsBySequenceIdEntryR\x19droppedEventsBySequenceId\x1a{\n" +
	"\x1eDroppedEventsBySequenceIdEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12C\n" +
	"\x05value\x18\x02 \x01(\v2-.spotify.event_sender.DroppedEventByEventNameR\x05value:\x028\x01\"\x81\x03\n" +
	"\x17DroppedEventByEventName\x12{\n" +
	"\x16dropped_events_by_name\x18\x01 \x03(\v2F.spotify.event_sender.DroppedEventByEventName.DroppedEventsByNameEntryR\x13droppedEventsByName\x1a\x87\x01\n" +
	"\x18DroppedEventsByNameEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12U\n" +
	"\x05value\x18\x02 \x01(\v2?.spotify.event_sender.DroppedEventByEventName.DroppedEventsInfoR\x05value:\x028\x01\x1a_\n" +
	"\x11DroppedEventsInfo\x12\x1f\n" +
	"\vtotal_count\x18\x01 \x01(\rR\n" +
	"totalCount\x12)\n" +
	"\x10unreported_count\x18\x02 \x01(\rR\x0funreportedCount\"\x99\x02\n" +
	"\vEventEntity\x12.\n" +
	"\x13file_format_version\x18\x01 \x01(\rR\x11fileFormatVersion\x12\x1d\n" +
	"\n" +
	"event_name\x18\x02 \x01(\tR\teventName\x12\x1f\n" +
	"\vsequence_id\x18\x03 \x01(\fR\n" +
	"sequenceId\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x04R\x0esequenceNumber\x12\x18\n" +
	"\apayload\x18\x05 \x01(\fR\apayload\x12\x14\n" +
	"\x05owner\x18\x06 \x01(\tR\x05owner\x12$\n" +
	"\rauthenticated\x18\a \x01(\bR\rauthenticated\x12\x1b\n" +
	"\trecord_id\x18\b \x01(\x04R\brecordId\"\x91\x02\n" +
	"\rEventEnvelope\x12\x1d\n" +
	"\n" +
	"event_name\x18\x02 \x01(\tR\teventName\x12X\n" +
	"\x0eevent_fragment\x18\x03 \x03(\v21.spotify.event_sender.EventEnvelope.EventFragmentR\reventFragment\x12\x1f\n" +
	"\vsequence_id\x18\x04 \x01(\fR\n" +
	"sequenceId\x12'\n" +
	"\x0fsequence_number\x18\x05 \x01(\x03R\x0esequenceNumber\x1a7\n" +
	"\rEventFragment\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04dataJ\x04\b\x01\x10\x02\"|\n" +
	"\x14PublishEventsRequest\x129\n" +
	"\x05event\x18\x01 \x03(\v2#.spotify.event_sender.EventEnvelopeR\x05event\x12)\n" +
	"\x10suppress_persist\x18\x02 \x01(\bR\x0fsuppressPersist\"\xbf\x01\n" +
	"\x15PublishEventsResponse\x12L\n" +
	"\x05error\x18\x01 \x03(\v26.spotify.event_sender.PublishEventsResponse.EventErrorR\x05error\x1aX\n" +
	"\n" +
	"EventError\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x1c\n" +
	"\ttransient\x18\x02 \x01(\bR\ttransient\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\x05R\x06reason\"k\n" +
	"\x12InstallationEntity\x12.\n" +
	"\x13file_format_version\x18\x01 \x01(\x05R\x11fileFormatVersion\x12%\n" +
	"\x0eencrypted_part\x18\x02 \x01(\fR\rencryptedPart\"\x98\x01\n" +
	"\x10InstallationData\x12'\n" +
	"\x0finstallation_id\x18\x01 \x01(\fR\x0einstallationId\x12-\n" +
	"\x13last_seen_device_id\x18\x02 \x01(\fR\x10lastSeenDeviceId\x12,\n" +
	"\x12monotonic_clock_id\x18\x03 \x01(\x03R\x10monotonicClockId\"\xe0\x01\n" +
	"\x17RateLimitedEventsEntity\x12.\n" +
	"\x13file_format_version\x18\x01 \x01(\x05R\x11fileFormatVersion\x12X\n" +
	"\tmap_field\x18\x02 \x03(\v2;.spotify.event_sender.RateLimitedEventsEntity.MapFieldEntryR\bmapField\x1a;\n" +
	"\rMapFieldEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\" \n" +
	"\bRecordId\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x04R\x05value\"\xb8\x01\n" +
	"\x14SequenceNumberEntity\x12.\n" +
	"\x13file_format_version\x18\x01 \x01(\rR\x11fileFormatVersion\x12\x1d\n" +
	"\n" +
	"event_name\x18\x02 \x01(\tR\teventName\x12\x1f\n" +
	"\vsequence_id\x18\x03 \x01(\fR\n" +
	"sequenceId\x120\n" +
	"\x14sequence_number_next\x18\x04 \x01(\x04R\x12sequenceNumberNext\"\xcf\x05\n" +
	"\tAdContext\x127\n" +
	"\x15preceding_content_uri\x18\x01 \x01(\tH\x00R\x13precedingContentUri\x88\x01\x01\x127\n" +
	"\x15preceding_playback_id\x18\x02 \x01(\tH\x01R\x13precedingPlaybackId\x88\x01\x01\x129\n" +
	"\x16preceding_end_position\x18\x03 \x01(\x05H\x02R\x14precedingEndPosition\x88\x01\x01\x12\x15\n" +
	"\x06ad_ids\x18\x04 \x03(\tR\x05adIds\x12'\n" +
	"\rad_request_id\x18\x05 \x01(\tH\x03R\vadRequestId\x88\x01\x01\x129\n" +
	"\x16succeeding_content_uri\x18\x06 \x01(\tH\x04R\x14succeedingContentUri\x88\x01\x01\x129\n" +
	"\x16succeeding_playback_id\x18\a \x01(\tH\x05R\x14succeedingPlaybackId\x88\x01\x01\x12?\n" +
	"\x19succeeding_start_position\x18\b \x01(\x05H\x06R\x17succeedingStartPosition\x88\x01\x01\x122\n" +
	"\x12preceding_duration\x18\t \x01(\x05H\aR\x11precedingDuration\x88\x01\x01\x12\x1e\n" +
	"\vad_slot_ids\x18\n" +
	" \x03(\tR\tadSlotIdsB\x18\n" +
	"\x16_preceding_content_uriB\x18\n" +
	"\x16_preceding_playback_idB\x19\n" +
	"\x17_preceding_end_positionB\x10\n" +
	"\x0e_ad_request_idB\x19\n" +
	"\x17_succeeding_content_uriB\x19\n" +
	"\x17_succeeding_playback_idB\x1c\n" +
	"\x1a_succeeding_start_positionB\x15\n" +
	"\x13_preceding_duration\"\xb0\x02\n" +
	"\x0fAdDecisionEvent\x12\"\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tH\x00R\trequestId\x88\x01\x01\x123\n" +
	"\x13decision_request_id\x18\x02 \x01(\tH\x01R\x11decisionRequestId\x88\x01\x01\x12(\n" +
	"\rdecision_type\x18\x03 \x01(\tH\x02R\fdecisionType\x88\x01\x01\x12\x18\n" +
	"\x05ad_id\x18\x04 \x01(\tH\x03R\x04adId\x88\x01\x01\x12*\n" +
	"\x0edecision_state\x18\x05 \x01(\tH\x04R\rdecisionState\x88\x01\x01B\r\n" +
	"\v_request_idB\x16\n" +
	"\x14_decision_request_idB\x10\n" +
	"\x0e_decision_typeB\b\n" +
	"\x06_ad_idB\x11\n" +
	"\x0f_decision_state\"\xc5\x05\n" +
	"\aAdError\x12&\n" +
	"\frequest_type\x18\x01 \x01(\tH\x00R\vrequestType\x88\x01\x01\x12(\n" +
	"\rerror_message\x18\x02 \x01(\tH\x01R\ferrorMessage\x88\x01\x01\x12+\n" +
	"\x0fhttp_error_code\x18\x03 \x01(\x03H\x02R\rhttpErrorCode\x88\x01\x01\x12$\n" +
	"\vrequest_url\x18\x04 \x01(\tH\x03R\n" +
	"requestUrl\x88\x01\x01\x12*\n" +
	"\x0etracking_event\x18\x05 \x01(\tH\x04R\rtrackingEvent\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_type\x18\x06 \x01(\tH\x05R\terrorType\x88\x01\x01\x12\x18\n" +
	"\x05ad_id\x18\a \x01(\tH\x06R\x04adId\x88\x01\x01\x12$\n" +
	"\vlineitem_id\x18\b \x01(\tH\aR\n" +
	"lineitemId\x88\x01\x01\x12\x1d\n" +
	"\asurface\x18\t \x01(\tH\bR\asurface\x88\x01\x01\x12/\n" +
	"\x11ad_content_origin\x18\n" +
	" \x01(\tH\tR\x0fadContentOrigin\x88\x01\x01\x12\x17\n" +
	"\x04slot\x18\v \x01(\tH\n" +
	"R\x04slot\x88\x01\x01\x12\"\n" +
	"\n" +
	"request_id\x18\f \x01(\tH\vR\trequestId\x88\x01\x01\x12\x19\n" +
	"\bslot_ids\x18\r \x03(\tR\aslotIds\x12\x17\n" +
	"\x04type\x18\x0e \x01(\tH\fR\x04type\x88\x01\x01B\x0f\n" +
	"\r_request_typeB\x10\n" +
	"\x0e_error_messageB\x12\n" +
	"\x10_http_error_codeB\x0e\n" +
	"\f_request_urlB\x11\n" +
	"\x0f_tracking_eventB\r\n" +
	"\v_error_typeB\b\n" +
	"\x06_ad_idB\x0e\n" +
	"\f_lineitem_idB\n" +
	"\n" +
	"\b_surfaceB\x14\n" +
	"\x12_ad_content_originB\a\n" +
	"\x05_slotB\r\n" +
	"\v_request_idB\a\n" +
	"\x05_type\"\xf2\x06\n" +
	"\aAdEvent\x12\"\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tH\x00R\trequestId\x88\x01\x01\x12)\n" +
	"\x0eapp_startup_id\x18\x02 \x01(\tH\x01R\fappStartupId\x88\x01\x01\x12\x18\n" +
	"\x05ad_id\x18\x03 \x01(\tH\x02R\x04adId\x88\x01\x01\x12$\n" +
	"\vlineitem_id\x18\x04 \x01(\tH\x03R\n" +
	"lineitemId\x88\x01\x01\x12$\n" +
	"\vcreative_id\x18\x05 \x01(\tH\x04R\n" +
	"creativeId\x88\x01\x01\x12\x17\n" +
	"\x04slot\x18\x06 \x01(\tH\x05R\x04slot\x88\x01\x01\x12\x1b\n" +
	"\x06format\x18\a \x01(\tH\x06R\x06format\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\b \x01(\tH\aR\x04type\x88\x01\x01\x12!\n" +
	"\tskippable\x18\t \x01(\bH\bR\tskippable\x88\x01\x01\x12\x19\n" +
	"\x05event\x18\n" +
	" \x01(\tH\tR\x05event\x88\x01\x01\x12&\n" +
	"\fevent_source\x18\v \x01(\tH\n" +
	"R\veventSource\x88\x01\x01\x12&\n" +
	"\fevent_reason\x18\f \x01(\tH\vR\veventReason\x88\x01\x01\x121\n" +
	"\x12event_sequence_num\x18\r \x01(\x05H\fR\x10eventSequenceNum\x88\x01\x01\x12\x1f\n" +
	"\bposition\x18\x0e \x01(\x05H\rR\bposition\x88\x01\x01\x12\x1f\n" +
	"\bduration\x18\x0f \x01(\x05H\x0eR\bduration\x88\x01\x01\x12\x1e\n" +
	"\bin_focus\x18\x10 \x01(\bH\x0fR\ainFocus\x88\x01\x01\x12\x1b\n" +
	"\x06volume\x18\x11 \x01(\x02H\x10R\x06volume\x88\x01\x01\x12&\n" +
	"\fproduct_name\x18\x12 \x01(\tH\x11R\vproductName\x88\x01\x01B\r\n" +
	"\v_request_idB\x11\n" +
	"\x0f_app_startup_idB\b\n" +
	"\x06_ad_idB\x0e\n" +
	"\f_lineitem_idB\x0e\n" +
	"\f_creative_idB\a\n" +
	"\x05_slotB\t\n" +
	"\a_formatB\a\n" +
	"\x05_typeB\f\n" +
	"\n" +
	"_skippableB\b\n" +
	"\x06_eventB\x0f\n" +
	"\r_event_sourceB\x0f\n" +
	"\r_event_reasonB\x15\n" +
	"\x13_event_sequence_numB\v\n" +
	"\t_positionB\v\n" +
	"\t_durationB\v\n" +
	"\t_in_focusB\t\n" +
	"\a_volumeB\x0f\n" +
	"\r_product_name\"\xf7\x02\n" +
	"\x0eAdRequestEvent\x122\n" +
	"\x12feature_identifier\x18\x01 \x01(\tH\x00R\x11featureIdentifier\x88\x01\x01\x12/\n" +
	"\x11requested_ad_type\x18\x02 \x01(\tH\x01R\x0frequestedAdType\x88\x01\x01\x12\"\n" +
	"\n" +
	"latency_ms\x18\x03 \x01(\x03H\x02R\tlatencyMs\x88\x01\x01\x12,\n" +
	"\x12requested_ad_types\x18\x04 \x03(\tR\x10requestedAdTypes\x12\"\n" +
	"\n" +
	"request_id\x18\x05 \x01(\tH\x03R\trequestId\x88\x01\x01\x12+\n" +
	"\x0fhttp_error_code\x18\x06 \x01(\x05H\x04R\rhttpErrorCode\x88\x01\x01B\x15\n" +
	"\x13_feature_identifierB\x14\n" +
	"\x12_requested_ad_typeB\r\n" +
	"\v_latency_msB\r\n" +
	"\v_request_idB\x12\n" +
	"\x10_http_error_code\"\xde\x03\n" +
	"\x12AdOpportunityEvent\x12\"\n" +
	"\n" +
	"trigger_id\x18\x01 \x01(\tH\x00R\ttriggerId\x88\x01\x01\x12&\n" +
	"\ftrigger_type\x18\x02 \x01(\tH\x01R\vtriggerType\x88\x01\x01\x123\n" +
	"\x13decision_request_id\x18\x03 \x01(\tH\x02R\x11decisionRequestId\x88\x01\x01\x12(\n" +
	"\rtrigger_state\x18\x04 \x01(\tH\x03R\ftriggerState\x88\x01\x01\x12$\n" +
	"\vfocus_state\x18\x05 \x01(\bH\x04R\n" +
	"focusState\x88\x01\x01\x12$\n" +
	"\vcontent_uri\x18\x06 \x01(\tH\x05R\n" +
	"contentUri\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\a \x01(\tH\x06R\n" +
	"playbackId\x88\x01\x01\x12\"\n" +
	"\n" +
	"request_id\x18\b \x01(\tH\aR\trequestId\x88\x01\x01B\r\n" +
	"\v_trigger_idB\x0f\n" +
	"\r_trigger_typeB\x16\n" +
	"\x14_decision_request_idB\x10\n" +
	"\x0e_trigger_stateB\x0e\n" +
	"\f_focus_stateB\x0e\n" +
	"\f_content_uriB\x0e\n" +
	"\f_playback_idB\r\n" +
	"\v_request_id\"\xd2\x03\n" +
	"\vAdSlotEvent\x12\x19\n" +
	"\x05event\x18\x01 \x01(\tH\x00R\x05event\x88\x01\x01\x12\x18\n" +
	"\x05ad_id\x18\x02 \x01(\tH\x01R\x04adId\x88\x01\x01\x12$\n" +
	"\vlineitem_id\x18\x03 \x01(\tH\x02R\n" +
	"lineitemId\x88\x01\x01\x12$\n" +
	"\vcreative_id\x18\x04 \x01(\tH\x03R\n" +
	"creativeId\x88\x01\x01\x12\x17\n" +
	"\x04slot\x18\x05 \x01(\tH\x04R\x04slot\x88\x01\x01\x12\x1b\n" +
	"\x06format\x18\x06 \x01(\tH\x05R\x06format\x88\x01\x01\x12\x1e\n" +
	"\bin_focus\x18\a \x01(\bH\x06R\ainFocus\x88\x01\x01\x12)\n" +
	"\x0eapp_startup_id\x18\b \x01(\tH\aR\fappStartupId\x88\x01\x01\x12\"\n" +
	"\n" +
	"request_id\x18\t \x01(\tH\bR\trequestId\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\n" +
	" \x01(\tH\tR\x06reason\x88\x01\x01B\b\n" +
	"\x06_eventB\b\n" +
	"\x06_ad_idB\x0e\n" +
	"\f_lineitem_idB\x0e\n" +
	"\f_creative_idB\a\n" +
	"\x05_slotB\t\n" +
	"\a_formatB\v\n" +
	"\t_in_focusB\x11\n" +
	"\x0f_app_startup_idB\r\n" +
	"\v_request_idB\t\n" +
	"\a_reason\"S\n" +
	"\x10AmazonWakeUpTime\x12+\n" +
	"\x0fdelay_to_online\x18\x01 \x01(\x03H\x00R\rdelayToOnline\x88\x01\x01B\x12\n" +
	"\x10_delay_to_online\"\x8f\x02\n" +
	"\x0fAudioDriverInfo\x12$\n" +
	"\vdriver_name\x18\x01 \x01(\tH\x00R\n" +
	"driverName\x88\x01\x01\x121\n" +
	"\x12output_device_name\x18\x02 \x01(\tH\x01R\x10outputDeviceName\x88\x01\x01\x129\n" +
	"\x16output_device_category\x18\x03 \x01(\tH\x02R\x14outputDeviceCategory\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x04 \x01(\tH\x03R\x06reason\x88\x01\x01B\x0e\n" +
	"\f_driver_nameB\x15\n" +
	"\x13_output_device_nameB\x19\n" +
	"\x17_output_device_categoryB\t\n" +
	"\a_reason\"\x92\a\n" +
	"\x16AudioIndexRepairReport\x128\n" +
	"\x16tracks_num_added_audio\x18\x01 \x01(\x03H\x00R\x13tracksNumAddedAudio\x88\x01\x01\x122\n" +
	"\x13tracks_num_in_mdata\x18\x02 \x01(\x03H\x01R\x10tracksNumInMdata\x88\x01\x01\x128\n" +
	"\x16tracks_num_parse_error\x18\x03 \x01(\x03H\x02R\x13tracksNumParseError\x88\x01\x01\x12A\n" +
	"\x1btracks_num_missing_audio_id\x18\x04 \x01(\x03H\x03R\x17tracksNumMissingAudioId\x88\x01\x01\x128\n" +
	"\x16tracks_num_write_error\x18\x05 \x01(\x03H\x04R\x13tracksNumWriteError\x88\x01\x01\x12<\n" +
	"\x18episodes_num_added_audio\x18\x06 \x01(\x03H\x05R\x15episodesNumAddedAudio\x88\x01\x01\x126\n" +
	"\x15episodes_num_in_mdata\x18\a \x01(\x03H\x06R\x12episodesNumInMdata\x88\x01\x01\x12<\n" +
	"\x18episodes_num_parse_error\x18\b \x01(\x03H\aR\x15episodesNumParseError\x88\x01\x01\x12E\n" +
	"\x1depisodes_num_missing_audio_id\x18\t \x01(\x03H\bR\x19episodesNumMissingAudioId\x88\x01\x01\x12<\n" +
	"\x18episodes_num_write_error\x18\n" +
	" \x01(\x03H\tR\x15episodesNumWriteError\x88\x01\x01B\x19\n" +
	"\x17_tracks_num_added_audioB\x16\n" +
	"\x14_tracks_num_in_mdataB\x19\n" +
	"\x17_tracks_num_parse_errorB\x1e\n" +
	"\x1c_tracks_num_missing_audio_idB\x19\n" +
	"\x17_tracks_num_write_errorB\x1b\n" +
	"\x19_episodes_num_added_audioB\x18\n" +
	"\x16_episodes_num_in_mdataB\x1b\n" +
	"\x19_episodes_num_parse_errorB \n" +
	"\x1e_episodes_num_missing_audio_idB\x1b\n" +
	"\x19_episodes_num_write_error\"\xcd\x03\n" +
	"\x1cAudioOffliningSettingsReport\x12O\n" +
	"\"default_sync_bitrate_product_state\x18\x01 \x01(\tH\x00R\x1edefaultSyncBitrateProductState\x88\x01\x01\x12@\n" +
	"\x1auser_selected_sync_bitrate\x18\x02 \x01(\x03H\x01R\x17userSelectedSyncBitrate\x88\x01\x01\x12&\n" +
	"\fsync_bitrate\x18\x03 \x01(\x03H\x02R\vsyncBitrate\x88\x01\x01\x121\n" +
	"\x12sync_over_cellular\x18\x04 \x01(\bH\x03R\x10syncOverCellular\x88\x01\x01\x127\n" +
	"\x15primary_resource_type\x18\x05 \x01(\tH\x04R\x13primaryResourceType\x88\x01\x01B%\n" +
	"#_default_sync_bitrate_product_stateB\x1d\n" +
	"\x1b_user_selected_sync_bitrateB\x0f\n" +
	"\r_sync_bitrateB\x15\n" +
	"\x13_sync_over_cellularB\x18\n" +
	"\x16_primary_resource_type\"\xe0\x0e\n" +
	"\x13AudioSettingsReport\x12&\n" +
	"\foffline_mode\x18\x01 \x01(\bH\x00R\vofflineMode\x88\x01\x01\x12O\n" +
	"\"default_play_bitrate_product_state\x18\x02 \x01(\tH\x01R\x1edefaultPlayBitrateProductState\x88\x01\x01\x127\n" +
	"\x15user_selected_bitrate\x18\x03 \x01(\x03H\x02R\x13userSelectedBitrate\x88\x01\x01\x12&\n" +
	"\fplay_bitrate\x18\x04 \x01(\x03H\x03R\vplayBitrate\x88\x01\x01\x12:\n" +
	"\x17low_bitrate_on_cellular\x18\x05 \x01(\bH\x04R\x14lowBitrateOnCellular\x88\x01\x01\x12O\n" +
	"\"default_sync_bitrate_product_state\x18\x06 \x01(\tH\x05R\x1edefaultSyncBitrateProductState\x88\x01\x01\x12@\n" +
	"\x1auser_selected_sync_bitrate\x18\a \x01(\x03H\x06R\x17userSelectedSyncBitrate\x88\x01\x01\x12&\n" +
	"\fsync_bitrate\x18\b \x01(\x03H\aR\vsyncBitrate\x88\x01\x01\x121\n" +
	"\x12sync_over_cellular\x18\t \x01(\bH\bR\x10syncOverCellular\x88\x01\x01\x12D\n" +
	"\x1cenable_gapless_product_state\x18\n" +
	" \x01(\tH\tR\x19enableGaplessProductState\x88\x01\x01\x12*\n" +
	"\x0eenable_gapless\x18\v \x01(\bH\n" +
	"R\renableGapless\x88\x01\x01\x12H\n" +
	"\x1eenable_crossfade_product_state\x18\f \x01(\tH\vR\x1benableCrossfadeProductState\x88\x01\x01\x12.\n" +
	"\x10enable_crossfade\x18\r \x01(\bH\fR\x0fenableCrossfade\x88\x01\x01\x12*\n" +
	"\x0ecrossfade_time\x18\x0e \x01(\x03H\rR\rcrossfadeTime\x88\x01\x01\x126\n" +
	"\x14enable_normalization\x18\x0f \x01(\bH\x0eR\x13enableNormalization\x88\x01\x01\x12*\n" +
	"\x0eplayback_speed\x18\x10 \x01(\x03H\x0fR\rplaybackSpeed\x88\x01\x01\x125\n" +
	"\x14audio_loudness_level\x18\x11 \x01(\tH\x10R\x12audioLoudnessLevel\x88\x01\x01\x12*\n" +
	"\x0eenable_automix\x18\x12 \x01(\bH\x11R\renableAutomix\x88\x01\x01\x129\n" +
	"\x16enable_silence_trimmer\x18\x13 \x01(\bH\x12R\x14enableSilenceTrimmer\x88\x01\x01\x127\n" +
	"\x15enable_mono_downmixer\x18\x14 \x01(\bH\x13R\x13enableMonoDownmixer\x88\x01\x01\x12$\n" +
	"\vsend_reason\x18\x15 \x01(\tH\x14R\n" +
	"sendReason\x88\x01\x01\x12\x1f\n" +
	"\vchange_list\x18\x16 \x03(\tR\n" +
	"changeList\x12.\n" +
	"\x10enable_equalizer\x18\x17 \x01(\bH\x15R\x0fenableEqualizer\x88\x01\x01\x12?\n" +
	"\x19enable_dynamic_normalizer\x18\x18 \x01(\bH\x16R\x17enableDynamicNormalizer\x88\x01\x01B\x0f\n" +
	"\r_offline_modeB%\n" +
	"#_default_play_bitrate_product_stateB\x18\n" +
	"\x16_user_selected_bitrateB\x0f\n" +
	"\r_play_bitrateB\x1a\n" +
	"\x18_low_bitrate_on_cellularB%\n" +
	"#_default_sync_bitrate_product_stateB\x1d\n" +
	"\x1b_user_selected_sync_bitrateB\x0f\n" +
	"\r_sync_bitrateB\x15\n" +
	"\x13_sync_over_cellularB\x1f\n" +
	"\x1d_enable_gapless_product_stateB\x11\n" +
	"\x0f_enable_gaplessB!\n" +
	"\x1f_enable_crossfade_product_stateB\x13\n" +
	"\x11_enable_crossfadeB\x11\n" +
	"\x0f_crossfade_timeB\x17\n" +
	"\x15_enable_normalizationB\x11\n" +
	"\x0f_playback_speedB\x17\n" +
	"\x15_audio_loudness_levelB\x11\n" +
	"\x0f_enable_automixB\x19\n" +
	"\x17_enable_silence_trimmerB\x18\n" +
	"\x16_enable_mono_downmixerB\x0e\n" +
	"\f_send_reasonB\x13\n" +
	"\x11_enable_equalizerB\x1c\n" +
	"\x1a_enable_dynamic_normalizer\"\xdc\x04\n" +
	"\x1cAudioStreamingSettingsReport\x12O\n" +
	"\"default_play_bitrate_product_state\x18\x01 \x01(\tH\x00R\x1edefaultPlayBitrateProductState\x88\x01\x01\x12Q\n" +
	"#user_selected_play_bitrate_cellular\x18\x02 \x01(\x03H\x01R\x1fuserSelectedPlayBitrateCellular\x88\x01\x01\x12I\n" +
	"\x1fuser_selected_play_bitrate_wifi\x18\x03 \x01(\x03H\x02R\x1buserSelectedPlayBitrateWifi\x88\x01\x01\x127\n" +
	"\x15play_bitrate_cellular\x18\x04 \x01(\x03H\x03R\x13playBitrateCellular\x88\x01\x01\x12/\n" +
	"\x11play_bitrate_wifi\x18\x05 \x01(\x03H\x04R\x0fplayBitrateWifi\x88\x01\x01\x12,\n" +
	"\x0fallow_downgrade\x18\x06 \x01(\bH\x05R\x0eallowDowngrade\x88\x01\x01B%\n" +
	"#_default_play_bitrate_product_stateB&\n" +
	"$_user_selected_play_bitrate_cellularB\"\n" +
	" _user_selected_play_bitrate_wifiB\x18\n" +
	"\x16_play_bitrate_cellularB\x14\n" +
	"\x12_play_bitrate_wifiB\x12\n" +
	"\x10_allow_downgrade\"\xf3\x04\n" +
	"!ClientCoreConnectActiveDeviceRace\x12 \n" +
	"\tdevice_id\x18\x01 \x01(\tH\x00R\bdeviceId\x88\x01\x01\x12D\n" +
	"\x1cstarted_playing_at_timestamp\x18\x02 \x01(\x03H\x01R\x19startedPlayingAtTimestamp\x88\x01\x01\x12<\n" +
	"\x18cluster_active_device_id\x18\x03 \x01(\tH\x02R\x15clusterActiveDeviceId\x88\x01\x01\x12S\n" +
	"$cluster_started_playing_at_timestamp\x18\x04 \x01(\x03H\x03R clusterStartedPlayingAtTimestamp\x88\x01\x01\x12\"\n" +
	"\n" +
	"is_playing\x18\x05 \x01(\bH\x04R\tisPlaying\x88\x01\x01\x121\n" +
	"\x12cluster_is_playing\x18\x06 \x01(\bH\x05R\x10clusterIsPlaying\x88\x01\x01\x12A\n" +
	"\x1bhas_been_playing_for_millis\x18\a \x01(\x03H\x06R\x17hasBeenPlayingForMillis\x88\x01\x01B\f\n" +
	"\n" +
	"_device_idB\x1f\n" +
	"\x1d_started_playing_at_timestampB\x1b\n" +
	"\x19_cluster_active_device_idB'\n" +
	"%_cluster_started_playing_at_timestampB\r\n" +
	"\v_is_playingB\x15\n" +
	"\x13_cluster_is_playingB\x1e\n" +
	"\x1c_has_been_playing_for_millis\"\x82\b\n" +
	"\x18ClientCoreConnectCommand\x12&\n" +
	"\fcommand_type\x18\x01 \x01(\tH\x00R\vcommandType\x88\x01\x01\x12\x1b\n" +
	"\x06result\x18\x02 \x01(\tH\x01R\x06result\x88\x01\x01\x12\x1f\n" +
	"\bduration\x18\x03 \x01(\x03H\x02R\bduration\x88\x01\x01\x12,\n" +
	"\x0finteraction_ids\x18\x04 \x01(\tH\x03R\x0einteractionIds\x88\x01\x01\x12(\n" +
	"\rhttp_response\x18\x05 \x01(\tH\x04R\fhttpResponse\x88\x01\x01\x12-\n" +
	"\x10http_status_code\x18\x06 \x01(\x05H\x05R\x0ehttpStatusCode\x88\x01\x01\x12D\n" +
	"\x1ccontext_player_error_message\x18\a \x01(\tH\x06R\x19contextPlayerErrorMessage\x88\x01\x01\x12/\n" +
	"\x11http_client_error\x18\b \x01(\tH\aR\x0fhttpClientError\x88\x01\x01\x12 \n" +
	"\tintent_id\x18\t \x01(\tH\bR\bintentId\x88\x01\x01\x121\n" +
	"\x12command_size_bytes\x18\n" +
	" \x01(\x05H\tR\x10commandSizeBytes\x88\x01\x01\x12&\n" +
	"\fack_duration\x18\v \x01(\x03H\n" +
	"R\vackDuration\x88\x01\x01\x12-\n" +
	"\x10target_device_id\x18\f \x01(\tH\vR\x0etargetDeviceId\x88\x01\x01\x123\n" +
	"\x13target_device_brand\x18\r \x01(\tH\fR\x11targetDeviceBrand\x88\x01\x01\x123\n" +
	"\x13target_device_model\x18\x0e \x01(\tH\rR\x11targetDeviceModel\x88\x01\x01\x12:\n" +
	"\x17target_device_client_id\x18\x0f \x01(\tH\x0eR\x14targetDeviceClientId\x88\x01\x01B\x0f\n" +
	"\r_command_typeB\t\n" +
	"\a_resultB\v\n" +
	"\t_durationB\x12\n" +
	"\x10_interaction_idsB\x10\n" +
	"\x0e_http_responseB\x13\n" +
	"\x11_http_status_codeB\x1f\n" +
	"\x1d_context_player_error_messageB\x14\n" +
	"\x12_http_client_errorB\f\n" +
	"\n" +
	"_intent_idB\x15\n" +
	"\x13_command_size_bytesB\x0f\n" +
	"\r_ack_durationB\x13\n" +
	"\x11_target_device_idB\x16\n" +
	"\x14_target_device_brandB\x16\n" +
	"\x14_target_device_modelB\x1a\n" +
	"\x18_target_device_client_id\"\x8b\x02\n" +
	"\x1cClientCoreConnectPlayCommand\x120\n" +
	"\x11observer_duration\x18\x01 \x01(\x03H\x00R\x10observerDuration\x88\x01\x01\x12*\n" +
	"\x0estate_duration\x18\x02 \x01(\x03H\x01R\rstateDuration\x88\x01\x01\x12 \n" +
	"\tintent_id\x18\x03 \x01(\tH\x02R\bintentId\x88\x01\x01\x12$\n" +
	"\vcontext_url\x18\x04 \x01(\tH\x03R\n" +
	"contextUrl\x88\x01\x01B\x14\n" +
	"\x12_observer_durationB\x11\n" +
	"\x0f_state_durationB\f\n" +
	"\n" +
	"_intent_idB\x0e\n" +
	"\f_context_url\"\xb4\x01\n" +
	"\fClientLocale\x127\n" +
	"\x15client_default_locale\x18\x01 \x01(\tH\x00R\x13clientDefaultLocale\x88\x01\x01\x127\n" +
	"\x15user_specified_locale\x18\x02 \x01(\tH\x01R\x13userSpecifiedLocale\x88\x01\x01B\x18\n" +
	"\x16_client_default_localeB\x18\n" +
	"\x16_user_specified_locale\"\x89\x03\n" +
	"\x15CollectionLevelDbInfo\x12\x1b\n" +
	"\x06bucket\x18\x01 \x01(\tH\x00R\x06bucket\x88\x01\x01\x12$\n" +
	"\vuse_leveldb\x18\x02 \x01(\bH\x01R\n" +
	"useLeveldb\x88\x01\x01\x128\n" +
	"\x16migration_from_file_ok\x18\x03 \x01(\bH\x02R\x13migrationFromFileOk\x88\x01\x01\x12)\n" +
	"\x0eindex_check_ok\x18\x04 \x01(\bH\x03R\findexCheckOk\x88\x01\x01\x12(\n" +
	"\rleveldb_works\x18\x05 \x01(\bH\x04R\fleveldbWorks\x88\x01\x01\x12.\n" +
	"\x10already_migrated\x18\x06 \x01(\bH\x05R\x0falreadyMigrated\x88\x01\x01B\t\n" +
	"\a_bucketB\x0e\n" +
	"\f_use_leveldbB\x19\n" +
	"\x17_migration_from_file_okB\x11\n" +
	"\x0f_index_check_okB\x10\n" +
	"\x0e_leveldb_worksB\x13\n" +
	"\x11_already_migrated\"\xff\x01\n" +
	")CollectionOfflineControllerEmptyTrackList\x12 \n" +
	"\tlink_type\x18\x01 \x01(\tH\x00R\blinkType\x88\x01\x01\x12A\n" +
	"\x1aconsistent_with_collection\x18\x02 \x01(\bH\x01R\x18consistentWithCollection\x88\x01\x01\x12,\n" +
	"\x0fcollection_size\x18\x03 \x01(\x03H\x02R\x0ecollectionSize\x88\x01\x01B\f\n" +
	"\n" +
	"_link_typeB\x1d\n" +
	"\x1b_consistent_with_collectionB\x12\n" +
	"\x10_collection_size\"\xb2\x05\n" +
	"\x14ConfigurationApplied\x122\n" +
	"\x13last_rcs_fetch_time\x18\x01 \x01(\x03H\x00R\x10lastRcsFetchTime\x88\x01\x01\x12,\n" +
	"\x0finstallation_id\x18\x02 \x01(\tH\x01R\x0einstallationId\x88\x01\x01\x12(\n" +
	"\x10policy_group_ids\x18\x03 \x03(\x05R\x0epolicyGroupIds\x12C\n" +
	"\x1bconfiguration_assignment_id\x18\x04 \x01(\tH\x02R\x19configurationAssignmentId\x88\x01\x01\x12%\n" +
	"\frc_client_id\x18\x05 \x01(\tH\x03R\n" +
	"rcClientId\x88\x01\x01\x12/\n" +
	"\x11rc_client_version\x18\x06 \x01(\tH\x04R\x0frcClientVersion\x88\x01\x01\x12\x1f\n" +
	"\bplatform\x18\a \x01(\tH\x05R\bplatform\x88\x01\x01\x12\"\n" +
	"\n" +
	"fetch_type\x18\b \x01(\tH\x06R\tfetchType\x88\x01\x01\x12]\n" +
	"\videntifiers\x18\t \x03(\v2;.spotify.event_sender.ConfigurationApplied.IdentifiersEntryR\videntifiers\x1a>\n" +
	"\x10IdentifiersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x16\n" +
	"\x14_last_rcs_fetch_timeB\x12\n" +
	"\x10_installation_idB\x1e\n" +
	"\x1c_configuration_assignment_idB\x0f\n" +
	"\r_rc_client_idB\x14\n" +
	"\x12_rc_client_versionB\v\n" +
	"\t_platformB\r\n" +
	"\v_fetch_type\"\xea\x0e\n" +
	"\x14ConfigurationFetched\x122\n" +
	"\x13last_rcs_fetch_time\x18\x01 \x01(\x03H\x00R\x10lastRcsFetchTime\x88\x01\x01\x12,\n" +
	"\x0finstallation_id\x18\x02 \x01(\tH\x01R\x0einstallationId\x88\x01\x01\x12C\n" +
	"\x1bconfiguration_assignment_id\x18\x03 \x01(\tH\x02R\x19configurationAssignmentId\x88\x01\x01\x12+\n" +
	"\x0fproperty_set_id\x18\x04 \x01(\tH\x03R\rpropertySetId\x88\x01\x01\x12/\n" +
	"\x11attributes_set_id\x18\x05 \x01(\tH\x04R\x0fattributesSetId\x88\x01\x01\x12%\n" +
	"\frc_client_id\x18\x06 \x01(\tH\x05R\n" +
	"rcClientId\x88\x01\x01\x12/\n" +
	"\x11rc_client_version\x18\a \x01(\tH\x06R\x0frcClientVersion\x88\x01\x01\x12)\n" +
	"\x0erc_sdk_version\x18\b \x01(\tH\aR\frcSdkVersion\x88\x01\x01\x12\x1f\n" +
	"\bplatform\x18\t \x01(\tH\bR\bplatform\x88\x01\x01\x12\"\n" +
	"\n" +
	"fetch_type\x18\n" +
	" \x01(\tH\tR\tfetchType\x88\x01\x01\x12\x1d\n" +
	"\alatency\x18\v \x01(\x03H\n" +
	"R\alatency\x88\x01\x01\x12&\n" +
	"\fpayload_size\x18\f \x01(\x03H\vR\vpayloadSize\x88\x01\x01\x12$\n" +
	"\vstatus_code\x18\r \x01(\x05H\fR\n" +
	"statusCode\x88\x01\x01\x12&\n" +
	"\ferror_reason\x18\x0e \x01(\tH\rR\verrorReason\x88\x01\x01\x12(\n" +
	"\rerror_message\x18\x0f \x01(\tH\x0eR\ferrorMessage\x88\x01\x01\x12P\n" +
	"\"error_reason_configuration_resolve\x18\x10 \x01(\tH\x0fR\x1ferrorReasonConfigurationResolve\x88\x01\x01\x12R\n" +
	"#error_message_configuration_resolve\x18\x11 \x01(\tH\x10R errorMessageConfigurationResolve\x88\x01\x01\x12J\n" +
	"\x1ferror_reason_account_attributes\x18\x12 \x01(\tH\x11R\x1cerrorReasonAccountAttributes\x88\x01\x01\x12L\n" +
	" error_message_account_attributes\x18\x13 \x01(\tH\x12R\x1derrorMessageAccountAttributes\x88\x01\x01\x12F\n" +
	"\x1derror_code_account_attributes\x18\x14 \x01(\x05H\x13R\x1aerrorCodeAccountAttributes\x88\x01\x01\x12L\n" +
	" error_code_configuration_resolve\x18\x15 \x01(\x05H\x14R\x1derrorCodeConfigurationResolve\x88\x01\x01\x12:\n" +
	"\x17product_state_key_count\x18\x16 \x01(\x05H\x15R\x14productStateKeyCount\x88\x01\x01\x12]\n" +
	"\videntifiers\x18\x17 \x03(\v2;.spotify.event_sender.ConfigurationFetched.IdentifiersEntryR\videntifiers\x1a>\n" +
	"\x10IdentifiersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x16\n" +
	"\x14_last_rcs_fetch_timeB\x12\n" +
	"\x10_installation_idB\x1e\n" +
	"\x1c_configuration_assignment_idB\x12\n" +
	"\x10_property_set_idB\x14\n" +
	"\x12_attributes_set_idB\x0f\n" +
	"\r_rc_client_idB\x14\n" +
	"\x12_rc_client_versionB\x11\n" +
	"\x0f_rc_sdk_versionB\v\n" +
	"\t_platformB\r\n" +
	"\v_fetch_typeB\n" +
	"\n" +
	"\b_latencyB\x0f\n" +
	"\r_payload_sizeB\x0e\n" +
	"\f_status_codeB\x0f\n" +
	"\r_error_reasonB\x10\n" +
	"\x0e_error_messageB%\n" +
	"#_error_reason_configuration_resolveB&\n" +
	"$_error_message_configuration_resolveB\"\n" +
	" _error_reason_account_attributesB#\n" +
	"!_error_message_account_attributesB \n" +
	"\x1e_error_code_account_attributesB#\n" +
	"!_error_code_configuration_resolveB\x1a\n" +
	"\x18_product_state_key_count\"\xa0\x0e\n" +
	"\x1bConfigurationFetchedNonAuth\x122\n" +
	"\x13last_rcs_fetch_time\x18\x01 \x01(\x03H\x00R\x10lastRcsFetchTime\x88\x01\x01\x12,\n" +
	"\x0finstallation_id\x18\x02 \x01(\tH\x01R\x0einstallationId\x88\x01\x01\x12C\n" +
	"\x1bconfiguration_assignment_id\x18\x03 \x01(\tH\x02R\x19configurationAssignmentId\x88\x01\x01\x12+\n" +
	"\x0fproperty_set_id\x18\x04 \x01(\tH\x03R\rpropertySetId\x88\x01\x01\x12/\n" +
	"\x11attributes_set_id\x18\x05 \x01(\tH\x04R\x0fattributesSetId\x88\x01\x01\x12%\n" +
	"\frc_client_id\x18\x06 \x01(\tH\x05R\n" +
	"rcClientId\x88\x01\x01\x12/\n" +
	"\x11rc_client_version\x18\a \x01(\tH\x06R\x0frcClientVersion\x88\x01\x01\x12)\n" +
	"\x0erc_sdk_version\x18\b \x01(\tH\aR\frcSdkVersion\x88\x01\x01\x12\x1f\n" +
	"\bplatform\x18\t \x01(\tH\bR\bplatform\x88\x01\x01\x12\"\n" +
	"\n" +
	"fetch_type\x18\n" +
	" \x01(\tH\tR\tfetchType\x88\x01\x01\x12\x1d\n" +
	"\alatency\x18\v \x01(\x03H\n" +
	"R\alatency\x88\x01\x01\x12&\n" +
	"\fpayload_size\x18\f \x01(\x03H\vR\vpayloadSize\x88\x01\x01\x12$\n" +
	"\vstatus_code\x18\r \x01(\x05H\fR\n" +
	"statusCode\x88\x01\x01\x12&\n" +
	"\ferror_reason\x18\x0e \x01(\tH\rR\verrorReason\x88\x01\x01\x12(\n" +
	"\rerror_message\x18\x0f \x01(\tH\x0eR\ferrorMessage\x88\x01\x01\x12P\n" +
	"\"error_reason_configuration_resolve\x18\x10 \x01(\tH\x0fR\x1ferrorReasonConfigurationResolve\x88\x01\x01\x12R\n" +
	"#error_message_configuration_resolve\x18\x11 \x01(\tH\x10R errorMessageConfigurationResolve\x88\x01\x01\x12J\n" +
	"\x1ferror_reason_account_attributes\x18\x12 \x01(\tH\x11R\x1cerrorReasonAccountAttributes\x88\x01\x01\x12L\n" +
	" error_message_account_attributes\x18\x13 \x01(\tH\x12R\x1derrorMessageAccountAttributes\x88\x01\x01\x12F\n" +
	"\x1derror_code_account_attributes\x18\x14 \x01(\x05H\x13R\x1aerrorCodeAccountAttributes\x88\x01\x01\x12L\n" +
	" error_code_configuration_resolve\x18\x15 \x01(\x05H\x14R\x1derrorCodeConfigurationResolve\x88\x01\x01\x12d\n" +
	"\videntifiers\x18\x16 \x03(\v2B.spotify.event_sender.ConfigurationFetchedNonAuth.IdentifiersEntryR\videntifiers\x1a>\n" +
	"\x10IdentifiersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x16\n" +
	"\x14_last_rcs_fetch_timeB\x12\n" +
	"\x10_installation_idB\x1e\n" +
	"\x1c_configuration_assignment_idB\x12\n" +
	"\x10_property_set_idB\x14\n" +
	"\x12_attributes_set_idB\x0f\n" +
	"\r_rc_client_idB\x14\n" +
	"\x12_rc_client_versionB\x11\n" +
	"\x0f_rc_sdk_versionB\v\n" +
	"\t_platformB\r\n" +
	"\v_fetch_typeB\n" +
	"\n" +
	"\b_latencyB\x0f\n" +
	"\r_payload_sizeB\x0e\n" +
	"\f_status_codeB\x0f\n" +
	"\r_error_reasonB\x10\n" +
	"\x0e_error_messageB%\n" +
	"#_error_reason_configuration_resolveB&\n" +
	"$_error_message_configuration_resolveB\"\n" +
	" _error_reason_account_attributesB#\n" +
	"!_error_message_account_attributesB \n" +
	"\x1e_error_code_account_attributesB#\n" +
	"!_error_code_configuration_resolve\"\xd8\x02\n" +
	"\x18ConnectConnectivityError\x12.\n" +
	"\x10software_version\x18\x01 \x01(\tH\x00R\x0fsoftwareVersion\x88\x01\x01\x12\x19\n" +
	"\x05error\x18\x02 \x01(\tH\x01R\x05error\x88\x01\x01\x12;\n" +
	"\x17connection_type_initial\x18\x03 \x01(\tH\x02R\x15connectionTypeInitial\x88\x01\x01\x127\n" +
	"\x15connection_type_error\x18\x04 \x01(\tH\x03R\x13connectionTypeError\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x05 \x01(\tH\x04R\x06reason\x88\x01\x01B\x13\n" +
	"\x11_software_versionB\b\n" +
	"\x06_errorB\x1a\n" +
	"\x18_connection_type_initialB\x18\n" +
	"\x16_connection_type_errorB\t\n" +
	"\a_reason\"~\n" +
	"\x19ConnectCredentialsRequest\x12\"\n" +
	"\n" +
	"token_type\x18\x01 \x01(\tH\x00R\ttokenType\x88\x01\x01\x12 \n" +
	"\tclient_id\x18\x02 \x01(\tH\x01R\bclientId\x88\x01\x01B\r\n" +
	"\v_token_typeB\f\n" +
	"\n" +
	"_client_id\"\xb3\b\n" +
	"\x17ConnectDeviceDiscovered\x12 \n" +
	"\tdevice_id\x18\x01 \x01(\tH\x00R\bdeviceId\x88\x01\x01\x12,\n" +
	"\x0fdiscover_method\x18\x02 \x01(\tH\x01R\x0ediscoverMethod\x88\x01\x01\x125\n" +
	"\x14discovered_device_id\x18\x03 \x01(\tH\x02R\x12discoveredDeviceId\x88\x01\x01\x129\n" +
	"\x16discovered_device_type\x18\x04 \x01(\tH\x03R\x14discoveredDeviceType\x88\x01\x01\x12A\n" +
	"\x1adiscovered_library_version\x18\x05 \x01(\tH\x04R\x18discoveredLibraryVersion\x88\x01\x01\x12F\n" +
	"\x1ddiscovered_brand_display_name\x18\x06 \x01(\tH\x05R\x1adiscoveredBrandDisplayName\x88\x01\x01\x12F\n" +
	"\x1ddiscovered_model_display_name\x18\a \x01(\tH\x06R\x1adiscoveredModelDisplayName\x88\x01\x01\x125\n" +
	"\x14discovered_client_id\x18\b \x01(\tH\aR\x12discoveredClientId\x88\x01\x01\x127\n" +
	"\x15discovered_product_id\x18\t \x01(\tH\bR\x13discoveredProductId\x88\x01\x01\x12I\n" +
	"\x1ediscovered_device_availablilty\x18\n" +
	" \x01(\tH\tR\x1cdiscoveredDeviceAvailablilty\x88\x01\x01\x12D\n" +
	"\x1cdiscovered_device_public_key\x18\v \x01(\tH\n" +
	"R\x19discoveredDevicePublicKey\x88\x01\x01\x128\n" +
	"\x15capabilities_resolved\x18\f \x01(\bH\vR\x14capabilitiesResolved\x88\x01\x01B\f\n" +
	"\n" +
	"_device_idB\x12\n" +
	"\x10_discover_methodB\x17\n" +
	"\x15_discovered_device_idB\x19\n" +
	"\x17_discovered_device_typeB\x1d\n" +
	"\x1b_discovered_library_versionB \n" +
	"\x1e_discovered_brand_display_nameB \n" +
	"\x1e_discovered_model_display_nameB\x17\n" +
	"\x15_discovered_client_idB\x18\n" +
	"\x16_discovered_product_idB!\n" +
	"\x1f_discovered_device_availabliltyB\x1f\n" +
	"\x1d_discovered_device_public_keyB\x18\n" +
	"\x16_capabilities_resolved\"\xb1\x02\n" +
	"\x1bConnectMdnsPacketParseError\x12\x17\n" +
	"\x04type\x18\x01 \x01(\tH\x00R\x04type\x88\x01\x01\x12\x1b\n" +
	"\x06buffer\x18\x02 \x01(\tH\x01R\x06buffer\x88\x01\x01\x12\x15\n" +
	"\x03ttl\x18\x03 \x01(\tH\x02R\x03ttl\x88\x01\x01\x12\x15\n" +
	"\x03txt\x18\x04 \x01(\tH\x03R\x03txt\x88\x01\x01\x12\x17\n" +
	"\x04host\x18\x05 \x01(\tH\x04R\x04host\x88\x01\x01\x12*\n" +
	"\x0ediscovery_name\x18\x06 \x01(\tH\x05R\rdiscoveryName\x88\x01\x01\x12\x1d\n" +
	"\acontext\x18\a \x01(\tH\x06R\acontext\x88\x01\x01B\a\n" +
	"\x05_typeB\t\n" +
	"\a_bufferB\x06\n" +
	"\x04_ttlB\x06\n" +
	"\x04_txtB\a\n" +
	"\x05_hostB\x11\n" +
	"\x0f_discovery_nameB\n" +
	"\n" +
	"\b_context\"\xd9\x02\n" +
	"\x1aConnectTransferIncarnation\x121\n" +
	"\x12transfer_intent_id\x18\x01 \x01(\tH\x00R\x10transferIntentId\x88\x01\x01\x127\n" +
	"\x15incarnation_client_id\x18\x02 \x01(\tH\x01R\x13incarnationClientId\x88\x01\x01\x127\n" +
	"\x15incarnation_device_id\x18\x03 \x01(\tH\x02R\x13incarnationDeviceId\x88\x01\x01\x123\n" +
	"\x13incarnation_is_cast\x18\x04 \x01(\bH\x03R\x11incarnationIsCast\x88\x01\x01B\x15\n" +
	"\x13_transfer_intent_idB\x18\n" +
	"\x16_incarnation_client_idB\x18\n" +
	"\x16_incarnation_device_idB\x16\n" +
	"\x14_incarnation_is_cast\"\xee\v\n" +
	"\x15ConnectTransferResult\x12\x1b\n" +
	"\x06result\x18\x01 \x01(\tH\x00R\x06result\x88\x01\x01\x12$\n" +
	"\vdevice_type\x18\x02 \x01(\tH\x01R\n" +
	"deviceType\x88\x01\x01\x12,\n" +
	"\x0fdiscovery_class\x18\x03 \x01(\tH\x02R\x0ediscoveryClass\x88\x01\x01\x12&\n" +
	"\fdevice_model\x18\x04 \x01(\tH\x03R\vdeviceModel\x88\x01\x01\x12&\n" +
	"\fdevice_brand\x18\x05 \x01(\tH\x04R\vdeviceBrand\x88\x01\x01\x12;\n" +
	"\x17device_software_version\x18\x06 \x01(\tH\x05R\x15deviceSoftwareVersion\x88\x01\x01\x12\x1f\n" +
	"\bduration\x18\a \x01(\x03H\x06R\bduration\x88\x01\x01\x12-\n" +
	"\x10device_client_id\x18\b \x01(\tH\aR\x0edeviceClientId\x88\x01\x01\x121\n" +
	"\x12transfer_intent_id\x18\t \x01(\tH\bR\x10transferIntentId\x88\x01\x01\x121\n" +
	"\x12transfer_debug_log\x18\n" +
	" \x01(\tH\tR\x10transferDebugLog\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_code\x18\v \x01(\tH\n" +
	"R\terrorCode\x88\x01\x01\x121\n" +
	"\x12http_response_code\x18\f \x01(\x05H\vR\x10httpResponseCode\x88\x01\x01\x125\n" +
	"\x14initial_device_state\x18\r \x01(\tH\fR\x12initialDeviceState\x88\x01\x01\x12$\n" +
	"\vretry_count\x18\x0e \x01(\x05H\rR\n" +
	"retryCount\x88\x01\x01\x12/\n" +
	"\x11login_retry_count\x18\x0f \x01(\x05H\x0eR\x0floginRetryCount\x88\x01\x01\x12*\n" +
	"\x0elogin_duration\x18\x10 \x01(\x03H\x0fR\rloginDuration\x88\x01\x01\x12-\n" +
	"\x10target_device_id\x18\x11 \x01(\tH\x10R\x0etargetDeviceId\x88\x01\x01\x128\n" +
	"\x16target_device_is_local\x18\x12 \x01(\bH\x11R\x13targetDeviceIsLocal\x88\x01\x01\x121\n" +
	"\x12final_device_state\x18\x13 \x01(\tH\x12R\x10finalDeviceState\x88\x01\x01\x12'\n" +
	"\x0finteraction_ids\x18\x14 \x03(\tR\x0einteractionIds\x128\n" +
	"\x16target_device_is_group\x18\x15 \x01(\bH\x13R\x13targetDeviceIsGroup\x88\x01\x01\x125\n" +
	"\x14final_transfer_state\x18\x16 \x01(\tH\x14R\x12finalTransferState\x88\x01\x01\x12*\n" +
	"\x11login_error_codes\x18\x17 \x03(\tR\x0floginErrorCodesB\t\n" +
	"\a_resultB\x0e\n" +
	"\f_device_typeB\x12\n" +
	"\x10_discovery_classB\x0f\n" +
	"\r_device_modelB\x0f\n" +
	"\r_device_brandB\x1a\n" +
	"\x18_device_software_versionB\v\n" +
	"\t_durationB\x13\n" +
	"\x11_device_client_idB\x15\n" +
	"\x13_transfer_intent_idB\x15\n" +
	"\x13_transfer_debug_logB\r\n" +
	"\v_error_codeB\x15\n" +
	"\x13_http_response_codeB\x17\n" +
	"\x15_initial_device_stateB\x0e\n" +
	"\f_retry_countB\x14\n" +
	"\x12_login_retry_countB\x11\n" +
	"\x0f_login_durationB\x13\n" +
	"\x11_target_device_idB\x19\n" +
	"\x17_target_device_is_localB\x15\n" +
	"\x13_final_device_stateB\x19\n" +
	"\x17_target_device_is_groupB\x17\n" +
	"\x15_final_transfer_state\"\x85\x01\n" +
	"\x0fConnectionError\x12\"\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x03H\x00R\terrorCode\x88\x01\x01\x12\x13\n" +
	"\x02ap\x18\x02 \x01(\tH\x01R\x02ap\x88\x01\x01\x12\x19\n" +
	"\x05proxy\x18\x03 \x01(\tH\x02R\x05proxy\x88\x01\x01B\r\n" +
	"\v_error_codeB\x05\n" +
	"\x03_apB\b\n" +
	"\x06_proxy\"\xf4\x03\n" +
	"\x0eConnectionInfo\x12\x13\n" +
	"\x02ap\x18\x01 \x01(\tH\x00R\x02ap\x88\x01\x01\x12\x19\n" +
	"\x05proxy\x18\x02 \x01(\tH\x01R\x05proxy\x88\x01\x01\x123\n" +
	"\x13user_initated_login\x18\x03 \x01(\bH\x02R\x11userInitatedLogin\x88\x01\x01\x120\n" +
	"\x11reachability_type\x18\x04 \x01(\tH\x03R\x10reachabilityType\x88\x01\x01\x12:\n" +
	"\x17web_installer_unique_id\x18\x05 \x01(\tH\x04R\x14webInstallerUniqueId\x88\x01\x01\x12/\n" +
	"\x11ap_resolve_source\x18\x06 \x01(\tH\x05R\x0fapResolveSource\x88\x01\x01\x12&\n" +
	"\faddress_type\x18\a \x01(\tH\x06R\vaddressType\x88\x01\x01\x12$\n" +
	"\vipv6_failed\x18\b \x01(\bH\aR\n" +
	"ipv6Failed\x88\x01\x01B\x05\n" +
	"\x03_apB\b\n" +
	"\x06_proxyB\x16\n" +
	"\x14_user_initated_loginB\x14\n" +
	"\x12_reachability_typeB\x1a\n" +
	"\x18_web_installer_unique_idB\x14\n" +
	"\x12_ap_resolve_sourceB\x0f\n" +
	"\r_address_typeB\x0e\n" +
	"\f_ipv6_failed\"w\n" +
	"\x15ConnectionStateChange\x12\x17\n" +
	"\x04type\x18\x01 \x01(\tH\x00R\x04type\x88\x01\x01\x12\x15\n" +
	"\x03old\x18\x02 \x01(\tH\x01R\x03old\x88\x01\x01\x12\x15\n" +
	"\x03new\x18\x03 \x01(\tH\x02R\x03new\x88\x01\x01B\a\n" +
	"\x05_typeB\x06\n" +
	"\x04_oldB\x06\n" +
	"\x04_new\"\xb7\x02\n" +
	"\x1aCoreAutoplayLoadingResults\x12,\n" +
	"\x0fresponse_status\x18\x01 \x01(\x05H\x00R\x0eresponseStatus\x88\x01\x01\x12$\n" +
	"\vcontext_uri\x18\x02 \x01(\tH\x01R\n" +
	"contextUri\x88\x01\x01\x12\x1f\n" +
	"\bendpoint\x18\x03 \x01(\tH\x02R\bendpoint\x88\x01\x01\x12\"\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tH\x03R\tsessionId\x88\x01\x01\x12,\n" +
	"\x0frequest_latency\x18\x05 \x01(\x05H\x04R\x0erequestLatency\x88\x01\x01B\x12\n" +
	"\x10_response_statusB\x0e\n" +
	"\f_context_uriB\v\n" +
	"\t_endpointB\r\n" +
	"\v_session_idB\x12\n" +
	"\x10_request_latency\"\xf2\x04\n" +
	"\x1bDefaultConfigurationApplied\x12,\n" +
	"\x0finstallation_id\x18\x01 \x01(\tH\x00R\x0einstallationId\x88\x01\x01\x12C\n" +
	"\x1bconfiguration_assignment_id\x18\x02 \x01(\tH\x01R\x19configurationAssignmentId\x88\x01\x01\x12%\n" +
	"\frc_client_id\x18\x03 \x01(\tH\x02R\n" +
	"rcClientId\x88\x01\x01\x12/\n" +
	"\x11rc_client_version\x18\x04 \x01(\tH\x03R\x0frcClientVersion\x88\x01\x01\x12\x1f\n" +
	"\bplatform\x18\x05 \x01(\tH\x04R\bplatform\x88\x01\x01\x12\"\n" +
	"\n" +
	"fetch_type\x18\x06 \x01(\tH\x05R\tfetchType\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\a \x01(\tH\x06R\x06reason\x88\x01\x01\x12d\n" +
	"\videntifiers\x18\b \x03(\v2B.spotify.event_sender.DefaultConfigurationApplied.IdentifiersEntryR\videntifiers\x1a>\n" +
	"\x10IdentifiersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x12\n" +
	"\x10_installation_idB\x1e\n" +
	"\x1c_configuration_assignment_idB\x0f\n" +
	"\r_rc_client_idB\x14\n" +
	"\x12_rc_client_versionB\v\n" +
	"\t_platformB\r\n" +
	"\v_fetch_typeB\t\n" +
	"\a_reason\"\xcd\x01\n" +
	"#DesktopAuthenticationFailureNonAuth\x12$\n" +
	"\vaction_hash\x18\x01 \x01(\tH\x00R\n" +
	"actionHash\x88\x01\x01\x12*\n" +
	"\x0eerror_category\x18\x02 \x01(\tH\x01R\rerrorCategory\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_code\x18\x03 \x01(\x05H\x02R\terrorCode\x88\x01\x01B\x0e\n" +
	"\f_action_hashB\x11\n" +
	"\x0f_error_categoryB\r\n" +
	"\v_error_code\"T\n" +
	"\x1cDesktopAuthenticationSuccess\x12$\n" +
	"\vaction_hash\x18\x01 \x01(\tH\x00R\n" +
	"actionHash\x88\x01\x01B\x0e\n" +
	"\f_action_hash\"O\n" +
	"\x1aDesktopGPUAccelerationInfo\x12\"\n" +
	"\n" +
	"is_enabled\x18\x01 \x01(\bH\x00R\tisEnabled\x88\x01\x01B\r\n" +
	"\v_is_enabled\"\xdf\x06\n" +
	"\x16DesktopHighMemoryUsage\x127\n" +
	"\x15is_continuation_event\x18\x01 \x01(\bH\x00R\x13isContinuationEvent\x88\x01\x01\x12D\n" +
	"\x1csample_time_interval_seconds\x18\x02 \x01(\x01H\x01R\x19sampleTimeIntervalSeconds\x88\x01\x01\x123\n" +
	"\x13win_committed_bytes\x18\x03 \x01(\x03H\x02R\x11winCommittedBytes\x88\x01\x01\x12<\n" +
	"\x18win_peak_committed_bytes\x18\x04 \x01(\x03H\x03R\x15winPeakCommittedBytes\x88\x01\x01\x126\n" +
	"\x15win_working_set_bytes\x18\x05 \x01(\x03H\x04R\x12winWorkingSetBytes\x88\x01\x01\x12?\n" +
	"\x1awin_peak_working_set_bytes\x18\x06 \x01(\x03H\x05R\x16winPeakWorkingSetBytes\x88\x01\x01\x128\n" +
	"\x16mac_virtual_size_bytes\x18\a \x01(\x03H\x06R\x13macVirtualSizeBytes\x88\x01\x01\x12:\n" +
	"\x17mac_resident_size_bytes\x18\b \x01(\x03H\aR\x14macResidentSizeBytes\x88\x01\x01\x123\n" +
	"\x13mac_footprint_bytes\x18\t \x01(\x03H\bR\x11macFootprintBytes\x88\x01\x01\x12&\n" +
	"\fprocess_name\x18\n" +
	" \x01(\tH\tR\vprocessName\x88\x01\x01B\x18\n" +
	"\x16_is_continuation_eventB\x1f\n" +
	"\x1d_sample_time_interval_secondsB\x16\n" +
	"\x14_win_committed_bytesB\x1b\n" +
	"\x19_win_peak_committed_bytesB\x18\n" +
	"\x16_win_working_set_bytesB\x1d\n" +
	"\x1b_win_peak_working_set_bytesB\x19\n" +
	"\x17_mac_virtual_size_bytesB\x1a\n" +
	"\x18_mac_resident_size_bytesB\x16\n" +
	"\x14_mac_footprint_bytesB\x0f\n" +
	"\r_process_name\"\xc1\x02\n" +
	"\x1cDesktopPartnerAPIAuthRequest\x12 \n" +
	"\tclient_id\x18\x01 \x01(\tH\x00R\bclientId\x88\x01\x01\x12\x1d\n" +
	"\asuccess\x18\x02 \x01(\bH\x01R\asuccess\x88\x01\x01\x120\n" +
	"\x11error_description\x18\x03 \x01(\tH\x02R\x10errorDescription\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_step\x18\x04 \x01(\tH\x03R\terrorStep\x88\x01\x01\x123\n" +
	"\x13request_duration_ms\x18\x05 \x01(\x03H\x04R\x11requestDurationMs\x88\x01\x01B\f\n" +
	"\n" +
	"_client_idB\n" +
	"\n" +
	"\b_successB\x14\n" +
	"\x12_error_descriptionB\r\n" +
	"\v_error_stepB\x16\n" +
	"\x14_request_duration_ms\"\xd0\x01\n" +
	" DesktopUIShellInteractionNonAuth\x12\"\n" +
	"\n" +
	"section_id\x18\x01 \x01(\tH\x00R\tsectionId\x88\x01\x01\x12.\n" +
	"\x10interaction_type\x18\x02 \x01(\tH\x01R\x0finteractionType\x88\x01\x01\x12$\n" +
	"\vuser_intent\x18\x03 \x01(\tH\x02R\n" +
	"userIntent\x88\x01\x01B\r\n" +
	"\v_section_idB\x13\n" +
	"\x11_interaction_typeB\x0e\n" +
	"\f_user_intent\"\x9d\x02\n" +
	"\x1dDesktopUpdateDownloadComplete\x12\x1f\n" +
	"\brevision\x18\x01 \x01(\x03H\x00R\brevision\x88\x01\x01\x12$\n" +
	"\vis_critical\x18\x02 \x01(\bH\x01R\n" +
	"isCritical\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\x03 \x01(\tH\x02R\x06source\x88\x01\x01\x12(\n" +
	"\ris_successful\x18\x04 \x01(\bH\x03R\fisSuccessful\x88\x01\x01\x12$\n" +
	"\vis_employee\x18\x05 \x01(\bH\x04R\n" +
	"isEmployee\x88\x01\x01B\v\n" +
	"\t_revisionB\x0e\n" +
	"\f_is_criticalB\t\n" +
	"\a_sourceB\x10\n" +
	"\x0e_is_successfulB\x0e\n" +
	"\f_is_employee\"\x9a\x02\n" +
	"\x1aDesktopUpdateDownloadError\x12\x1f\n" +
	"\brevision\x18\x01 \x01(\x03H\x00R\brevision\x88\x01\x01\x12$\n" +
	"\vis_critical\x18\x02 \x01(\bH\x01R\n" +
	"isCritical\x88\x01\x01\x12(\n" +
	"\rerror_message\x18\x03 \x01(\tH\x02R\ferrorMessage\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\x04 \x01(\tH\x03R\x06source\x88\x01\x01\x12$\n" +
	"\vis_employee\x18\x05 \x01(\bH\x04R\n" +
	"isEmployee\x88\x01\x01B\v\n" +
	"\t_revisionB\x0e\n" +
	"\f_is_criticalB\x10\n" +
	"\x0e_error_messageB\t\n" +
	"\a_sourceB\x0e\n" +
	"\f_is_employee\"\x88\x05\n" +
	"\x1aDesktopUpdateMessageAction\x12(\n" +
	"\rwill_download\x18\x01 \x01(\bH\x00R\fwillDownload\x88\x01\x01\x12@\n" +
	"\x1athis_message_from_revision\x18\x02 \x01(\x03H\x01R\x17thisMessageFromRevision\x88\x01\x01\x12<\n" +
	"\x18this_message_to_revision\x18\x03 \x01(\x03H\x02R\x15thisMessageToRevision\x88\x01\x01\x12$\n" +
	"\vis_critical\x18\x04 \x01(\bH\x03R\n" +
	"isCritical\x88\x01\x01\x12L\n" +
	" already_downloaded_from_revision\x18\x05 \x01(\x03H\x04R\x1dalreadyDownloadedFromRevision\x88\x01\x01\x12H\n" +
	"\x1ealready_downloaded_to_revision\x18\x06 \x01(\x03H\x05R\x1balreadyDownloadedToRevision\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\a \x01(\tH\x06R\x06source\x88\x01\x01\x12$\n" +
	"\vis_employee\x18\b \x01(\bH\aR\n" +
	"isEmployee\x88\x01\x01B\x10\n" +
	"\x0e_will_downloadB\x1d\n" +
	"\x1b_this_message_from_revisionB\x1b\n" +
	"\x19_this_message_to_revisionB\x0e\n" +
	"\f_is_criticalB#\n" +
	"!_already_downloaded_from_revisionB!\n" +
	"\x1f_already_downloaded_to_revisionB\t\n" +
	"\a_sourceB\x0e\n" +
	"\f_is_employee\"\xc2\x02\n" +
	"\x1dDesktopUpdateMessageProcessed\x12\x1d\n" +
	"\asuccess\x18\x01 \x01(\bH\x00R\asuccess\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\x02 \x01(\tH\x01R\x06source\x88\x01\x01\x12\x1f\n" +
	"\brevision\x18\x03 \x01(\x03H\x02R\brevision\x88\x01\x01\x12$\n" +
	"\vis_critical\x18\x04 \x01(\bH\x03R\n" +
	"isCritical\x88\x01\x01\x12$\n" +
	"\vbinary_hash\x18\x05 \x01(\tH\x04R\n" +
	"binaryHash\x88\x01\x01\x12$\n" +
	"\vis_employee\x18\x06 \x01(\bH\x05R\n" +
	"isEmployee\x88\x01\x01B\n" +
	"\n" +
	"\b_successB\t\n" +
	"\a_sourceB\v\n" +
	"\t_revisionB\x0e\n" +
	"\f_is_criticalB\x0e\n" +
	"\f_binary_hashB\x0e\n" +
	"\f_is_employee\"\xb9\x02\n" +
	"\x15DesktopUpdateResponse\x12$\n" +
	"\vstatus_code\x18\x01 \x01(\x03H\x00R\n" +
	"statusCode\x88\x01\x01\x12+\n" +
	"\x0frequest_time_ms\x18\x02 \x01(\x03H\x01R\rrequestTimeMs\x88\x01\x01\x12&\n" +
	"\fpayload_size\x18\x03 \x01(\x03H\x02R\vpayloadSize\x88\x01\x01\x12$\n" +
	"\vis_employee\x18\x04 \x01(\bH\x03R\n" +
	"isEmployee\x88\x01\x01\x12(\n" +
	"\rerror_message\x18\x05 \x01(\tH\x04R\ferrorMessage\x88\x01\x01B\x0e\n" +
	"\f_status_codeB\x12\n" +
	"\x10_request_time_msB\x0f\n" +
	"\r_payload_sizeB\x0e\n" +
	"\f_is_employeeB\x10\n" +
	"\x0e_error_message\"\x84\x01\n" +
	"\x1bDesktopURIActivationNonAuth\x12\x15\n" +
	"\x03uri\x18\x01 \x01(\tH\x00R\x03uri\x88\x01\x01\x120\n" +
	"\x11activation_source\x18\x02 \x01(\tH\x01R\x10activationSource\x88\x01\x01B\x06\n" +
	"\x04_uriB\x14\n" +
	"\x12_activation_source\"\xde\x05\n" +
	"\x11EventSenderCanary\x12\"\n" +
	"\n" +
	"batch_uuid\x18\x01 \x01(\tH\x00R\tbatchUuid\x88\x01\x01\x12\x1e\n" +
	"\bevent_id\x18\x02 \x01(\x03H\x01R\aeventId\x88\x01\x01\x12\"\n" +
	"\n" +
	"batch_size\x18\x03 \x01(\x03H\x02R\tbatchSize\x88\x01\x01\x12*\n" +
	"\x0esending_system\x18\x04 \x01(\tH\x03R\rsendingSystem\x88\x01\x01\x126\n" +
	"\x15sent_as_pending_event\x18\x05 \x01(\bH\x04R\x12sentAsPendingEvent\x88\x01\x01\x122\n" +
	"\x13batch_start_time_ms\x18\x06 \x01(\x03H\x05R\x10batchStartTimeMs\x88\x01\x01\x12'\n" +
	"\revent_time_ms\x18\a \x01(\x03H\x06R\veventTimeMs\x88\x01\x01\x12)\n" +
	"\rconfiguration\x18\b \x01(\tH\aR\rconfiguration\x88\x01\x01\x122\n" +
	"\x12experiment_variant\x18\t \x01(\tH\bR\x11experimentVariant\x88\x01\x01\x12*\n" +
	"\x0emutation_count\x18\n" +
	" \x01(\x03H\tR\rmutationCount\x88\x01\x01\x12;\n" +
	"\x17expected_mutation_count\x18\v \x01(\x03H\n" +
	"R\x15expectedMutationCount\x88\x01\x01B\r\n" +
	"\v_batch_uuidB\v\n" +
	"\t_event_idB\r\n" +
	"\v_batch_sizeB\x11\n" +
	"\x0f_sending_systemB\x18\n" +
	"\x16_sent_as_pending_eventB\x16\n" +
	"\x14_batch_start_time_msB\x10\n" +
	"\x0e_event_time_msB\x10\n" +
	"\x0e_configurationB\x15\n" +
	"\x13_experiment_variantB\x11\n" +
	"\x0f_mutation_countB\x1a\n" +
	"\x18_expected_mutation_count\"\xcf\x06\n" +
	"\x16EventSenderCanaryError\x12\"\n" +
	"\n" +
	"batch_uuid\x18\x01 \x01(\tH\x00R\tbatchUuid\x88\x01\x01\x12\x1e\n" +
	"\bevent_id\x18\x02 \x01(\x03H\x01R\aeventId\x88\x01\x01\x12\"\n" +
	"\n" +
	"batch_size\x18\x03 \x01(\x03H\x02R\tbatchSize\x88\x01\x01\x12*\n" +
	"\x0esending_system\x18\x04 \x01(\tH\x03R\rsendingSystem\x88\x01\x01\x126\n" +
	"\x15sent_as_pending_event\x18\x05 \x01(\bH\x04R\x12sentAsPendingEvent\x88\x01\x01\x122\n" +
	"\x13batch_start_time_ms\x18\x06 \x01(\x03H\x05R\x10batchStartTimeMs\x88\x01\x01\x12'\n" +
	"\revent_time_ms\x18\a \x01(\x03H\x06R\veventTimeMs\x88\x01\x01\x12)\n" +
	"\rconfiguration\x18\b \x01(\tH\aR\rconfiguration\x88\x01\x01\x12&\n" +
	"\ferror_source\x18\t \x01(\tH\bR\verrorSource\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_type\x18\n" +
	" \x01(\tH\tR\terrorType\x88\x01\x01\x122\n" +
	"\x12experiment_variant\x18\v \x01(\tH\n" +
	"R\x11experimentVariant\x88\x01\x01\x12*\n" +
	"\x0emutation_count\x18\f \x01(\x03H\vR\rmutationCount\x88\x01\x01\x12;\n" +
	"\x17expected_mutation_count\x18\r \x01(\x03H\fR\x15expectedMutationCount\x88\x01\x01B\r\n" +
	"\v_batch_uuidB\v\n" +
	"\t_event_idB\r\n" +
	"\v_batch_sizeB\x11\n" +
	"\x0f_sending_systemB\x18\n" +
	"\x16_sent_as_pending_eventB\x16\n" +
	"\x14_batch_start_time_msB\x10\n" +
	"\x0e_event_time_msB\x10\n" +
	"\x0e_configurationB\x0f\n" +
	"\r_error_sourceB\r\n" +
	"\v_error_typeB\x15\n" +
	"\x13_experiment_variantB\x11\n" +
	"\x0f_mutation_countB\x1a\n" +
	"\x18_expected_mutation_count\"\xa9\x01\n" +
	" EventSenderInternalError2NonAuth\x12\x1f\n" +
	"\verror_types\x18\x01 \x03(\tR\n" +
	"errorTypes\x12,\n" +
	"\x12error_total_counts\x18\x02 \x03(\x05R\x10errorTotalCounts\x126\n" +
	"\x17error_unreported_counts\x18\x03 \x03(\x05R\x15errorUnreportedCounts\"\x9c\x04\n" +
	"\x10EventSenderStats\x12Z\n" +
	"\fstorage_size\x18\x01 \x03(\v27.spotify.event_sender.EventSenderStats.StorageSizeEntryR\vstorageSize\x12m\n" +
	"\x13sequence_number_min\x18\x02 \x03(\v2=.spotify.event_sender.EventSenderStats.SequenceNumberMinEntryR\x11sequenceNumberMin\x12p\n" +
	"\x14sequence_number_next\x18\x03 \x03(\v2>.spotify.event_sender.EventSenderStats.SequenceNumberNextEntryR\x12sequenceNumberNext\x1a>\n" +
	"\x10StorageSizeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aD\n" +
	"\x16SequenceNumberMinEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aE\n" +
	"\x17SequenceNumberNextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xc6\x06\n" +
	"\"ExternalAccessoryRemoteInteraction\x12\x1b\n" +
	"\x06action\x18\x01 \x01(\tH\x00R\x06action\x88\x01\x01\x12*\n" +
	"\x0einteraction_id\x18\x02 \x01(\tH\x01R\rinteractionId\x88\x01\x01\x12%\n" +
	"\vintegration\x18\x03 \x01(\tH\x02R\vintegration\x88\x01\x01\x12\x1f\n" +
	"\bprotocol\x18\x04 \x01(\tH\x03R\bprotocol\x88\x01\x01\x12*\n" +
	"\x0etransport_type\x18\x05 \x01(\tH\x04R\rtransportType\x88\x01\x01\x12*\n" +
	"\x0eaccessory_type\x18\x06 \x01(\tH\x05R\raccessoryType\x88\x01\x01\x12*\n" +
	"\x0eaccessory_name\x18\a \x01(\tH\x06R\raccessoryName\x88\x01\x01\x12\x19\n" +
	"\x05brand\x18\b \x01(\tH\aR\x05brand\x88\x01\x01\x12\x19\n" +
	"\x05model\x18\t \x01(\tH\bR\x05model\x88\x01\x01\x12\x1d\n" +
	"\aversion\x18\n" +
	" \x01(\tH\tR\aversion\x88\x01\x01\x12 \n" +
	"\tclient_id\x18\v \x01(\tH\n" +
	"R\bclientId\x88\x01\x01\x12 \n" +
	"\tsender_id\x18\f \x01(\tH\vR\bsenderId\x88\x01\x01\x12-\n" +
	"\x10remote_device_id\x18\r \x01(\tH\fR\x0eremoteDeviceId\x88\x01\x01\x12)\n" +
	"\x0eaudio_route_id\x18\x0e \x01(\tH\rR\faudioRouteId\x88\x01\x01\x12,\n" +
	"\x0faccessory_class\x18\x0f \x01(\tH\x0eR\x0eaccessoryClass\x88\x01\x01B\t\n" +
	"\a_actionB\x11\n" +
	"\x0f_interaction_idB\x0e\n" +
	"\f_integrationB\v\n" +
	"\t_protocolB\x11\n" +
	"\x0f_transport_typeB\x11\n" +
	"\x0f_accessory_typeB\x11\n" +
	"\x0f_accessory_nameB\b\n" +
	"\x06_brandB\b\n" +
	"\x06_modelB\n" +
	"\n" +
	"\b_versionB\f\n" +
	"\n" +
	"_client_idB\f\n" +
	"\n" +
	"_sender_idB\x13\n" +
	"\x11_remote_device_idB\x11\n" +
	"\x0f_audio_route_idB\x12\n" +
	"\x10_accessory_class\"\xef\x03\n" +
	"\x12ExternalDeviceInfo\x12\x17\n" +
	"\x04type\x18\x01 \x01(\tH\x00R\x04type\x88\x01\x01\x12\x1d\n" +
	"\asubtype\x18\x02 \x01(\tH\x01R\asubtype\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x03 \x01(\tH\x02R\x06reason\x88\x01\x01\x12\"\n" +
	"\n" +
	"taken_over\x18\x04 \x01(\bH\x03R\ttakenOver\x88\x01\x01\x12\"\n" +
	"\n" +
	"num_tracks\x18\x05 \x01(\x03H\x04R\tnumTracks\x88\x01\x01\x125\n" +
	"\x14num_purchased_tracks\x18\x06 \x01(\x03H\x05R\x12numPurchasedTracks\x88\x01\x01\x12(\n" +
	"\rnum_playlists\x18\a \x01(\x03H\x06R\fnumPlaylists\x88\x01\x01\x12\x19\n" +
	"\x05error\x18\b \x01(\tH\aR\x05error\x88\x01\x01\x12\x17\n" +
	"\x04full\x18\t \x01(\bH\bR\x04full\x88\x01\x01\x12\x1e\n" +
	"\bsync_all\x18\n" +
	" \x01(\bH\tR\asyncAll\x88\x01\x01B\a\n" +
	"\x05_typeB\n" +
	"\n" +
	"\b_subtypeB\t\n" +
	"\a_reasonB\r\n" +
	"\v_taken_overB\r\n" +
	"\v_num_tracksB\x17\n" +
	"\x15_num_purchased_tracksB\x10\n" +
	"\x0e_num_playlistsB\b\n" +
	"\x06_errorB\a\n" +
	"\x05_fullB\v\n" +
	"\t_sync_all\"\x86\x02\n" +
	"\x0fGetInfoFailures\x12 \n" +
	"\tdevice_id\x18\x01 \x01(\tH\x00R\bdeviceId\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x03H\x01R\terrorCode\x88\x01\x01\x12\x1d\n" +
	"\arequest\x18\x03 \x01(\tH\x02R\arequest\x88\x01\x01\x12(\n" +
	"\rresponse_body\x18\x04 \x01(\tH\x03R\fresponseBody\x88\x01\x01\x12\x1d\n" +
	"\acontext\x18\x05 \x01(\tH\x04R\acontext\x88\x01\x01B\f\n" +
	"\n" +
	"_device_idB\r\n" +
	"\v_error_codeB\n" +
	"\n" +
	"\b_requestB\x10\n" +
	"\x0e_response_bodyB\n" +
	"\n" +
	"\b_context\"\x8c\x03\n" +
	"\rImageDownload\x12\"\n" +
	"\n" +
	"cdn_domain\x18\x01 \x01(\tH\x00R\tcdnDomain\x88\x01\x01\x12)\n" +
	"\x0ebytes_from_cdn\x18\x02 \x01(\x03H\x01R\fbytesFromCdn\x88\x01\x01\x12/\n" +
	"\x11cdn_total_latency\x18\x03 \x01(\x03H\x02R\x0fcdnTotalLatency\x88\x01\x01\x123\n" +
	"\x13cdn_initial_latency\x18\x04 \x01(\x03H\x03R\x11cdnInitialLatency\x88\x01\x01\x12&\n" +
	"\fcdn_protocol\x18\x05 \x01(\tH\x04R\vcdnProtocol\x88\x01\x01\x12*\n" +
	"\x0enew_connection\x18\x06 \x01(\bH\x05R\rnewConnection\x88\x01\x01B\r\n" +
	"\v_cdn_domainB\x11\n" +
	"\x0f_bytes_from_cdnB\x14\n" +
	"\x12_cdn_total_latencyB\x16\n" +
	"\x14_cdn_initial_latencyB\x0f\n" +
	"\r_cdn_protocolB\x11\n" +
	"\x0f_new_connection\"9\n" +
	"\x12LocalFileSyncError\x12\x19\n" +
	"\x05error\x18\x01 \x01(\tH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\x91\x01\n" +
	"\x0fLocalFilesError\x12\"\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x03H\x00R\terrorCode\x88\x01\x01\x12\x1d\n" +
	"\acontext\x18\x02 \x01(\tH\x01R\acontext\x88\x01\x01\x12\x17\n" +
	"\x04info\x18\x03 \x01(\tH\x02R\x04info\x88\x01\x01B\r\n" +
	"\v_error_codeB\n" +
	"\n" +
	"\b_contextB\a\n" +
	"\x05_info\"\xe1\x02\n" +
	"\x10LocalFilesImport\x12\x1b\n" +
	"\x06tracks\x18\x01 \x01(\x03H\x00R\x06tracks\x88\x01\x01\x12.\n" +
	"\x10duplicate_tracks\x18\x02 \x01(\x03H\x01R\x0fduplicateTracks\x88\x01\x01\x12(\n" +
	"\rfailed_tracks\x18\x03 \x01(\x03H\x02R\ffailedTracks\x88\x01\x01\x12*\n" +
	"\x0ematched_tracks\x18\x04 \x01(\x03H\x03R\rmatchedTracks\x88\x01\x01\x12\x1b\n" +
	"\x06source\x18\x05 \x01(\tH\x04R\x06source\x88\x01\x01\x12*\n" +
	"\x0einvalid_tracks\x18\x06 \x01(\x03H\x05R\rinvalidTracks\x88\x01\x01B\t\n" +
	"\a_tracksB\x13\n" +
	"\x11_duplicate_tracksB\x10\n" +
	"\x0e_failed_tracksB\x11\n" +
	"\x0f_matched_tracksB\t\n" +
	"\a_sourceB\x11\n" +
	"\x0f_invalid_tracks\"\xbf\x05\n" +
	"\x10LocalFilesReport\x12&\n" +
	"\ftotal_tracks\x18\x01 \x01(\x03H\x00R\vtotalTracks\x88\x01\x01\x12\"\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x03H\x01R\ttotalSize\x88\x01\x01\x12&\n" +
	"\fowned_tracks\x18\x03 \x01(\x03H\x02R\vownedTracks\x88\x01\x01\x12\"\n" +
	"\n" +
	"owned_size\x18\x04 \x01(\x03H\x03R\townedSize\x88\x01\x01\x12-\n" +
	"\x10tracks_not_found\x18\x05 \x01(\x03H\x04R\x0etracksNotFound\x88\x01\x01\x12/\n" +
	"\x11tracks_bad_format\x18\x06 \x01(\x03H\x05R\x0ftracksBadFormat\x88\x01\x01\x125\n" +
	"\x14tracks_drm_protected\x18\a \x01(\x03H\x06R\x12tracksDrmProtected\x88\x01\x01\x127\n" +
	"\x15tracks_unknown_pruned\x18\b \x01(\x03H\aR\x13tracksUnknownPruned\x88\x01\x01\x12C\n" +
	"\x1btracks_reallocated_repaired\x18\t \x01(\x03H\bR\x19tracksReallocatedRepaired\x88\x01\x01\x12,\n" +
	"\x0fenabled_sources\x18\n" +
	" \x01(\x03H\tR\x0eenabledSources\x88\x01\x01B\x0f\n" +
	"\r_total_tracksB\r\n" +
	"\v_total_sizeB\x0f\n" +
	"\r_owned_tracksB\r\n" +
	"\v_owned_sizeB\x13\n" +
	"\x11_tracks_not_foundB\x14\n" +
	"\x12_tracks_bad_formatB\x17\n" +
	"\x15_tracks_drm_protectedB\x18\n" +
	"\x16_tracks_unknown_prunedB\x1e\n" +
	"\x1c_tracks_reallocated_repairedB\x12\n" +
	"\x10_enabled_sources\"X\n" +
	"\x15LocalFilesSourceEvent\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x19\n" +
	"\x05event\x18\x02 \x01(\tH\x01R\x05event\x88\x01\x01B\x05\n" +
	"\x03_idB\b\n" +
	"\x06_event\"\\\n" +
	"\x16LocalFilesSourceReport\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x1b\n" +
	"\x06tracks\x18\x02 \x01(\x03H\x01R\x06tracks\x88\x01\x01B\x05\n" +
	"\x03_idB\t\n" +
	"\a_tracks\"\xd1\x02\n" +
	"\x11Login5TaskNonAuth\x12.\n" +
	"\x10credentials_type\x18\x01 \x01(\tH\x00R\x0fcredentialsType\x88\x01\x01\x12.\n" +
	"\x10protocol_version\x18\x02 \x01(\tH\x01R\x0fprotocolVersion\x88\x01\x01\x12#\n" +
	"\rhttp_response\x18\x03 \x03(\x05R\fhttpResponse\x12'\n" +
	"\x0flogin5_response\x18\x04 \x03(\tR\x0elogin5Response\x12+\n" +
	"\x11response_duration\x18\x05 \x03(\x03R\x10responseDuration\x12&\n" +
	"\fclient_error\x18\x06 \x01(\tH\x02R\vclientError\x88\x01\x01B\x13\n" +
	"\x11_credentials_typeB\x13\n" +
	"\x11_protocol_versionB\x0f\n" +
	"\r_client_error\"\xe3\x02\n" +
	"\x11MdnsLoginFailures\x12 \n" +
	"\tdevice_id\x18\x01 \x01(\tH\x00R\bdeviceId\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x03H\x01R\terrorCode\x88\x01\x01\x12(\n" +
	"\rresponse_body\x18\x03 \x01(\tH\x02R\fresponseBody\x88\x01\x01\x12\x1d\n" +
	"\arequest\x18\x04 \x01(\tH\x03R\arequest\x88\x01\x01\x12<\n" +
	"\x18esdk_internal_error_code\x18\x05 \x01(\x03H\x04R\x15esdkInternalErrorCode\x88\x01\x01\x12\x1d\n" +
	"\acontext\x18\x06 \x01(\tH\x05R\acontext\x88\x01\x01B\f\n" +
	"\n" +
	"_device_idB\r\n" +
	"\v_error_codeB\x10\n" +
	"\x0e_response_bodyB\n" +
	"\n" +
	"\b_requestB\x1b\n" +
	"\x19_esdk_internal_error_codeB\n" +
	"\n" +
	"\b_context\"\x97\x01\n" +
	"\x13Offline2ClientError\x12\x19\n" +
	"\x05error\x18\x01 \x01(\tH\x00R\x05error\x88\x01\x01\x12 \n" +
	"\tdevice_id\x18\x02 \x01(\tH\x01R\bdeviceId\x88\x01\x01\x12\x1e\n" +
	"\bcache_id\x18\x03 \x01(\tH\x02R\acacheId\x88\x01\x01B\b\n" +
	"\x06_errorB\f\n" +
	"\n" +
	"_device_idB\v\n" +
	"\t_cache_id\"\x97\x01\n" +
	"\x13Offline2ClientEvent\x12\x19\n" +
	"\x05event\x18\x01 \x01(\tH\x00R\x05event\x88\x01\x01\x12 \n" +
	"\tdevice_id\x18\x02 \x01(\tH\x01R\bdeviceId\x88\x01\x01\x12\x1e\n" +
	"\bcache_id\x18\x03 \x01(\tH\x02R\acacheId\x88\x01\x01B\b\n" +
	"\x06_eventB\f\n" +
	"\n" +
	"_device_idB\v\n" +
	"\t_cache_id\"\xbe\x01\n" +
	"\fOfflineError\x12\"\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x03H\x00R\terrorCode\x88\x01\x01\x12\x19\n" +
	"\x05track\x18\x02 \x01(\tH\x01R\x05track\x88\x01\x01\x12\x1e\n" +
	"\bcache_id\x18\x03 \x01(\tH\x02R\acacheId\x88\x01\x01\x12\x1d\n" +
	"\adetails\x18\x04 \x01(\tH\x03R\adetails\x88\x01\x01B\r\n" +
	"\v_error_codeB\b\n" +
	"\x06_trackB\v\n" +
	"\t_cache_idB\n" +
	"\n" +
	"\b_details\"\x82\x01\n" +
	"\fOfflineEvent\x12\x19\n" +
	"\x05event\x18\x01 \x01(\tH\x00R\x05event\x88\x01\x01\x12\x17\n" +
	"\x04data\x18\x02 \x01(\tH\x01R\x04data\x88\x01\x01\x12\x1e\n" +
	"\bcache_id\x18\x03 \x01(\tH\x02R\acacheId\x88\x01\x01B\b\n" +
	"\x06_eventB\a\n" +
	"\x05_dataB\v\n" +
	"\t_cache_id\"\xc0\x03\n" +
	"\x1aOfflinePlayableCacheReport\x12\"\n" +
	"\n" +
	"num_tracks\x18\x01 \x01(\x03H\x00R\tnumTracks\x88\x01\x01\x12/\n" +
	"\x11num_missing_files\x18\x02 \x01(\x03H\x01R\x0fnumMissingFiles\x88\x01\x01\x12-\n" +
	"\x10num_missing_keys\x18\x03 \x01(\x03H\x02R\x0enumMissingKeys\x88\x01\x01\x125\n" +
	"\x14num_missing_metadata\x18\x04 \x01(\x03H\x03R\x12numMissingMetadata\x88\x01\x01\x12$\n" +
	"\vnum_expired\x18\x05 \x01(\x03H\x04R\n" +
	"numExpired\x88\x01\x01\x12?\n" +
	"\x1anum_missing_in_audio_index\x18\x06 \x01(\x03H\x05R\x16numMissingInAudioIndex\x88\x01\x01B\r\n" +
	"\v_num_tracksB\x14\n" +
	"\x12_num_missing_filesB\x13\n" +
	"\x11_num_missing_keysB\x17\n" +
	"\x15_num_missing_metadataB\x0e\n" +
	"\f_num_expiredB\x1d\n" +
	"\x1b_num_missing_in_audio_index\"\xb3\x0e\n" +
	"\rOfflineReport\x12-\n" +
	"\x10total_num_tracks\x18\x01 \x01(\x03H\x00R\x0etotalNumTracks\x88\x01\x01\x127\n" +
	"\x15num_downloaded_tracks\x18\x02 \x01(\x03H\x01R\x13numDownloadedTracks\x88\x01\x01\x12F\n" +
	"\x1dnum_downloaded_tracks_keyless\x18\x03 \x01(\x03H\x02R\x1anumDownloadedTracksKeyless\x88\x01\x01\x12+\n" +
	"\x0ftotal_num_links\x18\x04 \x01(\x03H\x03R\rtotalNumLinks\x88\x01\x01\x12:\n" +
	"\x17total_num_links_keyless\x18\x05 \x01(\x03H\x04R\x14totalNumLinksKeyless\x88\x01\x01\x12n\n" +
	"\x15context_num_links_map\x18\x06 \x03(\v2;.spotify.event_sender.OfflineReport.ContextNumLinksMapEntryR\x12contextNumLinksMap\x12t\n" +
	"\x17linktype_num_tracks_map\x18\a \x03(\v2=.spotify.event_sender.OfflineReport.LinktypeNumTracksMapEntryR\x14linktypeNumTracksMap\x12$\n" +
	"\vtrack_limit\x18\b \x01(\x03H\x05R\n" +
	"trackLimit\x88\x01\x01\x12\x1b\n" +
	"\x06expiry\x18\t \x01(\x03H\x06R\x06expiry\x88\x01\x01\x12(\n" +
	"\rchange_reason\x18\n" +
	" \x01(\tH\aR\fchangeReason\x88\x01\x01\x12&\n" +
	"\foffline_keys\x18\v \x01(\x03H\bR\vofflineKeys\x88\x01\x01\x12$\n" +
	"\vcached_keys\x18\f \x01(\x03H\tR\n" +
	"cachedKeys\x88\x01\x01\x121\n" +
	"\x12total_num_episodes\x18\r \x01(\x03H\n" +
	"R\x10totalNumEpisodes\x88\x01\x01\x12;\n" +
	"\x17num_downloaded_episodes\x18\x0e \x01(\x03H\vR\x15numDownloadedEpisodes\x88\x01\x01\x12(\n" +
	"\repisode_limit\x18\x0f \x01(\x03H\fR\fepisodeLimit\x88\x01\x01\x12*\n" +
	"\x0eepisode_expiry\x18\x10 \x01(\x03H\rR\repisodeExpiry\x88\x01\x01\x121\n" +
	"\x12abp_chapter_expiry\x18\x11 \x01(\x03H\x0eR\x10abpChapterExpiry\x88\x01\x01\x12g\n" +
	"\x12schedule_stats_map\x18\x12 \x03(\v29.spotify.event_sender.OfflineReport.ScheduleStatsMapEntryR\x10scheduleStatsMap\x12a\n" +
	"\x10update_stats_map\x18\x13 \x03(\v27.spotify.event_sender.OfflineReport.UpdateStatsMapEntryR\x0eupdateStatsMap\x124\n" +
	"\x14num_update_all_lists\x18\x14 \x01(\x03H\x0fR\x11numUpdateAllLists\x88\x01\x01\x1aE\n" +
	"\x17ContextNumLinksMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aG\n" +
	"\x19LinktypeNumTracksMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aC\n" +
	"\x15ScheduleStatsMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aA\n" +
	"\x13UpdateStatsMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01B\x13\n" +
	"\x11_total_num_tracksB\x18\n" +
	"\x16_num_downloaded_tracksB \n" +
	"\x1e_num_downloaded_tracks_keylessB\x12\n" +
	"\x10_total_num_linksB\x1a\n" +
	"\x18_total_num_links_keylessB\x0e\n" +
	"\f_track_limitB\t\n" +
	"\a_expiryB\x10\n" +
	"\x0e_change_reasonB\x0f\n" +
	"\r_offline_keysB\x0e\n" +
	"\f_cached_keysB\x15\n" +
	"\x13_total_num_episodesB\x1a\n" +
	"\x18_num_downloaded_episodesB\x10\n" +
	"\x0e_episode_limitB\x11\n" +
	"\x0f_episode_expiryB\x15\n" +
	"\x13_abp_chapter_expiryB\x17\n" +
	"\x15_num_update_all_lists\"\xfe\x01\n" +
	" PendingEventsDroppedEventNonAuth\x12!\n" +
	"\toperation\x18\x01 \x01(\tH\x00R\toperation\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_type\x18\x02 \x01(\tH\x01R\terrorType\x88\x01\x01\x12.\n" +
	"\x10underlying_error\x18\x03 \x01(\tH\x02R\x0funderlyingError\x88\x01\x01\x12\"\n" +
	"\n" +
	"event_type\x18\x04 \x01(\tH\x03R\teventType\x88\x01\x01B\f\n" +
	"\n" +
	"_operationB\r\n" +
	"\v_error_typeB\x13\n" +
	"\x11_underlying_errorB\r\n" +
	"\v_event_type\"\xc6\x02\n" +
	"!PendingEventsInternalErrorNonAuth\x12!\n" +
	"\toperation\x18\x01 \x01(\tH\x00R\toperation\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_type\x18\x02 \x01(\tH\x01R\terrorType\x88\x01\x01\x12.\n" +
	"\x10underlying_error\x18\x03 \x01(\tH\x02R\x0funderlyingError\x88\x01\x01\x12\"\n" +
	"\n" +
	"event_type\x18\x04 \x01(\tH\x03R\teventType\x88\x01\x01\x12/\n" +
	"\x11event_sequence_no\x18\x05 \x01(\x03H\x04R\x0feventSequenceNo\x88\x01\x01B\f\n" +
	"\n" +
	"_operationB\r\n" +
	"\v_error_typeB\x13\n" +
	"\x11_underlying_errorB\r\n" +
	"\v_event_typeB\x14\n" +
	"\x12_event_sequence_no\"\xf5\x01\n" +
	"\x19PendingEventsStatsNonAuth\x12\x1f\n" +
	"\vevent_names\x18\x01 \x03(\tR\n" +
	"eventNames\x120\n" +
	"\x14sequence_number_mins\x18\x02 \x03(\x03R\x12sequenceNumberMins\x122\n" +
	"\x15sequence_number_nexts\x18\x03 \x03(\x03R\x13sequenceNumberNexts\x12#\n" +
	"\rstorage_sizes\x18\x04 \x03(\x03R\fstorageSizes\x12,\n" +
	"\x12num_dropped_events\x18\x05 \x03(\x03R\x10numDroppedEvents\"\x88\x03\n" +
	"\x1dPickAndShuffleCapStateRestore\x12\x1c\n" +
	"\acap_day\x18\x01 \x01(\x03H\x00R\x06capDay\x88\x01\x01\x12 \n" +
	"\tcap_month\x18\x02 \x01(\x03H\x01R\bcapMonth\x88\x01\x01\x12&\n" +
	"\fstream_count\x18\x03 \x01(\x03H\x02R\vstreamCount\x88\x01\x01\x12\x1e\n" +
	"\btime_cap\x18\x04 \x01(\x03H\x03R\atimeCap\x88\x01\x01\x12=\n" +
	"\x18cap_configuration_origin\x18\x05 \x01(\tH\x04R\x16capConfigurationOrigin\x88\x01\x01\x123\n" +
	"\x13dynamic_cap_enabled\x18\x06 \x01(\bH\x05R\x11dynamicCapEnabled\x88\x01\x01B\n" +
	"\n" +
	"\b_cap_dayB\f\n" +
	"\n" +
	"_cap_monthB\x0f\n" +
	"\r_stream_countB\v\n" +
	"\t_time_capB\x1b\n" +
	"\x19_cap_configuration_originB\x16\n" +
	"\x14_dynamic_cap_enabled\"\x85\x03\n" +
	"\x1aPickAndShuffleCapStateSave\x12\x1c\n" +
	"\acap_day\x18\x01 \x01(\x03H\x00R\x06capDay\x88\x01\x01\x12 \n" +
	"\tcap_month\x18\x02 \x01(\x03H\x01R\bcapMonth\x88\x01\x01\x12&\n" +
	"\fstream_count\x18\x03 \x01(\x03H\x02R\vstreamCount\x88\x01\x01\x12\x1e\n" +
	"\btime_cap\x18\x04 \x01(\x03H\x03R\atimeCap\x88\x01\x01\x12=\n" +
	"\x18cap_configuration_origin\x18\x05 \x01(\tH\x04R\x16capConfigurationOrigin\x88\x01\x01\x123\n" +
	"\x13dynamic_cap_enabled\x18\x06 \x01(\bH\x05R\x11dynamicCapEnabled\x88\x01\x01B\n" +
	"\n" +
	"\b_cap_dayB\f\n" +
	"\n" +
	"_cap_monthB\x0f\n" +
	"\r_stream_countB\v\n" +
	"\t_time_capB\x1b\n" +
	"\x19_cap_configuration_originB\x16\n" +
	"\x14_dynamic_cap_enabled\"\x81\x02\n" +
	"\x12PlayedStateApplied\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\tH\x00R\n" +
	"playbackId\x88\x01\x01\x12$\n" +
	"\vcontent_uri\x18\x02 \x01(\tH\x01R\n" +
	"contentUri\x88\x01\x01\x12.\n" +
	"\x10client_timestamp\x18\x03 \x01(\x03H\x02R\x0fclientTimestamp\x88\x01\x01\x12(\n" +
	"\rplay_position\x18\x04 \x01(\x05H\x03R\fplayPosition\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\x0e\n" +
	"\f_content_uriB\x13\n" +
	"\x11_client_timestampB\x10\n" +
	"\x0e_play_position\"\xb4\x01\n" +
	"\x16PlayedStateSyncFailure\x12:\n" +
	"\x17number_of_played_states\x18\x01 \x01(\x05H\x00R\x14numberOfPlayedStates\x88\x01\x01\x12-\n" +
	"\x10http_status_code\x18\x02 \x01(\x05H\x01R\x0ehttpStatusCode\x88\x01\x01B\x1a\n" +
	"\x18_number_of_played_statesB\x13\n" +
	"\x11_http_status_code\"\xdd\x01\n" +
	"\x14PlayedStatePersisted\x12\x1e\n" +
	"\bitem_uri\x18\x01 \x01(\tH\x00R\aitemUri\x88\x01\x01\x12(\n" +
	"\rplay_position\x18\x02 \x01(\x05H\x01R\fplayPosition\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x03 \x01(\tH\x02R\x06reason\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x04 \x01(\tH\x03R\n" +
	"playbackId\x88\x01\x01B\v\n" +
	"\t_item_uriB\x10\n" +
	"\x0e_play_positionB\t\n" +
	"\a_reasonB\x0e\n" +
	"\f_playback_id\"\x80\x02\n" +
	"\x12PlayerStateRestore\x12\x19\n" +
	"\x05error\x18\x01 \x01(\tH\x00R\x05error\x88\x01\x01\x12\x17\n" +
	"\x04size\x18\x02 \x01(\x03H\x01R\x04size\x88\x01\x01\x12$\n" +
	"\vcontext_uri\x18\x03 \x01(\tH\x02R\n" +
	"contextUri\x88\x01\x01\x12\x19\n" +
	"\x05state\x18\x04 \x01(\tH\x03R\x05state\x88\x01\x01\x121\n" +
	"\x12state_restore_mode\x18\x05 \x01(\tH\x04R\x10stateRestoreMode\x88\x01\x01B\b\n" +
	"\x06_errorB\a\n" +
	"\x05_sizeB\x0e\n" +
	"\f_context_uriB\b\n" +
	"\x06_stateB\x15\n" +
	"\x13_state_restore_mode\"\xb3\x02\n" +
	"\x11PlaylistSyncEvent\x12$\n" +
	"\vplaylist_id\x18\x01 \x01(\tH\x00R\n" +
	"playlistId\x88\x01\x01\x12$\n" +
	"\vis_playlist\x18\x02 \x01(\bH\x01R\n" +
	"isPlaylist\x88\x01\x01\x12&\n" +
	"\ftimestamp_ms\x18\x03 \x01(\x03H\x02R\vtimestampMs\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_code\x18\x04 \x01(\x05H\x03R\terrorCode\x88\x01\x01\x120\n" +
	"\x11event_description\x18\x05 \x01(\tH\x04R\x10eventDescription\x88\x01\x01B\x0e\n" +
	"\f_playlist_idB\x0e\n" +
	"\f_is_playlistB\x0f\n" +
	"\r_timestamp_msB\r\n" +
	"\v_error_codeB\x14\n" +
	"\x12_event_description\"\x85\x02\n" +
	"\x18PodcastAdSegmentReceived\x12$\n" +
	"\vepisode_uri\x18\x01 \x01(\tH\x00R\n" +
	"episodeUri\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x02 \x01(\tH\x01R\n" +
	"playbackId\x88\x01\x01\x12\x19\n" +
	"\x05slots\x18\x03 \x01(\tH\x02R\x05slots\x88\x01\x01\x12\x1e\n" +
	"\bis_audio\x18\x04 \x01(\bH\x03R\aisAudio\x88\x01\x01\x12\x1e\n" +
	"\basset_id\x18\x05 \x01(\tH\x04R\aassetId\x88\x01\x01B\x0e\n" +
	"\f_episode_uriB\x0e\n" +
	"\f_playback_idB\b\n" +
	"\x06_slotsB\v\n" +
	"\t_is_audioB\v\n" +
	"\t_asset_id\"\xf8\x02\n" +
	"\x1aPodcastAdSegmentDifference\x12$\n" +
	"\vepisode_uri\x18\x01 \x01(\tH\x00R\n" +
	"episodeUri\x88\x01\x01\x12$\n" +
	"\vlhs_segment\x18\x02 \x01(\tH\x01R\n" +
	"lhsSegment\x88\x01\x01\x12 \n" +
	"\tlhs_start\x18\x03 \x01(\x03H\x02R\blhsStart\x88\x01\x01\x12\x1e\n" +
	"\blhs_stop\x18\x04 \x01(\x03H\x03R\alhsStop\x88\x01\x01\x12$\n" +
	"\vrhs_segment\x18\x05 \x01(\tH\x04R\n" +
	"rhsSegment\x88\x01\x01\x12 \n" +
	"\trhs_start\x18\x06 \x01(\x03H\x05R\brhsStart\x88\x01\x01\x12\x1e\n" +
	"\brhs_stop\x18\a \x01(\x03H\x06R\arhsStop\x88\x01\x01B\x0e\n" +
	"\f_episode_uriB\x0e\n" +
	"\f_lhs_segmentB\f\n" +
	"\n" +
	"_lhs_startB\v\n" +
	"\t_lhs_stopB\x0e\n" +
	"\f_rhs_segmentB\f\n" +
	"\n" +
	"_rhs_startB\v\n" +
	"\t_rhs_stop\"\xbc\x04\n" +
	"\x13PodcastSAILoopEvent\x12\x19\n" +
	"\x05event\x18\x01 \x01(\tH\x00R\x05event\x88\x01\x01\x12/\n" +
	"\x11current_track_uri\x18\x02 \x01(\tH\x01R\x0fcurrentTrackUri\x88\x01\x01\x12-\n" +
	"\x10episode_with_ads\x18\x03 \x01(\tH\x02R\x0eepisodeWithAds\x88\x01\x01\x12.\n" +
	"\x10selected_segment\x18\x04 \x01(\tH\x03R\x0fselectedSegment\x88\x01\x01\x12\x19\n" +
	"\x05start\x18\x05 \x01(\x05H\x04R\x05start\x88\x01\x01\x12\x17\n" +
	"\x04stop\x18\x06 \x01(\x05H\x05R\x04stop\x88\x01\x01\x12\x18\n" +
	"\aeffects\x18\a \x03(\tR\aeffects\x12$\n" +
	"\vplayback_id\x18\b \x01(\tH\x06R\n" +
	"playbackId\x88\x01\x01\x12)\n" +
	"\x0eapp_startup_id\x18\t \x01(\tH\aR\fappStartupId\x88\x01\x01\x12\"\n" +
	"\n" +
	"request_id\x18\n" +
	" \x01(\tH\bR\trequestId\x88\x01\x01\x12\x1c\n" +
	"\aloop_id\x18\v \x01(\tH\tR\x06loopId\x88\x01\x01B\b\n" +
	"\x06_eventB\x14\n" +
	"\x12_current_track_uriB\x13\n" +
	"\x11_episode_with_adsB\x13\n" +
	"\x11_selected_segmentB\b\n" +
	"\x06_startB\a\n" +
	"\x05_stopB\x0e\n" +
	"\f_playback_idB\x11\n" +
	"\x0f_app_startup_idB\r\n" +
	"\v_request_idB\n" +
	"\n" +
	"\b_loop_id\"t\n" +
	"\rPrefetchError\x12\x1f\n" +
	"\bstrategy\x18\x01 \x01(\x03H\x00R\bstrategy\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x02 \x01(\tH\x01R\vdescription\x88\x01\x01B\v\n" +
	"\t_strategyB\x0e\n" +
	"\f_description\"\x81\x02\n" +
	"\x13PubSubCountPerIdent\x12&\n" +
	"\fident_filter\x18\x01 \x01(\tH\x00R\videntFilter\x88\x01\x01\x12:\n" +
	"\x17no_of_messages_received\x18\x02 \x01(\x05H\x01R\x14noOfMessagesReceived\x88\x01\x01\x12<\n" +
	"\x18no_of_failed_conversions\x18\x03 \x01(\x05H\x02R\x15noOfFailedConversions\x88\x01\x01B\x0f\n" +
	"\r_ident_filterB\x1a\n" +
	"\x18_no_of_messages_receivedB\x1b\n" +
	"\x19_no_of_failed_conversions\"Y\n" +
	"\x13ReachabilityChanged\x12\x17\n" +
	"\x04type\x18\x01 \x01(\tH\x00R\x04type\x88\x01\x01\x12\x17\n" +
	"\x04info\x18\x02 \x01(\tH\x01R\x04info\x88\x01\x01B\a\n" +
	"\x05_typeB\a\n" +
	"\x05_info\"\x8b\x01\n" +
	"\x1aRejectedClientEventNonAuth\x12(\n" +
	"\rreject_reason\x18\x01 \x01(\tH\x00R\frejectReason\x88\x01\x01\x12\"\n" +
	"\n" +
	"event_name\x18\x02 \x01(\tH\x01R\teventName\x88\x01\x01B\x10\n" +
	"\x0e_reject_reasonB\r\n" +
	"\v_event_name\"\xbd\x02\n" +
	"\x0eRemainingSkips\x12*\n" +
	"\x0einteraction_id\x18\x01 \x01(\tH\x00R\rinteractionId\x88\x01\x01\x12B\n" +
	"\x1bremaining_skips_before_skip\x18\x02 \x01(\x05H\x01R\x18remainingSkipsBeforeSkip\x88\x01\x01\x12@\n" +
	"\x1aremaining_skips_after_skip\x18\x03 \x01(\x05H\x02R\x17remainingSkipsAfterSkip\x88\x01\x01\x12'\n" +
	"\x0finteraction_ids\x18\x04 \x03(\tR\x0einteractionIdsB\x11\n" +
	"\x0f_interaction_idB\x1e\n" +
	"\x1c_remaining_skips_before_skipB\x1d\n" +
	"\x1b_remaining_skips_after_skip\"\xb3\x03\n" +
	"\x11RequestAccounting\x12\x1d\n" +
	"\arequest\x18\x01 \x01(\tH\x00R\arequest\x88\x01\x01\x12#\n" +
	"\n" +
	"downloaded\x18\x02 \x01(\x03H\x01R\n" +
	"downloaded\x88\x01\x01\x12\x1f\n" +
	"\buploaded\x18\x03 \x01(\x03H\x02R\buploaded\x88\x01\x01\x12&\n" +
	"\fnum_requests\x18\x04 \x01(\x03H\x03R\vnumRequests\x88\x01\x01\x12#\n" +
	"\n" +
	"connection\x18\x05 \x01(\tH\x04R\n" +
	"connection\x88\x01\x01\x120\n" +
	"\x11source_identifier\x18\x06 \x01(\tH\x05R\x10sourceIdentifier\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\a \x01(\tH\x06R\x06reason\x88\x01\x01\x12$\n" +
	"\vduration_ms\x18\b \x01(\x03H\aR\n" +
	"durationMs\x88\x01\x01B\n" +
	"\n" +
	"\b_requestB\r\n" +
	"\v_downloadedB\v\n" +
	"\t_uploadedB\x0f\n" +
	"\r_num_requestsB\r\n" +
	"\v_connectionB\x14\n" +
	"\x12_source_identifierB\t\n" +
	"\a_reasonB\x0e\n" +
	"\f_duration_ms\"\xcd\x05\n" +
	"\vRequestTime\x12\x17\n" +
	"\x04type\x18\x01 \x01(\tH\x00R\x04type\x88\x01\x01\x12\"\n" +
	"\n" +
	"first_byte\x18\x02 \x01(\x03H\x01R\tfirstByte\x88\x01\x01\x12 \n" +
	"\tlast_byte\x18\x03 \x01(\x03H\x02R\blastByte\x88\x01\x01\x12\x17\n" +
	"\x04size\x18\x04 \x01(\x03H\x03R\x04size\x88\x01\x01\x12 \n" +
	"\tsize_sent\x18\x05 \x01(\x03H\x04R\bsizeSent\x88\x01\x01\x12\x19\n" +
	"\x05error\x18\x06 \x01(\bH\x05R\x05error\x88\x01\x01\x12\x15\n" +
	"\x03url\x18\a \x01(\tH\x06R\x03url\x88\x01\x01\x12\x17\n" +
	"\x04verb\x18\b \x01(\tH\aR\x04verb\x88\x01\x01\x12/\n" +
	"\x11payload_size_sent\x18\t \x01(\x03H\bR\x0fpayloadSizeSent\x88\x01\x01\x12.\n" +
	"\x10connection_reuse\x18\n" +
	" \x01(\x05H\tR\x0fconnectionReuse\x88\x01\x01\x126\n" +
	"\x14sampling_probability\x18\v \x01(\x01H\n" +
	"R\x13samplingProbability\x88\x01\x01\x12\x1b\n" +
	"\x06cached\x18\f \x01(\bH\vR\x06cached\x88\x01\x01\x12(\n" +
	"\rredirect_time\x18\r \x01(\x03H\fR\fredirectTime\x88\x01\x01\x12,\n" +
	"\x0fconnection_type\x18\x0e \x01(\tH\rR\x0econnectionType\x88\x01\x01B\a\n" +
	"\x05_typeB\r\n" +
	"\v_first_byteB\f\n" +
	"\n" +
	"_last_byteB\a\n" +
	"\x05_sizeB\f\n" +
	"\n" +
	"_size_sentB\b\n" +
	"\x06_errorB\x06\n" +
	"\x04_urlB\a\n" +
	"\x05_verbB\x14\n" +
	"\x12_payload_size_sentB\x13\n" +
	"\x11_connection_reuseB\x17\n" +
	"\x15_sampling_probabilityB\t\n" +
	"\a_cachedB\x10\n" +
	"\x0e_redirect_timeB\x12\n" +
	"\x10_connection_type\"\xf3\b\n" +
	"\x0fTimeMeasurement\x12\x1f\n" +
	"\bcategory\x18\x01 \x01(\tH\x00R\bcategory\x88\x01\x01\x12U\n" +
	"\n" +
	"dimensions\x18\x02 \x03(\v25.spotify.event_sender.TimeMeasurement.DimensionsEntryR\n" +
	"dimensions\x12e\n" +
	"\x10point_timestamps\x18\x03 \x03(\v2:.spotify.event_sender.TimeMeasurement.PointTimestampsEntryR\x0fpointTimestamps\x12b\n" +
	"\x0fpoint_durations\x18\x04 \x03(\v29.spotify.event_sender.TimeMeasurement.PointDurationsEntryR\x0epointDurations\x12f\n" +
	"\x11point_feature_ids\x18\x05 \x03(\v2:.spotify.event_sender.TimeMeasurement.PointFeatureIdsEntryR\x0fpointFeatureIds\x12\"\n" +
	"\n" +
	"feature_id\x18\x06 \x01(\tH\x01R\tfeatureId\x88\x01\x01\x12*\n" +
	"\x0emeasurement_id\x18\a \x01(\tH\x02R\rmeasurementId\x88\x01\x01\x127\n" +
	"\x15parent_measurement_id\x18\b \x01(\tH\x03R\x13parentMeasurementId\x88\x01\x01\x123\n" +
	"\x13parent_epoch_offset\x18\t \x01(\x03H\x04R\x11parentEpochOffset\x88\x01\x01\x12O\n" +
	"\bmetadata\x18\n" +
	" \x03(\v23.spotify.event_sender.TimeMeasurement.MetadataEntryR\bmetadata\x1a=\n" +
	"\x0fDimensionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14PointTimestampsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aA\n" +
	"\x13PointDurationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aB\n" +
	"\x14PointFeatureIdsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\v\n" +
	"\t_categoryB\r\n" +
	"\v_feature_idB\x11\n" +
	"\x0f_measurement_idB\x18\n" +
	"\x16_parent_measurement_idB\x16\n" +
	"\x14_parent_epoch_offset\"\xd9\x02\n" +
	"\x12AudioFileSelection\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x12(\n" +
	"\rstrategy_name\x18\x02 \x01(\tH\x01R\fstrategyName\x88\x01\x01\x12\x1d\n" +
	"\abitrate\x18\x03 \x01(\x03H\x02R\abitrate\x88\x01\x01\x12\"\n" +
	"\n" +
	"predict_id\x18\x04 \x01(\fH\x03R\tpredictId\x88\x01\x01\x12$\n" +
	"\vfile_origin\x18\x05 \x01(\tH\x04R\n" +
	"fileOrigin\x88\x01\x01\x12*\n" +
	"\x0etarget_bitrate\x18\x06 \x01(\x05H\x05R\rtargetBitrate\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\x10\n" +
	"\x0e_strategy_nameB\n" +
	"\n" +
	"\b_bitrateB\r\n" +
	"\v_predict_idB\x0e\n" +
	"\f_file_originB\x11\n" +
	"\x0f_target_bitrate\"\xa9\x04\n" +
	"\x0eAudioRateLimit\x12$\n" +
	"\vdriver_name\x18\x01 \x01(\tH\x00R\n" +
	"driverName\x88\x01\x01\x121\n" +
	"\x12output_device_name\x18\x02 \x01(\tH\x01R\x10outputDeviceName\x88\x01\x01\x129\n" +
	"\x16output_device_category\x18\x03 \x01(\tH\x02R\x14outputDeviceCategory\x88\x01\x01\x12\x1e\n" +
	"\bmax_size\x18\x04 \x01(\x03H\x03R\amaxSize\x88\x01\x01\x12;\n" +
	"\x17refill_per_milliseconds\x18\x05 \x01(\x03H\x04R\x15refillPerMilliseconds\x88\x01\x01\x12.\n" +
	"\x10frames_requested\x18\x06 \x01(\x03H\x05R\x0fframesRequested\x88\x01\x01\x12,\n" +
	"\x0fframes_acquired\x18\a \x01(\x03H\x06R\x0eframesAcquired\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\b \x01(\fH\aR\n" +
	"playbackId\x88\x01\x01B\x0e\n" +
	"\f_driver_nameB\x15\n" +
	"\x13_output_device_nameB\x19\n" +
	"\x17_output_device_categoryB\v\n" +
	"\t_max_sizeB\x1a\n" +
	"\x18_refill_per_millisecondsB\x13\n" +
	"\x11_frames_requestedB\x12\n" +
	"\x10_frames_acquiredB\x0e\n" +
	"\f_playback_id\"\x92\x04\n" +
	"\x11AudioSessionEvent\x12\x19\n" +
	"\x05event\x18\x01 \x01(\tH\x00R\x05event\x88\x01\x01\x12\x1d\n" +
	"\acontext\x18\x02 \x01(\tH\x01R\acontext\x88\x01\x01\x12 \n" +
	"\tjson_data\x18\x03 \x01(\tH\x02R\bjsonData\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x04 \x01(\fH\x03R\n" +
	"playbackId\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x05 \x01(\tH\x04R\x06reason\x88\x01\x01\x122\n" +
	"\x12feature_identifier\x18\x06 \x01(\tH\x05R\x11featureIdentifier\x88\x01\x01\x12(\n" +
	"\rseek_position\x18\a \x01(\x05H\x06R\fseekPosition\x88\x01\x01\x12\x1b\n" +
	"\x06paused\x18\b \x01(\bH\aR\x06paused\x88\x01\x01\x12\x19\n" +
	"\x05speed\x18\t \x01(\x03H\bR\x05speed\x88\x01\x01\x123\n" +
	"\x13fade_start_position\x18\n" +
	" \x01(\x05H\tR\x11fadeStartPosition\x88\x01\x01B\b\n" +
	"\x06_eventB\n" +
	"\n" +
	"\b_contextB\f\n" +
	"\n" +
	"_json_dataB\x0e\n" +
	"\f_playback_idB\t\n" +
	"\a_reasonB\x15\n" +
	"\x13_feature_identifierB\x10\n" +
	"\x0e_seek_positionB\t\n" +
	"\a_pausedB\b\n" +
	"\x06_speedB\x16\n" +
	"\x14_fade_start_position\"\xa1\x02\n" +
	"\fAudioResolve\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x12\"\n" +
	"\n" +
	"latency_ms\x18\x02 \x01(\x03H\x01R\tlatencyMs\x88\x01\x01\x12\"\n" +
	"\n" +
	"entity_uri\x18\x03 \x01(\tH\x02R\tentityUri\x88\x01\x01\x12\x1e\n" +
	"\baudio_id\x18\x04 \x01(\fH\x03R\aaudioId\x88\x01\x01\x121\n" +
	"\x12generated_audio_id\x18\x05 \x01(\fH\x04R\x10generatedAudioId\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\r\n" +
	"\v_latency_msB\r\n" +
	"\v_entity_uriB\v\n" +
	"\t_audio_idB\x15\n" +
	"\x13_generated_audio_id\"\xc5\b\n" +
	"\x1eBoomboxPlaybackInstrumentation\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x123\n" +
	"\x13was_playback_paused\x18\x02 \x01(\bH\x01R\x11wasPlaybackPaused\x88\x01\x01\x12\x1e\n" +
	"\n" +
	"dimensions\x18\x03 \x03(\tR\n" +
	"dimensions\x12u\n" +
	"\x11total_buffer_size\x18\x04 \x03(\v2I.spotify.event_sender.BoomboxPlaybackInstrumentation.TotalBufferSizeEntryR\x0ftotalBufferSize\x12o\n" +
	"\x0fnumber_of_calls\x18\x05 \x03(\v2G.spotify.event_sender.BoomboxPlaybackInstrumentation.NumberOfCallsEntryR\rnumberOfCalls\x12n\n" +
	"\x0etotal_duration\x18\x06 \x03(\v2G.spotify.event_sender.BoomboxPlaybackInstrumentation.TotalDurationEntryR\rtotalDuration\x12o\n" +
	"\x0ffirst_call_time\x18\a \x03(\v2G.spotify.event_sender.BoomboxPlaybackInstrumentation.FirstCallTimeEntryR\rfirstCallTime\x12l\n" +
	"\x0elast_call_time\x18\b \x03(\v2F.spotify.event_sender.BoomboxPlaybackInstrumentation.LastCallTimeEntryR\flastCallTime\x1aB\n" +
	"\x14TotalBufferSizeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a@\n" +
	"\x12NumberOfCallsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a@\n" +
	"\x12TotalDurationEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a@\n" +
	"\x12FirstCallTimeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a?\n" +
	"\x11LastCallTimeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01B\x0e\n" +
	"\f_playback_idB\x16\n" +
	"\x14_was_playback_paused\"\xf7\x05\n" +
	"\x16BoomboxPlaybackSession\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x12\"\n" +
	"\n" +
	"ms_latency\x18\x02 \x01(\x03H\x01R\tmsLatency\x88\x01\x01\x12\"\n" +
	"\n" +
	"ui_latency\x18\x03 \x01(\x03H\x02R\tuiLatency\x88\x01\x01\x12)\n" +
	"\x0ems_key_latency\x18\x04 \x01(\x03H\x03R\fmsKeyLatency\x88\x01\x01\x12)\n" +
	"\x0ems_rcv_latency\x18\x05 \x01(\x03H\x04R\fmsRcvLatency\x88\x01\x01\x12\"\n" +
	"\n" +
	"cached_key\x18\x06 \x01(\bH\x05R\tcachedKey\x88\x01\x01\x12 \n" +
	"\tn_stutter\x18\a \x01(\x03H\x06R\bnStutter\x88\x01\x01\x12\"\n" +
	"\n" +
	"n_seekback\x18\b \x01(\x03H\aR\tnSeekback\x88\x01\x01\x12$\n" +
	"\vms_seekback\x18\t \x01(\x03H\bR\n" +
	"msSeekback\x88\x01\x01\x12 \n" +
	"\tn_seekfwd\x18\n" +
	" \x01(\x03H\tR\bnSeekfwd\x88\x01\x01\x12\"\n" +
	"\n" +
	"ms_seekfwd\x18\v \x01(\x03H\n" +
	"R\tmsSeekfwd\x88\x01\x01\x12%\n" +
	"\fms_total_est\x18\f \x01(\x03H\vR\n" +
	"msTotalEst\x88\x01\x01\x12?\n" +
	"\x1aaudio_stream_type_at_start\x18\r \x01(\tH\fR\x16audioStreamTypeAtStart\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\r\n" +
	"\v_ms_latencyB\r\n" +
	"\v_ui_latencyB\x11\n" +
	"\x0f_ms_key_latencyB\x11\n" +
	"\x0f_ms_rcv_latencyB\r\n" +
	"\v_cached_keyB\f\n" +
	"\n" +
	"_n_stutterB\r\n" +
	"\v_n_seekbackB\x0e\n" +
	"\f_ms_seekbackB\f\n" +
	"\n" +
	"_n_seekfwdB\r\n" +
	"\v_ms_seekfwdB\x0f\n" +
	"\r_ms_total_estB\x1d\n" +
	"\x1b_audio_stream_type_at_start\"\xb5\x01\n" +
	"\fBrokenObject\x12\x17\n" +
	"\x04type\x18\x01 \x01(\tH\x00R\x04type\x88\x01\x01\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tH\x01R\x02id\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_code\x18\x03 \x01(\x03H\x02R\terrorCode\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x04 \x01(\fH\x03R\n" +
	"playbackId\x88\x01\x01B\a\n" +
	"\x05_typeB\x05\n" +
	"\x03_idB\r\n" +
	"\v_error_codeB\x0e\n" +
	"\f_playback_id\"\xb7\x03\n" +
	"\n" +
	"CacheError\x12\"\n" +
	"\n" +
	"error_code\x18\x01 \x01(\x03H\x00R\terrorCode\x88\x01\x01\x12'\n" +
	"\ros_error_code\x18\x02 \x01(\x03H\x01R\vosErrorCode\x88\x01\x01\x12\x19\n" +
	"\x05realm\x18\x03 \x01(\tH\x02R\x05realm\x88\x01\x01\x12\x1c\n" +
	"\afile_id\x18\x04 \x01(\fH\x03R\x06fileId\x88\x01\x01\x12\"\n" +
	"\n" +
	"num_errors\x18\x05 \x01(\x03H\x04R\tnumErrors\x88\x01\x01\x12\"\n" +
	"\n" +
	"cache_path\x18\x06 \x01(\tH\x05R\tcachePath\x88\x01\x01\x12\x17\n" +
	"\x04size\x18\a \x01(\x03H\x06R\x04size\x88\x01\x01\x12$\n" +
	"\vrange_start\x18\b \x01(\x03H\aR\n" +
	"rangeStart\x88\x01\x01\x12 \n" +
	"\trange_end\x18\t \x01(\x03H\bR\brangeEnd\x88\x01\x01B\r\n" +
	"\v_error_codeB\x10\n" +
	"\x0e_os_error_codeB\b\n" +
	"\x06_realmB\n" +
	"\n" +
	"\b_file_idB\r\n" +
	"\v_num_errorsB\r\n" +
	"\v_cache_pathB\a\n" +
	"\x05_sizeB\x0e\n" +
	"\f_range_startB\f\n" +
	"\n" +
	"_range_end\"\xed\n" +
	"\n" +
	"\x12CachePruningReport\x12\x1e\n" +
	"\bcache_id\x18\x01 \x01(\fH\x00R\acacheId\x88\x01\x01\x126\n" +
	"\x15time_spent_pruning_ms\x18\x02 \x01(\x03H\x01R\x12timeSpentPruningMs\x88\x01\x01\x124\n" +
	"\x14size_before_prune_kb\x18\x03 \x01(\x03H\x02R\x11sizeBeforePruneKb\x88\x01\x01\x122\n" +
	"\x13size_after_prune_kb\x18\x04 \x01(\x03H\x03R\x10sizeAfterPruneKb\x88\x01\x01\x121\n" +
	"\x12num_entries_pruned\x18\x05 \x01(\x03H\x04R\x10numEntriesPruned\x88\x01\x01\x12@\n" +
	"\x1anum_entries_pruned_expired\x18\x06 \x01(\x03H\x05R\x17numEntriesPrunedExpired\x88\x01\x01\x12G\n" +
	"\x1esize_entries_pruned_expired_kb\x18\a \x01(\x03H\x06R\x1asizeEntriesPrunedExpiredKb\x88\x01\x01\x12<\n" +
	"\x18num_entries_pruned_limit\x18\b \x01(\x03H\aR\x15numEntriesPrunedLimit\x88\x01\x01\x124\n" +
	"\x14size_pruned_limit_kb\x18\t \x01(\x03H\bR\x11sizePrunedLimitKb\x88\x01\x01\x12E\n" +
	"\x1dnum_entries_pruned_never_used\x18\n" +
	" \x01(\x03H\tR\x19numEntriesPrunedNeverUsed\x88\x01\x01\x12=\n" +
	"\x19size_pruned_never_used_kb\x18\v \x01(\x03H\n" +
	"R\x15sizePrunedNeverUsedKb\x88\x01\x01\x12L\n" +
	"!num_entries_pruned_max_realm_size\x18\f \x01(\x03H\vR\x1cnumEntriesPrunedMaxRealmSize\x88\x01\x01\x12D\n" +
	"\x1dsize_pruned_max_realm_size_kb\x18\r \x01(\x03H\fR\x18sizePrunedMaxRealmSizeKb\x88\x01\x01\x12L\n" +
	"!num_entries_pruned_min_free_space\x18\x0e \x01(\x03H\rR\x1cnumEntriesPrunedMinFreeSpace\x88\x01\x01\x12D\n" +
	"\x1dsize_pruned_min_free_space_kb\x18\x0f \x01(\x03H\x0eR\x18sizePrunedMinFreeSpaceKb\x88\x01\x01B\v\n" +
	"\t_cache_idB\x18\n" +
	"\x16_time_spent_pruning_msB\x17\n" +
	"\x15_size_before_prune_kbB\x16\n" +
	"\x14_size_after_prune_kbB\x15\n" +
	"\x13_num_entries_prunedB\x1d\n" +
	"\x1b_num_entries_pruned_expiredB!\n" +
	"\x1f_size_entries_pruned_expired_kbB\x1b\n" +
	"\x19_num_entries_pruned_limitB\x17\n" +
	"\x15_size_pruned_limit_kbB \n" +
	"\x1e_num_entries_pruned_never_usedB\x1c\n" +
	"\x1a_size_pruned_never_used_kbB$\n" +
	"\"_num_entries_pruned_max_realm_sizeB \n" +
	"\x1e_size_pruned_max_realm_size_kbB$\n" +
	"\"_num_entries_pruned_min_free_spaceB \n" +
	"\x1e_size_pruned_min_free_space_kb\"\xb2\t\n" +
	"\x17CacheRealmPruningReport\x12\x1e\n" +
	"\bcache_id\x18\x01 \x01(\fH\x00R\acacheId\x88\x01\x01\x12\x1e\n" +
	"\brealm_id\x18\x02 \x01(\x03H\x01R\arealmId\x88\x01\x01\x121\n" +
	"\x12num_entries_pruned\x18\x03 \x01(\x03H\x02R\x10numEntriesPruned\x88\x01\x01\x12@\n" +
	"\x1anum_entries_pruned_expired\x18\x04 \x01(\x03H\x03R\x17numEntriesPrunedExpired\x88\x01\x01\x12G\n" +
	"\x1esize_entries_pruned_expired_kb\x18\x05 \x01(\x03H\x04R\x1asizeEntriesPrunedExpiredKb\x88\x01\x01\x12<\n" +
	"\x18num_entries_pruned_limit\x18\x06 \x01(\x03H\x05R\x15numEntriesPrunedLimit\x88\x01\x01\x124\n" +
	"\x14size_pruned_limit_kb\x18\a \x01(\x03H\x06R\x11sizePrunedLimitKb\x88\x01\x01\x12E\n" +
	"\x1dnum_entries_pruned_never_used\x18\b \x01(\x03H\aR\x19numEntriesPrunedNeverUsed\x88\x01\x01\x12=\n" +
	"\x19size_pruned_never_used_kb\x18\t \x01(\x03H\bR\x15sizePrunedNeverUsedKb\x88\x01\x01\x12L\n" +
	"!num_entries_pruned_max_realm_size\x18\n" +
	" \x01(\x03H\tR\x1cnumEntriesPrunedMaxRealmSize\x88\x01\x01\x12D\n" +
	"\x1dsize_pruned_max_realm_size_kb\x18\v \x01(\x03H\n" +
	"R\x18sizePrunedMaxRealmSizeKb\x88\x01\x01\x12L\n" +
	"!num_entries_pruned_min_free_space\x18\f \x01(\x03H\vR\x1cnumEntriesPrunedMinFreeSpace\x88\x01\x01\x12D\n" +
	"\x1dsize_pruned_min_free_space_kb\x18\r \x01(\x03H\fR\x18sizePrunedMinFreeSpaceKb\x88\x01\x01B\v\n" +
	"\t_cache_idB\v\n" +
	"\t_realm_idB\x15\n" +
	"\x13_num_entries_prunedB\x1d\n" +
	"\x1b_num_entries_pruned_expiredB!\n" +
	"\x1f_size_entries_pruned_expired_kbB\x1b\n" +
	"\x19_num_entries_pruned_limitB\x17\n" +
	"\x15_size_pruned_limit_kbB \n" +
	"\x1e_num_entries_pruned_never_usedB\x1c\n" +
	"\x1a_size_pruned_never_used_kbB$\n" +
	"\"_num_entries_pruned_max_realm_sizeB \n" +
	"\x1e_size_pruned_max_realm_size_kbB$\n" +
	"\"_num_entries_pruned_min_free_spaceB \n" +
	"\x1e_size_pruned_min_free_space_kb\"\x87\x04\n" +
	"\x10CacheRealmReport\x12\x1e\n" +
	"\bcache_id\x18\x01 \x01(\fH\x00R\acacheId\x88\x01\x01\x12\x1e\n" +
	"\brealm_id\x18\x02 \x01(\x03H\x01R\arealmId\x88\x01\x01\x12$\n" +
	"\vnum_entries\x18\x03 \x01(\x03H\x02R\n" +
	"numEntries\x88\x01\x01\x121\n" +
	"\x12num_locked_entries\x18\x04 \x01(\x03H\x03R\x10numLockedEntries\x88\x01\x01\x12I\n" +
	"\x1fnum_locked_entries_current_user\x18\x05 \x01(\x03H\x04R\x1bnumLockedEntriesCurrentUser\x88\x01\x01\x12-\n" +
	"\x10num_full_entries\x18\x06 \x01(\x03H\x05R\x0enumFullEntries\x88\x01\x01\x12\x1c\n" +
	"\asize_kb\x18\a \x01(\x03H\x06R\x06sizeKb\x88\x01\x01\x12)\n" +
	"\x0elocked_size_kb\x18\b \x01(\x03H\aR\flockedSizeKb\x88\x01\x01B\v\n" +
	"\t_cache_idB\v\n" +
	"\t_realm_idB\x0e\n" +
	"\f_num_entriesB\x15\n" +
	"\x13_num_locked_entriesB\"\n" +
	" _num_locked_entries_current_userB\x13\n" +
	"\x11_num_full_entriesB\n" +
	"\n" +
	"\b_size_kbB\x11\n" +
	"\x0f_locked_size_kb\"\x9e\x0f\n" +
	"\vCacheReport\x12\x1e\n" +
	"\bcache_id\x18\x01 \x01(\fH\x00R\acacheId\x88\x01\x01\x12\"\n" +
	"\n" +
	"cache_path\x18\x15 \x01(\tH\x01R\tcachePath\x88\x01\x01\x12(\n" +
	"\rvolatile_path\x18\x16 \x01(\tH\x02R\fvolatilePath\x88\x01\x01\x12)\n" +
	"\x0emax_cache_size\x18\x02 \x01(\x03H\x03R\fmaxCacheSize\x88\x01\x01\x12\"\n" +
	"\n" +
	"free_space\x18\x03 \x01(\x03H\x04R\tfreeSpace\x88\x01\x01\x12$\n" +
	"\vtotal_space\x18\x04 \x01(\x03H\x05R\n" +
	"totalSpace\x88\x01\x01\x123\n" +
	"\x13volatile_free_space\x18\x17 \x01(\x03H\x06R\x11volatileFreeSpace\x88\x01\x01\x125\n" +
	"\x14volatile_total_space\x18\x18 \x01(\x03H\aR\x12volatileTotalSpace\x88\x01\x01\x12B\n" +
	"\x1bvolatile_on_separate_volume\x18\x19 \x01(\bH\bR\x18volatileOnSeparateVolume\x88\x01\x01\x12 \n" +
	"\tcache_age\x18\x05 \x01(\x03H\tR\bcacheAge\x88\x01\x01\x12E\n" +
	"\x1dnum_users_with_locked_entries\x18\x06 \x01(\x03H\n" +
	"R\x19numUsersWithLockedEntries\x88\x01\x01\x12,\n" +
	"\x0fpermanent_files\x18\a \x01(\x03H\vR\x0epermanentFiles\x88\x01\x01\x12/\n" +
	"\x11permanent_size_kb\x18\b \x01(\x03H\fR\x0fpermanentSizeKb\x88\x01\x01\x12;\n" +
	"\x17unknown_permanent_files\x18\t \x01(\x03H\rR\x15unknownPermanentFiles\x88\x01\x01\x12>\n" +
	"\x19unknown_permanent_size_kb\x18\n" +
	" \x01(\x03H\x0eR\x16unknownPermanentSizeKb\x88\x01\x01\x12*\n" +
	"\x0evolatile_files\x18\v \x01(\x03H\x0fR\rvolatileFiles\x88\x01\x01\x12-\n" +
	"\x10volatile_size_kb\x18\f \x01(\x03H\x10R\x0evolatileSizeKb\x88\x01\x01\x129\n" +
	"\x16unknown_volatile_files\x18\r \x01(\x03H\x11R\x14unknownVolatileFiles\x88\x01\x01\x12<\n" +
	"\x18unknown_volatile_size_kb\x18\x0e \x01(\x03H\x12R\x15unknownVolatileSizeKb\x88\x01\x01\x12$\n" +
	"\vnum_entries\x18\x0f \x01(\x03H\x13R\n" +
	"numEntries\x88\x01\x01\x121\n" +
	"\x12num_locked_entries\x18\x10 \x01(\x03H\x14R\x10numLockedEntries\x88\x01\x01\x12I\n" +
	"\x1fnum_locked_entries_current_user\x18\x11 \x01(\x03H\x15R\x1bnumLockedEntriesCurrentUser\x88\x01\x01\x12-\n" +
	"\x10num_full_entries\x18\x12 \x01(\x03H\x16R\x0enumFullEntries\x88\x01\x01\x12\x1c\n" +
	"\asize_kb\x18\x13 \x01(\x03H\x17R\x06sizeKb\x88\x01\x01\x12)\n" +
	"\x0elocked_size_kb\x18\x14 \x01(\x03H\x18R\flockedSizeKb\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x1a \x01(\tH\x19R\x06reason\x88\x01\x01\x12(\n" +
	"\rmissing_files\x18\x1b \x01(\x03H\x1aR\fmissingFiles\x88\x01\x01\x12+\n" +
	"\x0fmissing_size_kb\x18\x1c \x01(\x03H\x1bR\rmissingSizeKb\x88\x01\x01B\v\n" +
	"\t_cache_idB\r\n" +
	"\v_cache_pathB\x10\n" +
	"\x0e_volatile_pathB\x11\n" +
	"\x0f_max_cache_sizeB\r\n" +
	"\v_free_spaceB\x0e\n" +
	"\f_total_spaceB\x16\n" +
	"\x14_volatile_free_spaceB\x17\n" +
	"\x15_volatile_total_spaceB\x1e\n" +
	"\x1c_volatile_on_separate_volumeB\f\n" +
	"\n" +
	"_cache_ageB \n" +
	"\x1e_num_users_with_locked_entriesB\x12\n" +
	"\x10_permanent_filesB\x14\n" +
	"\x12_permanent_size_kbB\x1a\n" +
	"\x18_unknown_permanent_filesB\x1c\n" +
	"\x1a_unknown_permanent_size_kbB\x11\n" +
	"\x0f_volatile_filesB\x13\n" +
	"\x11_volatile_size_kbB\x19\n" +
	"\x17_unknown_volatile_filesB\x1b\n" +
	"\x19_unknown_volatile_size_kbB\x0e\n" +
	"\f_num_entriesB\x15\n" +
	"\x13_num_locked_entriesB\"\n" +
	" _num_locked_entries_current_userB\x13\n" +
	"\x11_num_full_entriesB\n" +
	"\n" +
	"\b_size_kbB\x11\n" +
	"\x0f_locked_size_kbB\t\n" +
	"\a_reasonB\x10\n" +
	"\x0e_missing_filesB\x12\n" +
	"\x10_missing_size_kb\"\x90\x02\n" +
	"\x12ConnectPullFailure\x12(\n" +
	"\rtransfer_data\x18\x01 \x01(\fH\x00R\ftransferData\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x03H\x01R\terrorCode\x88\x01\x01\x12O\n" +
	"\areasons\x18\x03 \x03(\v25.spotify.event_sender.ConnectPullFailure.ReasonsEntryR\areasons\x1a:\n" +
	"\fReasonsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x10\n" +
	"\x0e_transfer_dataB\r\n" +
	"\v_error_code\"\x7f\n" +
	"\x14CorePlaybackFinished\x12\"\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tH\x00R\tsessionId\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x02 \x01(\fH\x01R\n" +
	"playbackId\x88\x01\x01B\r\n" +
	"\v_session_idB\x0e\n" +
	"\f_playback_id\"\xa3\x18\n" +
	"\bDownload\x12\x1c\n" +
	"\afile_id\x18\x01 \x01(\fH\x00R\x06fileId\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x02 \x01(\fH\x01R\n" +
	"playbackId\x88\x01\x01\x12'\n" +
	"\rbytes_from_ap\x18\x03 \x01(\x03H\x02R\vbytesFromAp\x88\x01\x01\x12'\n" +
	"\rwaste_from_ap\x18\x04 \x01(\x03H\x03R\vwasteFromAp\x88\x01\x01\x12%\n" +
	"\freqs_from_ap\x18\x05 \x01(\x03H\x04R\n" +
	"reqsFromAp\x88\x01\x01\x12'\n" +
	"\rerror_from_ap\x18\x06 \x01(\x03H\x05R\verrorFromAp\x88\x01\x01\x12)\n" +
	"\x0ebytes_from_cdn\x18\a \x01(\x03H\x06R\fbytesFromCdn\x88\x01\x01\x12)\n" +
	"\x0ewaste_from_cdn\x18\b \x01(\x03H\aR\fwasteFromCdn\x88\x01\x01\x12-\n" +
	"\x10bytes_from_cache\x18\t \x01(\x03H\bR\x0ebytesFromCache\x88\x01\x01\x12&\n" +
	"\fcontent_size\x18\n" +
	" \x01(\x03H\tR\vcontentSize\x88\x01\x01\x12&\n" +
	"\fcontent_type\x18\v \x01(\tH\n" +
	"R\vcontentType\x88\x01\x01\x121\n" +
	"\x12ap_initial_latency\x18\f \x01(\x03H\vR\x10apInitialLatency\x88\x01\x01\x12)\n" +
	"\x0eap_max_latency\x18\r \x01(\x03H\fR\fapMaxLatency\x88\x01\x01\x12)\n" +
	"\x0eap_min_latency\x18\x0e \x01(\x03H\rR\fapMinLatency\x88\x01\x01\x12)\n" +
	"\x0eap_avg_latency\x18\x0f \x01(\x01H\x0eR\fapAvgLatency\x88\x01\x01\x12/\n" +
	"\x11ap_median_latency\x18\x10 \x01(\x03H\x0fR\x0fapMedianLatency\x88\x01\x01\x12\x1f\n" +
	"\tap_avg_bw\x18\x11 \x01(\x01H\x10R\aapAvgBw\x88\x01\x01\x123\n" +
	"\x13cdn_initial_latency\x18\x12 \x01(\x03H\x11R\x11cdnInitialLatency\x88\x01\x01\x12+\n" +
	"\x0fcdn_max_latency\x18\x13 \x01(\x03H\x12R\rcdnMaxLatency\x88\x01\x01\x12+\n" +
	"\x0fcdn_min_latency\x18\x14 \x01(\x03H\x13R\rcdnMinLatency\x88\x01\x01\x12+\n" +
	"\x0fcdn_avg_latency\x18\x15 \x01(\x01H\x14R\rcdnAvgLatency\x88\x01\x01\x121\n" +
	"\x12cdn_median_latency\x18\x16 \x01(\x03H\x15R\x10cdnMedianLatency\x88\x01\x01\x12:\n" +
	"\x17cdn_64k_initial_latency\x18\x17 \x01(\x03H\x16R\x14cdn64kInitialLatency\x88\x01\x01\x122\n" +
	"\x13cdn_64k_max_latency\x18\x18 \x01(\x03H\x17R\x10cdn64kMaxLatency\x88\x01\x01\x122\n" +
	"\x13cdn_64k_min_latency\x18\x19 \x01(\x03H\x18R\x10cdn64kMinLatency\x88\x01\x01\x122\n" +
	"\x13cdn_64k_avg_latency\x18\x1a \x01(\x01H\x19R\x10cdn64kAvgLatency\x88\x01\x01\x128\n" +
	"\x16cdn_64k_median_latency\x18\x1b \x01(\x03H\x1aR\x13cdn64kMedianLatency\x88\x01\x01\x12!\n" +
	"\n" +
	"cdn_avg_bw\x18\x1c \x01(\x01H\x1bR\bcdnAvgBw\x88\x01\x01\x12:\n" +
	"\x17cdn_initial_bw_estimate\x18\x1d \x01(\x01H\x1cR\x14cdnInitialBwEstimate\x88\x01\x01\x12)\n" +
	"\x0ecdn_uri_scheme\x18\x1e \x01(\tH\x1dR\fcdnUriScheme\x88\x01\x01\x12\"\n" +
	"\n" +
	"cdn_domain\x18\x1f \x01(\tH\x1eR\tcdnDomain\x88\x01\x01\x12-\n" +
	"\x10cdn_socket_reuse\x18  \x01(\tH\x1fR\x0ecdnSocketReuse\x88\x01\x01\x12&\n" +
	"\fcdn_protocol\x18. \x01(\tH R\vcdnProtocol\x88\x01\x01\x12+\n" +
	"\x0fnum_cache_error\x18! \x01(\x03H!R\rnumCacheError\x88\x01\x01\x121\n" +
	"\x12bytes_from_carrier\x18\" \x01(\x03H\"R\x10bytesFromCarrier\x88\x01\x01\x121\n" +
	"\x12bytes_from_unknown\x18# \x01(\x03H#R\x10bytesFromUnknown\x88\x01\x01\x12+\n" +
	"\x0fbytes_from_wifi\x18$ \x01(\x03H$R\rbytesFromWifi\x88\x01\x01\x123\n" +
	"\x13bytes_from_ethernet\x18% \x01(\x03H%R\x11bytesFromEthernet\x88\x01\x01\x12&\n" +
	"\frequest_type\x18& \x01(\tH&R\vrequestType\x88\x01\x01\x12\"\n" +
	"\n" +
	"total_time\x18' \x01(\x03H'R\ttotalTime\x88\x01\x01\x12\x1d\n" +
	"\abitrate\x18( \x01(\x03H(R\abitrate\x88\x01\x01\x12'\n" +
	"\rreqs_from_cdn\x18) \x01(\x03H)R\vreqsFromCdn\x88\x01\x01\x12)\n" +
	"\x0eerror_from_cdn\x18* \x01(\x03H*R\ferrorFromCdn\x88\x01\x01\x12$\n" +
	"\vfile_origin\x18+ \x01(\tH+R\n" +
	"fileOrigin\x88\x01\x01\x121\n" +
	"\x12initial_disk_state\x18, \x01(\tH,R\x10initialDiskState\x88\x01\x01\x12\x1b\n" +
	"\x06locked\x18- \x01(\bH-R\x06locked\x88\x01\x01\x12;\n" +
	"\x17storage_resolve_latency\x18/ \x01(\x03H.R\x15storageResolveLatency\x88\x01\x01\x123\n" +
	"\x13original_cdn_domain\x180 \x01(\tH/R\x11originalCdnDomain\x88\x01\x01B\n" +
	"\n" +
	"\b_file_idB\x0e\n" +
	"\f_playback_idB\x10\n" +
	"\x0e_bytes_from_apB\x10\n" +
	"\x0e_waste_from_apB\x0f\n" +
	"\r_reqs_from_apB\x10\n" +
	"\x0e_error_from_apB\x11\n" +
	"\x0f_bytes_from_cdnB\x11\n" +
	"\x0f_waste_from_cdnB\x13\n" +
	"\x11_bytes_from_cacheB\x0f\n" +
	"\r_content_sizeB\x0f\n" +
	"\r_content_typeB\x15\n" +
	"\x13_ap_initial_latencyB\x11\n" +
	"\x0f_ap_max_latencyB\x11\n" +
	"\x0f_ap_min_latencyB\x11\n" +
	"\x0f_ap_avg_latencyB\x14\n" +
	"\x12_ap_median_latencyB\f\n" +
	"\n" +
	"_ap_avg_bwB\x16\n" +
	"\x14_cdn_initial_latencyB\x12\n" +
	"\x10_cdn_max_latencyB\x12\n" +
	"\x10_cdn_min_latencyB\x12\n" +
	"\x10_cdn_avg_latencyB\x15\n" +
	"\x13_cdn_median_latencyB\x1a\n" +
	"\x18_cdn_64k_initial_latencyB\x16\n" +
	"\x14_cdn_64k_max_latencyB\x16\n" +
	"\x14_cdn_64k_min_latencyB\x16\n" +
	"\x14_cdn_64k_avg_latencyB\x19\n" +
	"\x17_cdn_64k_median_latencyB\r\n" +
	"\v_cdn_avg_bwB\x1a\n" +
	"\x18_cdn_initial_bw_estimateB\x11\n" +
	"\x0f_cdn_uri_schemeB\r\n" +
	"\v_cdn_domainB\x13\n" +
	"\x11_cdn_socket_reuseB\x0f\n" +
	"\r_cdn_protocolB\x12\n" +
	"\x10_num_cache_errorB\x15\n" +
	"\x13_bytes_from_carrierB\x15\n" +
	"\x13_bytes_from_unknownB\x12\n" +
	"\x10_bytes_from_wifiB\x16\n" +
	"\x14_bytes_from_ethernetB\x0f\n" +
	"\r_request_typeB\r\n" +
	"\v_total_timeB\n" +
	"\n" +
	"\b_bitrateB\x10\n" +
	"\x0e_reqs_from_cdnB\x11\n" +
	"\x0f_error_from_cdnB\x0e\n" +
	"\f_file_originB\x15\n" +
	"\x13_initial_disk_stateB\t\n" +
	"\a_lockedB\x1a\n" +
	"\x18_storage_resolve_latencyB\x16\n" +
	"\x14_original_cdn_domain\"\xc9\x01\n" +
	"\x11DrmRequestFailure\x12\x1b\n" +
	"\x06reason\x18\x01 \x01(\tH\x00R\x06reason\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x03H\x01R\terrorCode\x88\x01\x01\x12\x19\n" +
	"\x05fatal\x18\x03 \x01(\bH\x02R\x05fatal\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x04 \x01(\fH\x03R\n" +
	"playbackId\x88\x01\x01B\t\n" +
	"\a_reasonB\r\n" +
	"\v_error_codeB\b\n" +
	"\x06_fatalB\x0e\n" +
	"\f_playback_id\"\xff\t\n" +
	"\x05EndAd\x12\x1c\n" +
	"\afile_id\x18\x01 \x01(\fH\x00R\x06fileId\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x02 \x01(\fH\x01R\n" +
	"playbackId\x88\x01\x01\x12\x1c\n" +
	"\asong_id\x18\x03 \x01(\fH\x02R\x06songId\x88\x01\x01\x12&\n" +
	"\fsource_start\x18\x04 \x01(\tH\x03R\vsourceStart\x88\x01\x01\x12&\n" +
	"\freason_start\x18\x05 \x01(\tH\x04R\vreasonStart\x88\x01\x01\x12\"\n" +
	"\n" +
	"source_end\x18\x06 \x01(\tH\x05R\tsourceEnd\x88\x01\x01\x12\"\n" +
	"\n" +
	"reason_end\x18\a \x01(\tH\x06R\treasonEnd\x88\x01\x01\x12&\n" +
	"\fbytes_played\x18\b \x01(\x03H\aR\vbytesPlayed\x88\x01\x01\x12'\n" +
	"\rbytes_in_song\x18\t \x01(\x03H\bR\vbytesInSong\x88\x01\x01\x12 \n" +
	"\tms_played\x18\n" +
	" \x01(\x03H\tR\bmsPlayed\x88\x01\x01\x12%\n" +
	"\fms_total_est\x18\v \x01(\x03H\n" +
	"R\n" +
	"msTotalEst\x88\x01\x01\x12)\n" +
	"\x0ems_rcv_latency\x18\f \x01(\x03H\vR\fmsRcvLatency\x88\x01\x01\x12\"\n" +
	"\n" +
	"n_seekback\x18\r \x01(\x03H\fR\tnSeekback\x88\x01\x01\x12$\n" +
	"\vms_seekback\x18\x0e \x01(\x03H\rR\n" +
	"msSeekback\x88\x01\x01\x12 \n" +
	"\tn_seekfwd\x18\x0f \x01(\x03H\x0eR\bnSeekfwd\x88\x01\x01\x12\"\n" +
	"\n" +
	"ms_seekfwd\x18\x10 \x01(\x03H\x0fR\tmsSeekfwd\x88\x01\x01\x12\"\n" +
	"\n" +
	"ms_latency\x18\x11 \x01(\x03H\x10R\tmsLatency\x88\x01\x01\x12 \n" +
	"\tn_stutter\x18\x12 \x01(\x03H\x11R\bnStutter\x88\x01\x01\x12$\n" +
	"\vp_lowbuffer\x18\x13 \x01(\x03H\x12R\n" +
	"pLowbuffer\x88\x01\x01\x12\x1d\n" +
	"\askipped\x18\x14 \x01(\bH\x13R\askipped\x88\x01\x01\x12\"\n" +
	"\n" +
	"ad_clicked\x18\x15 \x01(\bH\x14R\tadClicked\x88\x01\x01\x12\x19\n" +
	"\x05token\x18\x16 \x01(\tH\x15R\x05token\x88\x01\x01\x12+\n" +
	"\x0fclient_ad_count\x18\x17 \x01(\x03H\x16R\rclientAdCount\x88\x01\x01\x127\n" +
	"\x15client_campaign_count\x18\x18 \x01(\x03H\x17R\x13clientCampaignCount\x88\x01\x01B\n" +
	"\n" +
	"\b_file_idB\x0e\n" +
	"\f_playback_idB\n" +
	"\n" +
	"\b_song_idB\x0f\n" +
	"\r_source_startB\x0f\n" +
	"\r_reason_startB\r\n" +
	"\v_source_endB\r\n" +
	"\v_reason_endB\x0f\n" +
	"\r_bytes_playedB\x10\n" +
	"\x0e_bytes_in_songB\f\n" +
	"\n" +
	"_ms_playedB\x0f\n" +
	"\r_ms_total_estB\x11\n" +
	"\x0f_ms_rcv_latencyB\r\n" +
	"\v_n_seekbackB\x0e\n" +
	"\f_ms_seekbackB\f\n" +
	"\n" +
	"_n_seekfwdB\r\n" +
	"\v_ms_seekfwdB\r\n" +
	"\v_ms_latencyB\f\n" +
	"\n" +
	"_n_stutterB\x0e\n" +
	"\f_p_lowbufferB\n" +
	"\n" +
	"\b_skippedB\r\n" +
	"\v_ad_clickedB\b\n" +
	"\x06_tokenB\x12\n" +
	"\x10_client_ad_countB\x18\n" +
	"\x16_client_campaign_count\"\xa2\v\n" +
	"\x18EventSenderStats2NonAuth\x12!\n" +
	"\fsequence_ids\x18\x01 \x03(\fR\vsequenceIds\x12\x1f\n" +
	"\vevent_names\x18\x02 \x03(\tR\n" +
	"eventNames\x12P\n" +
	"&loss_stats_num_entries_per_sequence_id\x18\x03 \x03(\x05R lossStatsNumEntriesPerSequenceId\x12<\n" +
	"\x1bloss_stats_event_name_index\x18\x04 \x03(\x05R\x17lossStatsEventNameIndex\x127\n" +
	"\x18loss_stats_storage_sizes\x18\x05 \x03(\x03R\x15lossStatsStorageSizes\x12D\n" +
	"\x1floss_stats_sequence_number_mins\x18\x06 \x03(\x03R\x1blossStatsSequenceNumberMins\x12F\n" +
	" loss_stats_sequence_number_nexts\x18\a \x03(\x03R\x1clossStatsSequenceNumberNexts\x12J\n" +
	"\"ratelimiter_stats_event_name_index\x18\b \x03(\x05R\x1eratelimiterStatsEventNameIndex\x12?\n" +
	"\x1cratelimiter_stats_drop_count\x18\t \x03(\x03R\x19ratelimiterStatsDropCount\x12N\n" +
	"%drop_list_num_entries_per_sequence_id\x18\n" +
	" \x03(\x05R\x1fdropListNumEntriesPerSequenceId\x12:\n" +
	"\x1adrop_list_event_name_index\x18\v \x03(\x05R\x16dropListEventNameIndex\x123\n" +
	"\x16drop_list_counts_total\x18\f \x03(\x03R\x13dropListCountsTotal\x12=\n" +
	"\x1bdrop_list_counts_unreported\x18\r \x03(\x03R\x18dropListCountsUnreported\x12>\n" +
	"\x1cstates_list_event_name_index\x18\x0f \x03(\x05R\x18statesListEventNameIndex\x12F\n" +
	" states_list_entered_counts_total\x18\x10 \x03(\x03R\x1cstatesListEnteredCountsTotal\x12U\n" +
	"(states_list_rejected_client_counts_total\x18\x11 \x03(\x03R#statesListRejectedClientCountsTotal\x12F\n" +
	" states_list_dropped_counts_total\x18\x12 \x03(\x03R\x1cstatesListDroppedCountsTotal\x12J\n" +
	"\"states_list_persisted_counts_total\x18\x13 \x03(\x03R\x1estatesListPersistedCountsTotal\x12W\n" +
	")states_list_rejected_backend_counts_total\x18\x14 \x03(\x03R$statesListRejectedBackendCountsTotal\x12J\n" +
	"\"states_list_delivered_counts_total\x18\x15 \x03(\x03R\x1estatesListDeliveredCountsTotal\x12F\n" +
	" states_list_deleted_counts_total\x18\x16 \x03(\x03R\x1cstatesListDeletedCountsTotal\"\xf1\a\n" +
	"\x10HeadFileDownload\x12\x1c\n" +
	"\afile_id\x18\x01 \x01(\fH\x00R\x06fileId\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x02 \x01(\fH\x01R\n" +
	"playbackId\x88\x01\x01\x12)\n" +
	"\x0ecdn_uri_scheme\x18\x03 \x01(\tH\x02R\fcdnUriScheme\x88\x01\x01\x12\"\n" +
	"\n" +
	"cdn_domain\x18\x04 \x01(\tH\x03R\tcdnDomain\x88\x01\x01\x12)\n" +
	"\x0ehead_file_size\x18\x05 \x01(\x03H\x04R\fheadFileSize\x88\x01\x01\x12.\n" +
	"\x10bytes_downloaded\x18\x06 \x01(\x03H\x05R\x0fbytesDownloaded\x88\x01\x01\x12&\n" +
	"\fbytes_wasted\x18\a \x01(\x03H\x06R\vbytesWasted\x88\x01\x01\x12&\n" +
	"\fhttp_latency\x18\b \x01(\x03H\aR\vhttpLatency\x88\x01\x01\x12-\n" +
	"\x10http_64k_latency\x18\t \x01(\x03H\bR\x0ehttp64kLatency\x88\x01\x01\x12\"\n" +
	"\n" +
	"total_time\x18\n" +
	" \x01(\x03H\tR\ttotalTime\x88\x01\x01\x12$\n" +
	"\vhttp_result\x18\v \x01(\x03H\n" +
	"R\n" +
	"httpResult\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_code\x18\f \x01(\x03H\vR\terrorCode\x88\x01\x01\x12&\n" +
	"\fcached_bytes\x18\r \x01(\x03H\fR\vcachedBytes\x88\x01\x01\x12-\n" +
	"\x10bytes_from_cache\x18\x0e \x01(\x03H\rR\x0ebytesFromCache\x88\x01\x01\x12&\n" +
	"\fsocket_reuse\x18\x0f \x01(\tH\x0eR\vsocketReuse\x88\x01\x01\x12&\n" +
	"\frequest_type\x18\x10 \x01(\tH\x0fR\vrequestType\x88\x01\x01\x121\n" +
	"\x12initial_disk_state\x18\x11 \x01(\tH\x10R\x10initialDiskState\x88\x01\x01B\n" +
	"\n" +
	"\b_file_idB\x0e\n" +
	"\f_playback_idB\x11\n" +
	"\x0f_cdn_uri_schemeB\r\n" +
	"\v_cdn_domainB\x11\n" +
	"\x0f_head_file_sizeB\x13\n" +
	"\x11_bytes_downloadedB\x0f\n" +
	"\r_bytes_wastedB\x0f\n" +
	"\r_http_latencyB\x13\n" +
	"\x11_http_64k_latencyB\r\n" +
	"\v_total_timeB\x0e\n" +
	"\f_http_resultB\r\n" +
	"\v_error_codeB\x0f\n" +
	"\r_cached_bytesB\x13\n" +
	"\x11_bytes_from_cacheB\x0f\n" +
	"\r_socket_reuseB\x0f\n" +
	"\r_request_typeB\x15\n" +
	"\x13_initial_disk_state\"\xe5\x18\n" +
	"\rLegacyEndSong\x12,\n" +
	"\x0fsequence_number\x18\x01 \x01(\x03H\x00R\x0esequenceNumber\x88\x01\x01\x12$\n" +
	"\vsequence_id\x18\x02 \x01(\tH\x01R\n" +
	"sequenceId\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x03 \x01(\fH\x02R\n" +
	"playbackId\x88\x01\x01\x121\n" +
	"\x12parent_playback_id\x18\x04 \x01(\fH\x03R\x10parentPlaybackId\x88\x01\x01\x12&\n" +
	"\fsource_start\x18\x05 \x01(\tH\x04R\vsourceStart\x88\x01\x01\x12&\n" +
	"\freason_start\x18\x06 \x01(\tH\x05R\vreasonStart\x88\x01\x01\x12\"\n" +
	"\n" +
	"source_end\x18\a \x01(\tH\x06R\tsourceEnd\x88\x01\x01\x12\"\n" +
	"\n" +
	"reason_end\x18\b \x01(\tH\aR\treasonEnd\x88\x01\x01\x12&\n" +
	"\fbytes_played\x18\t \x01(\x03H\bR\vbytesPlayed\x88\x01\x01\x12'\n" +
	"\rbytes_in_song\x18\n" +
	" \x01(\x03H\tR\vbytesInSong\x88\x01\x01\x12 \n" +
	"\tms_played\x18\v \x01(\x03H\n" +
	"R\bmsPlayed\x88\x01\x01\x12/\n" +
	"\x11ms_nominal_played\x18\f \x01(\x03H\vR\x0fmsNominalPlayed\x88\x01\x01\x12%\n" +
	"\fms_total_est\x18\r \x01(\x03H\fR\n" +
	"msTotalEst\x88\x01\x01\x12)\n" +
	"\x0ems_rcv_latency\x18\x0e \x01(\x03H\rR\fmsRcvLatency\x88\x01\x01\x12*\n" +
	"\x0ems_overlapping\x18\x0f \x01(\x03H\x0eR\rmsOverlapping\x88\x01\x01\x12\"\n" +
	"\n" +
	"n_seekback\x18\x10 \x01(\x03H\x0fR\tnSeekback\x88\x01\x01\x12$\n" +
	"\vms_seekback\x18\x11 \x01(\x03H\x10R\n" +
	"msSeekback\x88\x01\x01\x12 \n" +
	"\tn_seekfwd\x18\x12 \x01(\x03H\x11R\bnSeekfwd\x88\x01\x01\x12\"\n" +
	"\n" +
	"ms_seekfwd\x18\x13 \x01(\x03H\x12R\tmsSeekfwd\x88\x01\x01\x12\"\n" +
	"\n" +
	"ms_latency\x18\x14 \x01(\x03H\x13R\tmsLatency\x88\x01\x01\x12\"\n" +
	"\n" +
	"ui_latency\x18\x15 \x01(\x03H\x14R\tuiLatency\x88\x01\x01\x12 \n" +
	"\tplayer_id\x18\x16 \x01(\tH\x15R\bplayerId\x88\x01\x01\x12)\n" +
	"\x0ems_key_latency\x18\x17 \x01(\x03H\x16R\fmsKeyLatency\x88\x01\x01\x12$\n" +
	"\voffline_key\x18\x18 \x01(\bH\x17R\n" +
	"offlineKey\x88\x01\x01\x12\"\n" +
	"\n" +
	"cached_key\x18\x19 \x01(\bH\x18R\tcachedKey\x88\x01\x01\x12 \n" +
	"\tn_stutter\x18\x1a \x01(\x03H\x19R\bnStutter\x88\x01\x01\x12$\n" +
	"\vp_lowbuffer\x18\x1b \x01(\x03H\x1aR\n" +
	"pLowbuffer\x88\x01\x01\x12\x1d\n" +
	"\ashuffle\x18\x1c \x01(\bH\x1bR\ashuffle\x88\x01\x01\x12(\n" +
	"\rmax_continous\x18\x1d \x01(\x03H\x1cR\fmaxContinous\x88\x01\x01\x12&\n" +
	"\funion_played\x18\x1e \x01(\x03H\x1dR\vunionPlayed\x88\x01\x01\x12.\n" +
	"\x10artificial_delay\x18\x1f \x01(\x03H\x1eR\x0fartificialDelay\x88\x01\x01\x12\x1d\n" +
	"\abitrate\x18  \x01(\x03H\x1fR\abitrate\x88\x01\x01\x12&\n" +
	"\fplay_context\x18! \x01(\tH R\vplayContext\x88\x01\x01\x12#\n" +
	"\n" +
	"audiocodec\x18\" \x01(\tH!R\n" +
	"audiocodec\x88\x01\x01\x12\"\n" +
	"\n" +
	"play_track\x18# \x01(\tH\"R\tplayTrack\x88\x01\x01\x12(\n" +
	"\rdisplay_track\x18$ \x01(\tH#R\fdisplayTrack\x88\x01\x01\x12\x1d\n" +
	"\aoffline\x18% \x01(\bH$R\aoffline\x88\x01\x01\x120\n" +
	"\x11offline_timestamp\x18& \x01(\x03H%R\x10offlineTimestamp\x88\x01\x01\x12*\n" +
	"\x0eincognito_mode\x18' \x01(\bH&R\rincognitoMode\x88\x01\x01\x12\x1f\n" +
	"\bprovider\x18( \x01(\tH'R\bprovider\x88\x01\x01\x12\x1d\n" +
	"\areferer\x18) \x01(\tH(R\areferer\x88\x01\x01\x12.\n" +
	"\x10referrer_version\x18* \x01(\tH)R\x0freferrerVersion\x88\x01\x01\x12,\n" +
	"\x0freferrer_vendor\x18+ \x01(\tH*R\x0ereferrerVendor\x88\x01\x01\x12#\n" +
	"\n" +
	"transition\x18, \x01(\tH+R\n" +
	"transition\x88\x01\x01\x12*\n" +
	"\x0estreaming_rule\x18- \x01(\tH,R\rstreamingRule\x88\x01\x01\x12#\n" +
	"\vgaia_dev_id\x18. \x01(\tH-R\tgaiaDevId\x88\x01\x01\x12$\n" +
	"\vaccepted_tc\x18/ \x01(\tH.R\n" +
	"acceptedTc\x88\x01\x01\x12*\n" +
	"\x0epromotion_type\x180 \x01(\tH/R\rpromotionType\x88\x01\x01\x12-\n" +
	"\x10page_instance_id\x181 \x01(\tH0R\x0epageInstanceId\x88\x01\x01\x12*\n" +
	"\x0einteraction_id\x182 \x01(\tH1R\rinteractionId\x88\x01\x01\x12/\n" +
	"\x11parent_play_track\x183 \x01(\tH2R\x0fparentPlayTrack\x88\x01\x01\x12&\n" +
	"\fcore_version\x184 \x01(\x03H3R\vcoreVersion\x88\x01\x01\x12=\n" +
	"\x18ms_narration_overlapping\x185 \x01(\x03H4R\x16msNarrationOverlapping\x88\x01\x01\x12\"\n" +
	"\n" +
	"ms_trimmed\x186 \x01(\x03H5R\tmsTrimmed\x88\x01\x01\x121\n" +
	"\x12ms_nominal_trimmed\x187 \x01(\x03H6R\x10msNominalTrimmed\x88\x01\x01B\x12\n" +
	"\x10_sequence_numberB\x0e\n" +
	"\f_sequence_idB\x0e\n" +
	"\f_playback_idB\x15\n" +
	"\x13_parent_playback_idB\x0f\n" +
	"\r_source_startB\x0f\n" +
	"\r_reason_startB\r\n" +
	"\v_source_endB\r\n" +
	"\v_reason_endB\x0f\n" +
	"\r_bytes_playedB\x10\n" +
	"\x0e_bytes_in_songB\f\n" +
	"\n" +
	"_ms_playedB\x14\n" +
	"\x12_ms_nominal_playedB\x0f\n" +
	"\r_ms_total_estB\x11\n" +
	"\x0f_ms_rcv_latencyB\x11\n" +
	"\x0f_ms_overlappingB\r\n" +
	"\v_n_seekbackB\x0e\n" +
	"\f_ms_seekbackB\f\n" +
	"\n" +
	"_n_seekfwdB\r\n" +
	"\v_ms_seekfwdB\r\n" +
	"\v_ms_latencyB\r\n" +
	"\v_ui_latencyB\f\n" +
	"\n" +
	"_player_idB\x11\n" +
	"\x0f_ms_key_latencyB\x0e\n" +
	"\f_offline_keyB\r\n" +
	"\v_cached_keyB\f\n" +
	"\n" +
	"_n_stutterB\x0e\n" +
	"\f_p_lowbufferB\n" +
	"\n" +
	"\b_shuffleB\x10\n" +
	"\x0e_max_continousB\x0f\n" +
	"\r_union_playedB\x13\n" +
	"\x11_artificial_delayB\n" +
	"\n" +
	"\b_bitrateB\x0f\n" +
	"\r_play_contextB\r\n" +
	"\v_audiocodecB\r\n" +
	"\v_play_trackB\x10\n" +
	"\x0e_display_trackB\n" +
	"\n" +
	"\b_offlineB\x14\n" +
	"\x12_offline_timestampB\x11\n" +
	"\x0f_incognito_modeB\v\n" +
	"\t_providerB\n" +
	"\n" +
	"\b_refererB\x13\n" +
	"\x11_referrer_versionB\x12\n" +
	"\x10_referrer_vendorB\r\n" +
	"\v_transitionB\x11\n" +
	"\x0f_streaming_ruleB\x0e\n" +
	"\f_gaia_dev_idB\x0e\n" +
	"\f_accepted_tcB\x11\n" +
	"\x0f_promotion_typeB\x13\n" +
	"\x11_page_instance_idB\x11\n" +
	"\x0f_interaction_idB\x14\n" +
	"\x12_parent_play_trackB\x0f\n" +
	"\r_core_versionB\x1b\n" +
	"\x19_ms_narration_overlappingB\r\n" +
	"\v_ms_trimmedB\x15\n" +
	"\x13_ms_nominal_trimmed\"\xf2\x05\n" +
	" MetadataExtensionClientStatistic\x12\x1c\n" +
	"\atask_id\x18\x01 \x01(\fH\x00R\x06taskId\x88\x01\x01\x12\"\n" +
	"\n" +
	"feature_id\x18\x02 \x01(\tH\x01R\tfeatureId\x88\x01\x01\x12+\n" +
	"\x0fis_online_param\x18\x03 \x01(\bH\x02R\risOnlineParam\x88\x01\x01\x12>\n" +
	"\x19num_extensions_with_etags\x18\x04 \x01(\x05H\x03R\x16numExtensionsWithEtags\x88\x01\x01\x12=\n" +
	"\x18num_extensions_requested\x18\x05 \x01(\x05H\x04R\x16numExtensionsRequested\x88\x01\x01\x127\n" +
	"\x15num_extensions_needed\x18\x06 \x01(\x05H\x05R\x13numExtensionsNeeded\x88\x01\x01\x121\n" +
	"\x12num_uris_requested\x18\a \x01(\x05H\x06R\x10numUrisRequested\x88\x01\x01\x12+\n" +
	"\x0fnum_uris_needed\x18\b \x01(\x05H\aR\rnumUrisNeeded\x88\x01\x01\x127\n" +
	"\x15num_prepared_requests\x18\t \x01(\x05H\bR\x13numPreparedRequests\x88\x01\x01\x12/\n" +
	"\x11num_sent_requests\x18\n" +
	" \x01(\x05H\tR\x0fnumSentRequests\x88\x01\x01B\n" +
	"\n" +
	"\b_task_idB\r\n" +
	"\v_feature_idB\x12\n" +
	"\x10_is_online_paramB\x1c\n" +
	"\x1a_num_extensions_with_etagsB\x1b\n" +
	"\x19_num_extensions_requestedB\x18\n" +
	"\x16_num_extensions_neededB\x15\n" +
	"\x13_num_uris_requestedB\x12\n" +
	"\x10_num_uris_neededB\x18\n" +
	"\x16_num_prepared_requestsB\x14\n" +
	"\x12_num_sent_requests\"\x81\x04\n" +
	"\rPlaybackError\x12\x1c\n" +
	"\afile_id\x18\x01 \x01(\fH\x00R\x06fileId\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x02 \x01(\fH\x01R\n" +
	"playbackId\x88\x01\x01\x12\x1e\n" +
	"\btrack_id\x18\x03 \x01(\tH\x02R\atrackId\x88\x01\x01\x12\x1d\n" +
	"\abitrate\x18\x04 \x01(\x03H\x03R\abitrate\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_code\x18\x05 \x01(\x03H\x04R\terrorCode\x88\x01\x01\x12\x19\n" +
	"\x05fatal\x18\x06 \x01(\bH\x05R\x05fatal\x88\x01\x01\x12#\n" +
	"\n" +
	"audiocodec\x18\a \x01(\tH\x06R\n" +
	"audiocodec\x88\x01\x01\x12*\n" +
	"\x0eexternal_track\x18\b \x01(\bH\aR\rexternalTrack\x88\x01\x01\x12$\n" +
	"\vposition_ms\x18\t \x01(\x03H\bR\n" +
	"positionMs\x88\x01\x01\x12&\n" +
	"\fkey_checksum\x18\n" +
	" \x01(\x03H\tR\vkeyChecksum\x88\x01\x01B\n" +
	"\n" +
	"\b_file_idB\x0e\n" +
	"\f_playback_idB\v\n" +
	"\t_track_idB\n" +
	"\n" +
	"\b_bitrateB\r\n" +
	"\v_error_codeB\b\n" +
	"\x06_fatalB\r\n" +
	"\v_audiocodecB\x11\n" +
	"\x0f_external_trackB\x0e\n" +
	"\f_position_msB\x0f\n" +
	"\r_key_checksum\"\x92\x03\n" +
	"\rPlaybackRetry\x12\x19\n" +
	"\x05track\x18\x01 \x01(\tH\x00R\x05track\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x02 \x01(\fH\x01R\n" +
	"playbackId\x88\x01\x01\x12\x1b\n" +
	"\x06method\x18\x03 \x01(\tH\x02R\x06method\x88\x01\x01\x12\x1b\n" +
	"\x06status\x18\x04 \x01(\tH\x03R\x06status\x88\x01\x01\x12\x1b\n" +
	"\x06reason\x18\x05 \x01(\tH\x04R\x06reason\x88\x01\x01\x12 \n" +
	"\tprev_etag\x18\x06 \x01(\tH\x05R\bprevEtag\x88\x01\x01\x12$\n" +
	"\vprev_expiry\x18\a \x01(\x03H\x06R\n" +
	"prevExpiry\x88\x01\x01\x12\x17\n" +
	"\x04etag\x18\b \x01(\tH\aR\x04etag\x88\x01\x01\x12\x1b\n" +
	"\x06expiry\x18\t \x01(\x03H\bR\x06expiry\x88\x01\x01B\b\n" +
	"\x06_trackB\x0e\n" +
	"\f_playback_idB\t\n" +
	"\a_methodB\t\n" +
	"\a_statusB\t\n" +
	"\a_reasonB\f\n" +
	"\n" +
	"_prev_etagB\x0e\n" +
	"\f_prev_expiryB\a\n" +
	"\x05_etagB\t\n" +
	"\a_expiry\"\xd4\x01\n" +
	"\x10PlaybackSegments\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x12 \n" +
	"\ttrack_uri\x18\x02 \x01(\tH\x01R\btrackUri\x88\x01\x01\x12\x1f\n" +
	"\boverflow\x18\x03 \x01(\bH\x02R\boverflow\x88\x01\x01\x12\x1f\n" +
	"\bsegments\x18\x04 \x01(\tH\x03R\bsegments\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\f\n" +
	"\n" +
	"_track_uriB\v\n" +
	"\t_overflowB\v\n" +
	"\t_segments\"\x88\x03\n" +
	"\bPrefetch\x12#\n" +
	"\n" +
	"strategies\x18\x01 \x01(\x03H\x00R\n" +
	"strategies\x88\x01\x01\x12\x1f\n" +
	"\bstrategy\x18\x02 \x01(\x03H\x01R\bstrategy\x88\x01\x01\x12\x1c\n" +
	"\afile_id\x18\x03 \x01(\fH\x02R\x06fileId\x88\x01\x01\x12\x19\n" +
	"\x05track\x18\x04 \x01(\tH\x03R\x05track\x88\x01\x01\x12*\n" +
	"\x0eprefetch_index\x18\x05 \x01(\x03H\x04R\rprefetchIndex\x88\x01\x01\x123\n" +
	"\x13current_window_size\x18\x06 \x01(\x03H\x05R\x11currentWindowSize\x88\x01\x01\x12+\n" +
	"\x0fmax_window_size\x18\a \x01(\x03H\x06R\rmaxWindowSize\x88\x01\x01B\r\n" +
	"\v_strategiesB\v\n" +
	"\t_strategyB\n" +
	"\n" +
	"\b_file_idB\b\n" +
	"\x06_trackB\x11\n" +
	"\x0f_prefetch_indexB\x16\n" +
	"\x14_current_window_sizeB\x12\n" +
	"\x10_max_window_size\"\xd6\t\n" +
	"\x16PrototypeStreamSegment\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x12*\n" +
	"\x0estart_position\x18\x02 \x01(\x03H\x01R\rstartPosition\x88\x01\x01\x12&\n" +
	"\fend_position\x18\x03 \x01(\x03H\x02R\vendPosition\x88\x01\x01\x12 \n" +
	"\tms_played\x18\x04 \x01(\x05H\x03R\bmsPlayed\x88\x01\x01\x12&\n" +
	"\freason_start\x18\x05 \x01(\tH\x04R\vreasonStart\x88\x01\x01\x12\"\n" +
	"\n" +
	"reason_end\x18\x06 \x01(\tH\x05R\treasonEnd\x88\x01\x01\x12*\n" +
	"\x0eplayback_speed\x18\a \x01(\x01H\x06R\rplaybackSpeed\x88\x01\x01\x12,\n" +
	"\x0fstart_timestamp\x18\b \x01(\x03H\aR\x0estartTimestamp\x88\x01\x01\x12(\n" +
	"\rend_timestamp\x18\t \x01(\x03H\bR\fendTimestamp\x88\x01\x01\x12\x1c\n" +
	"\ais_seek\x18\n" +
	" \x01(\bH\tR\x06isSeek\x88\x01\x01\x12\x1e\n" +
	"\bis_pause\x18\v \x01(\bH\n" +
	"R\aisPause\x88\x01\x01\x12$\n" +
	"\vsequence_id\x18\f \x01(\x03H\vR\n" +
	"sequenceId\x88\x01\x01\x12\"\n" +
	"\n" +
	"media_type\x18\r \x01(\tH\fR\tmediaType\x88\x01\x01\x12&\n" +
	"\fcore_version\x18\x0e \x01(\x03H\rR\vcoreVersion\x88\x01\x01\x12$\n" +
	"\vcontent_uri\x18\x0f \x01(\tH\x0eR\n" +
	"contentUri\x88\x01\x01\x12?\n" +
	"\x19start_monotonic_timestamp\x18\x10 \x01(\x03H\x0fR\x17startMonotonicTimestamp\x88\x01\x01\x12;\n" +
	"\x17end_monotonic_timestamp\x18\x11 \x01(\x03H\x10R\x15endMonotonicTimestamp\x88\x01\x01\x12\x1c\n" +
	"\ais_last\x18\x12 \x01(\bH\x11R\x06isLast\x88\x01\x01\x12\x1f\n" +
	"\bprovider\x18\x13 \x01(\tH\x12R\bprovider\x88\x01\x01\x12*\n" +
	"\x0eplayback_stack\x18\x14 \x01(\tH\x13R\rplaybackStack\x88\x01\x01\x12&\n" +
	"\ffeature_uuid\x18\x15 \x01(\tH\x14R\vfeatureUuid\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\x11\n" +
	"\x0f_start_positionB\x0f\n" +
	"\r_end_positionB\f\n" +
	"\n" +
	"_ms_playedB\x0f\n" +
	"\r_reason_startB\r\n" +
	"\v_reason_endB\x11\n" +
	"\x0f_playback_speedB\x12\n" +
	"\x10_start_timestampB\x10\n" +
	"\x0e_end_timestampB\n" +
	"\n" +
	"\b_is_seekB\v\n" +
	"\t_is_pauseB\x0e\n" +
	"\f_sequence_idB\r\n" +
	"\v_media_typeB\x0f\n" +
	"\r_core_versionB\x0e\n" +
	"\f_content_uriB\x1c\n" +
	"\x1a_start_monotonic_timestampB\x1a\n" +
	"\x18_end_monotonic_timestampB\n" +
	"\n" +
	"\b_is_lastB\v\n" +
	"\t_providerB\x11\n" +
	"\x0f_playback_stackB\x0f\n" +
	"\r_feature_uuid\"\xd1\x1b\n" +
	"\rRawCoreStream\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x121\n" +
	"\x12parent_playback_id\x18\x02 \x01(\fH\x01R\x10parentPlaybackId\x88\x01\x01\x12-\n" +
	"\x10video_session_id\x18\x03 \x01(\tH\x02R\x0evideoSessionId\x88\x01\x01\x12\x1e\n" +
	"\bmedia_id\x18\x04 \x01(\fH\x03R\amediaId\x88\x01\x01\x12\"\n" +
	"\n" +
	"media_type\x18\x05 \x01(\tH\x04R\tmediaType\x88\x01\x01\x122\n" +
	"\x12feature_identifier\x18\x06 \x01(\tH\x05R\x11featureIdentifier\x88\x01\x01\x12,\n" +
	"\x0ffeature_version\x18\a \x01(\tH\x06R\x0efeatureVersion\x88\x01\x01\x12\x1e\n" +
	"\bview_uri\x18\b \x01(\tH\aR\aviewUri\x88\x01\x01\x12&\n" +
	"\fsource_start\x18\t \x01(\tH\bR\vsourceStart\x88\x01\x01\x12&\n" +
	"\freason_start\x18\n" +
	" \x01(\tH\tR\vreasonStart\x88\x01\x01\x12\"\n" +
	"\n" +
	"source_end\x18\v \x01(\tH\n" +
	"R\tsourceEnd\x88\x01\x01\x12\"\n" +
	"\n" +
	"reason_end\x18\f \x01(\tH\vR\treasonEnd\x88\x01\x01\x123\n" +
	"\x13playback_start_time\x18\r \x01(\x03H\fR\x11playbackStartTime\x88\x01\x01\x12 \n" +
	"\tms_played\x18\x0e \x01(\x05H\rR\bmsPlayed\x88\x01\x01\x12/\n" +
	"\x11ms_played_nominal\x18\x0f \x01(\x05H\x0eR\x0fmsPlayedNominal\x88\x01\x01\x127\n" +
	"\x15ms_played_overlapping\x18\x10 \x01(\x05H\x0fR\x13msPlayedOverlapping\x88\x01\x01\x12+\n" +
	"\x0fms_played_video\x18\x11 \x01(\x05H\x10R\rmsPlayedVideo\x88\x01\x01\x125\n" +
	"\x14ms_played_background\x18\x12 \x01(\x05H\x11R\x12msPlayedBackground\x88\x01\x01\x125\n" +
	"\x14ms_played_fullscreen\x18\x13 \x01(\x05H\x12R\x12msPlayedFullscreen\x88\x01\x01\x12\x17\n" +
	"\x04live\x18\x14 \x01(\bH\x13R\x04live\x88\x01\x01\x12\x1d\n" +
	"\ashuffle\x18\x15 \x01(\bH\x14R\ashuffle\x88\x01\x01\x12&\n" +
	"\faudio_format\x18\x16 \x01(\tH\x15R\vaudioFormat\x88\x01\x01\x12&\n" +
	"\fplay_context\x18\x17 \x01(\tH\x16R\vplayContext\x88\x01\x01\x12$\n" +
	"\vcontent_uri\x18\x18 \x01(\tH\x17R\n" +
	"contentUri\x88\x01\x01\x127\n" +
	"\x15displayed_content_uri\x18\x19 \x01(\tH\x18R\x13displayedContentUri\x88\x01\x01\x127\n" +
	"\x15content_is_downloaded\x18\x1a \x01(\bH\x19R\x13contentIsDownloaded\x88\x01\x01\x12*\n" +
	"\x0eincognito_mode\x18\x1b \x01(\bH\x1aR\rincognitoMode\x88\x01\x01\x12\x1f\n" +
	"\bprovider\x18\x1c \x01(\tH\x1bR\bprovider\x88\x01\x01\x12\x1f\n" +
	"\breferrer\x18\x1d \x01(\tH\x1cR\breferrer\x88\x01\x01\x12.\n" +
	"\x10referrer_version\x18\x1e \x01(\tH\x1dR\x0freferrerVersion\x88\x01\x01\x12,\n" +
	"\x0freferrer_vendor\x18\x1f \x01(\tH\x1eR\x0ereferrerVendor\x88\x01\x01\x12*\n" +
	"\x0estreaming_rule\x18  \x01(\tH\x1fR\rstreamingRule\x88\x01\x01\x12D\n" +
	"\x1cconnect_controller_device_id\x18! \x01(\tH R\x19connectControllerDeviceId\x88\x01\x01\x12I\n" +
	"\x1fconnect_controller_device_id_v2\x18, \x01(\tH!R\x1bconnectControllerDeviceIdV2\x88\x01\x01\x12-\n" +
	"\x10page_instance_id\x18\" \x01(\tH\"R\x0epageInstanceId\x88\x01\x01\x12*\n" +
	"\x0einteraction_id\x18# \x01(\tH#R\rinteractionId\x88\x01\x01\x121\n" +
	"\x12parent_content_uri\x18$ \x01(\tH$R\x10parentContentUri\x88\x01\x01\x12&\n" +
	"\fcore_version\x18% \x01(\x03H%R\vcoreVersion\x88\x01\x01\x12$\n" +
	"\vcore_bundle\x18& \x01(\tH&R\n" +
	"coreBundle\x88\x01\x01\x121\n" +
	"\x12is_assumed_premium\x18' \x01(\bH'R\x10isAssumedPremium\x88\x01\x01\x121\n" +
	"\x12ms_played_external\x18( \x01(\x05H(R\x10msPlayedExternal\x88\x01\x01\x12/\n" +
	"\x11local_content_uri\x18) \x01(\tH)R\x0flocalContentUri\x88\x01\x01\x12G\n" +
	"\x1eclient_offline_at_stream_start\x18* \x01(\bH*R\x1aclientOfflineAtStreamStart\x88\x01\x01\x12.\n" +
	"\x10social_listening\x18+ \x01(\bH+R\x0fsocialListening\x88\x01\x01\x12*\n" +
	"\x0eplayback_stack\x18- \x01(\tH,R\rplaybackStack\x88\x01\x01\x12=\n" +
	"\x18ms_narration_overlapping\x18. \x01(\x05H-R\x16msNarrationOverlapping\x88\x01\x01\x12E\n" +
	"\x1ccustom_reporting_attribution\x18/ \x01(\tH.R\x1acustomReportingAttribution\x88\x01\x01\x12$\n" +
	"\vdecision_id\x180 \x01(\tH/R\n" +
	"decisionId\x88\x01\x01\x12<\n" +
	"\x18play_context_decision_id\x181 \x01(\tH0R\x15playContextDecisionId\x88\x01\x01\x12\"\n" +
	"\n" +
	"ms_trimmed\x182 \x01(\x05H1R\tmsTrimmed\x88\x01\x01\x121\n" +
	"\x12ms_nominal_trimmed\x183 \x01(\x05H2R\x10msNominalTrimmed\x88\x01\x01\x12&\n" +
	"\ffeature_uuid\x184 \x01(\tH3R\vfeatureUuid\x88\x01\x01\x12 \n" +
	"\tstream_id\x185 \x01(\fH4R\bstreamId\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\x15\n" +
	"\x13_parent_playback_idB\x13\n" +
	"\x11_video_session_idB\v\n" +
	"\t_media_idB\r\n" +
	"\v_media_typeB\x15\n" +
	"\x13_feature_identifierB\x12\n" +
	"\x10_feature_versionB\v\n" +
	"\t_view_uriB\x0f\n" +
	"\r_source_startB\x0f\n" +
	"\r_reason_startB\r\n" +
	"\v_source_endB\r\n" +
	"\v_reason_endB\x16\n" +
	"\x14_playback_start_timeB\f\n" +
	"\n" +
	"_ms_playedB\x14\n" +
	"\x12_ms_played_nominalB\x18\n" +
	"\x16_ms_played_overlappingB\x12\n" +
	"\x10_ms_played_videoB\x17\n" +
	"\x15_ms_played_backgroundB\x17\n" +
	"\x15_ms_played_fullscreenB\a\n" +
	"\x05_liveB\n" +
	"\n" +
	"\b_shuffleB\x0f\n" +
	"\r_audio_formatB\x0f\n" +
	"\r_play_contextB\x0e\n" +
	"\f_content_uriB\x18\n" +
	"\x16_displayed_content_uriB\x18\n" +
	"\x16_content_is_downloadedB\x11\n" +
	"\x0f_incognito_modeB\v\n" +
	"\t_providerB\v\n" +
	"\t_referrerB\x13\n" +
	"\x11_referrer_versionB\x12\n" +
	"\x10_referrer_vendorB\x11\n" +
	"\x0f_streaming_ruleB\x1f\n" +
	"\x1d_connect_controller_device_idB\"\n" +
	" _connect_controller_device_id_v2B\x13\n" +
	"\x11_page_instance_idB\x11\n" +
	"\x0f_interaction_idB\x15\n" +
	"\x13_parent_content_uriB\x0f\n" +
	"\r_core_versionB\x0e\n" +
	"\f_core_bundleB\x15\n" +
	"\x13_is_assumed_premiumB\x15\n" +
	"\x13_ms_played_externalB\x14\n" +
	"\x12_local_content_uriB!\n" +
	"\x1f_client_offline_at_stream_startB\x13\n" +
	"\x11_social_listeningB\x11\n" +
	"\x0f_playback_stackB\x1b\n" +
	"\x19_ms_narration_overlappingB\x1f\n" +
	"\x1d_custom_reporting_attributionB\x0e\n" +
	"\f_decision_idB\x1b\n" +
	"\x19_play_context_decision_idB\r\n" +
	"\v_ms_trimmedB\x15\n" +
	"\x13_ms_nominal_trimmedB\x0f\n" +
	"\r_feature_uuidB\f\n" +
	"\n" +
	"_stream_id\"\xa5\x02\n" +
	"\x12RawCoreStreamStart\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x12$\n" +
	"\vcontent_uri\x18\x02 \x01(\tH\x01R\n" +
	"contentUri\x88\x01\x01\x12\"\n" +
	"\n" +
	"media_type\x18\x03 \x01(\tH\x02R\tmediaType\x88\x01\x01\x12&\n" +
	"\freason_start\x18\x04 \x01(\tH\x03R\vreasonStart\x88\x01\x01\x12&\n" +
	"\fcore_version\x18\x05 \x01(\x03H\x04R\vcoreVersion\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\x0e\n" +
	"\f_content_uriB\r\n" +
	"\v_media_typeB\x0f\n" +
	"\r_reason_startB\x0f\n" +
	"\r_core_version\"\xa6\x0f\n" +
	"\x14RawCoreStreamSegment\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x12*\n" +
	"\x0estart_position\x18\x02 \x01(\x03H\x01R\rstartPosition\x88\x01\x01\x12&\n" +
	"\fend_position\x18\x03 \x01(\x03H\x02R\vendPosition\x88\x01\x01\x12 \n" +
	"\tms_played\x18\x04 \x01(\x05H\x03R\bmsPlayed\x88\x01\x01\x12&\n" +
	"\freason_start\x18\x05 \x01(\tH\x04R\vreasonStart\x88\x01\x01\x12\"\n" +
	"\n" +
	"reason_end\x18\x06 \x01(\tH\x05R\treasonEnd\x88\x01\x01\x12*\n" +
	"\x0eplayback_speed\x18\a \x01(\x01H\x06R\rplaybackSpeed\x88\x01\x01\x12,\n" +
	"\x0fstart_timestamp\x18\b \x01(\x03H\aR\x0estartTimestamp\x88\x01\x01\x12(\n" +
	"\rend_timestamp\x18\t \x01(\x03H\bR\fendTimestamp\x88\x01\x01\x12\x1c\n" +
	"\ais_seek\x18\n" +
	" \x01(\bH\tR\x06isSeek\x88\x01\x01\x12\x1e\n" +
	"\bis_pause\x18\v \x01(\bH\n" +
	"R\aisPause\x88\x01\x01\x12$\n" +
	"\vsequence_id\x18\f \x01(\x03H\vR\n" +
	"sequenceId\x88\x01\x01\x12\"\n" +
	"\n" +
	"media_type\x18\r \x01(\tH\fR\tmediaType\x88\x01\x01\x12&\n" +
	"\fcore_version\x18\x0e \x01(\x03H\rR\vcoreVersion\x88\x01\x01\x12$\n" +
	"\vcontent_uri\x18\x0f \x01(\tH\x0eR\n" +
	"contentUri\x88\x01\x01\x12?\n" +
	"\x19start_monotonic_timestamp\x18\x10 \x01(\x03H\x0fR\x17startMonotonicTimestamp\x88\x01\x01\x12;\n" +
	"\x17end_monotonic_timestamp\x18\x11 \x01(\x03H\x10R\x15endMonotonicTimestamp\x88\x01\x01\x12\x1c\n" +
	"\ais_last\x18\x12 \x01(\bH\x11R\x06isLast\x88\x01\x01\x12\x1f\n" +
	"\bprovider\x18\x13 \x01(\tH\x12R\bprovider\x88\x01\x01\x12*\n" +
	"\x0eplayback_stack\x18\x14 \x01(\tH\x13R\rplaybackStack\x88\x01\x01\x12&\n" +
	"\ffeature_uuid\x18\x15 \x01(\tH\x14R\vfeatureUuid\x88\x01\x01\x12 \n" +
	"\tstream_id\x18\x16 \x01(\fH\x15R\bstreamId\x88\x01\x01\x12-\n" +
	"\x10page_instance_id\x18\x17 \x01(\tH\x16R\x0epageInstanceId\x88\x01\x01\x12*\n" +
	"\x0einteraction_id\x18\x18 \x01(\tH\x17R\rinteractionId\x88\x01\x01\x12&\n" +
	"\fplay_context\x18\x19 \x01(\tH\x18R\vplayContext\x88\x01\x01\x12=\n" +
	"\x18start_timestamp_internal\x18\x1a \x01(\x03H\x19R\x16startTimestampInternal\x88\x01\x01\x129\n" +
	"\x16end_timestamp_internal\x18\x1b \x01(\x03H\x1aR\x14endTimestampInternal\x88\x01\x01\x125\n" +
	"\x14sequence_id_internal\x18\x1c \x01(\x03H\x1bR\x12sequenceIdInternal\x88\x01\x01\x12#\n" +
	"\vis_audio_on\x18\x1d \x01(\bH\x1cR\tisAudioOn\x88\x01\x01\x12#\n" +
	"\vis_video_on\x18\x1e \x01(\bH\x1dR\tisVideoOn\x88\x01\x01\x12(\n" +
	"\rvideo_surface\x18\x1f \x01(\tH\x1eR\fvideoSurface\x88\x01\x01\x12)\n" +
	"\x0eis_system_seek\x18  \x01(\bH\x1fR\fisSystemSeek\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\x11\n" +
	"\x0f_start_positionB\x0f\n" +
	"\r_end_positionB\f\n" +
	"\n" +
	"_ms_playedB\x0f\n" +
	"\r_reason_startB\r\n" +
	"\v_reason_endB\x11\n" +
	"\x0f_playback_speedB\x12\n" +
	"\x10_start_timestampB\x10\n" +
	"\x0e_end_timestampB\n" +
	"\n" +
	"\b_is_seekB\v\n" +
	"\t_is_pauseB\x0e\n" +
	"\f_sequence_idB\r\n" +
	"\v_media_typeB\x0f\n" +
	"\r_core_versionB\x0e\n" +
	"\f_content_uriB\x1c\n" +
	"\x1a_start_monotonic_timestampB\x1a\n" +
	"\x18_end_monotonic_timestampB\n" +
	"\n" +
	"\b_is_lastB\v\n" +
	"\t_providerB\x11\n" +
	"\x0f_playback_stackB\x0f\n" +
	"\r_feature_uuidB\f\n" +
	"\n" +
	"_stream_idB\x13\n" +
	"\x11_page_instance_idB\x11\n" +
	"\x0f_interaction_idB\x0f\n" +
	"\r_play_contextB\x1b\n" +
	"\x19_start_timestamp_internalB\x19\n" +
	"\x17_end_timestamp_internalB\x17\n" +
	"\x15_sequence_id_internalB\x0e\n" +
	"\f_is_audio_onB\x0e\n" +
	"\f_is_video_onB\x10\n" +
	"\x0e_video_surfaceB\x11\n" +
	"\x0f_is_system_seek\"\xfe\x15\n" +
	"\x10ShowRequestDebug\x12A\n" +
	"\x1bnum_replies_is_online_false\x18\x01 \x01(\x05H\x00R\x17numRepliesIsOnlineFalse\x88\x01\x01\x12?\n" +
	"\x1anum_replies_is_online_true\x18\x02 \x01(\x05H\x01R\x16numRepliesIsOnlineTrue\x88\x01\x01\x129\n" +
	"\x17last_reply_episode_id_0\x18\x03 \x01(\fH\x02R\x13lastReplyEpisodeId0\x88\x01\x01\x129\n" +
	"\x17last_reply_episode_id_1\x18\x04 \x01(\fH\x03R\x13lastReplyEpisodeId1\x88\x01\x01\x129\n" +
	"\x17last_reply_episode_id_2\x18\x05 \x01(\fH\x04R\x13lastReplyEpisodeId2\x88\x01\x01\x12I\n" +
	" num_load_show_ok_is_online_false\x18\x06 \x01(\x05H\x05R\x1anumLoadShowOkIsOnlineFalse\x88\x01\x01\x12G\n" +
	"\x1fnum_load_show_ok_is_online_true\x18\a \x01(\x05H\x06R\x19numLoadShowOkIsOnlineTrue\x88\x01\x01\x12M\n" +
	"\"num_load_show_fail_is_online_false\x18\b \x01(\x05H\aR\x1cnumLoadShowFailIsOnlineFalse\x88\x01\x01\x12K\n" +
	"!num_load_show_fail_is_online_true\x18\t \x01(\x05H\bR\x1bnumLoadShowFailIsOnlineTrue\x88\x01\x01\x12E\n" +
	"\x1elast_load_show_v4_episode_id_0\x18\n" +
	" \x01(\fH\tR\x18lastLoadShowV4EpisodeId0\x88\x01\x01\x12d\n" +
	".last_load_show_v4_episode_0_cache_availability\x18\v \x01(\x05H\n" +
	"R'lastLoadShowV4Episode0CacheAvailability\x88\x01\x01\x12E\n" +
	"\x1elast_load_show_v4_episode_id_1\x18\f \x01(\fH\vR\x18lastLoadShowV4EpisodeId1\x88\x01\x01\x12d\n" +
	".last_load_show_v4_episode_1_cache_availability\x18\r \x01(\x05H\fR'lastLoadShowV4Episode1CacheAvailability\x88\x01\x01\x12E\n" +
	"\x1elast_load_show_v4_episode_id_2\x18\x0e \x01(\fH\rR\x18lastLoadShowV4EpisodeId2\x88\x01\x01\x12d\n" +
	".last_load_show_v4_episode_2_cache_availability\x18\x0f \x01(\x05H\x0eR'lastLoadShowV4Episode2CacheAvailability\x88\x01\x01\x127\n" +
	"\x16last_load_show_v4_etag\x18\x10 \x01(\tH\x0fR\x12lastLoadShowV4Etag\x88\x01\x01\x12+\n" +
	"\x0flast_load_error\x18\x11 \x01(\x05H\x10R\rlastLoadError\x88\x01\x01\x12 \n" +
	"\tis_online\x18\x12 \x01(\bH\x11R\bisOnline\x88\x01\x01\x122\n" +
	"\x12optimization_level\x18\x13 \x01(\x05H\x12R\x11optimizationLevel\x88\x01\x01\x12\x1c\n" +
	"\aenv_now\x18\x14 \x01(\x05H\x13R\x06envNow\x88\x01\x01\x12\x1e\n" +
	"\bshow_uri\x18\x15 \x01(\tH\x14R\ashowUri\x88\x01\x01\x12S\n" +
	"%last_load_show_v4_stored_at_timestamp\x18\x16 \x01(\x05H\x15R\x1flastLoadShowV4StoredAtTimestamp\x88\x01\x01\x12A\n" +
	"\x1elast_load_show_v4_episode_uris\x18\x17 \x03(\tR\x19lastLoadShowV4EpisodeUris\x12`\n" +
	".last_load_show_v4_episode_cache_availabilities\x18\x18 \x03(\x05R(lastLoadShowV4EpisodeCacheAvailabilities\x12e\n" +
	"1last_load_show_v4_episode_cache_expiry_timestamps\x18\x19 \x03(\x05R*lastLoadShowV4EpisodeCacheExpiryTimestamps\x12i\n" +
	"3last_load_show_v4_episode_offline_expiry_timestamps\x18\x1a \x03(\x05R,lastLoadShowV4EpisodeOfflineExpiryTimestamps\x12C\n" +
	"\x1flast_load_show_v4_episode_etags\x18\x1b \x03(\tR\x1alastLoadShowV4EpisodeEtags\x12P\n" +
	"&last_load_show_v4_episode_status_codes\x18\x1c \x03(\x05R lastLoadShowV4EpisodeStatusCodes\x12_\n" +
	".last_load_show_v4_episode_stored_at_timestamps\x18\x1d \x03(\x05R'lastLoadShowV4EpisodeStoredAtTimestampsB\x1e\n" +
	"\x1c_num_replies_is_online_falseB\x1d\n" +
	"\x1b_num_replies_is_online_trueB\x1a\n" +
	"\x18_last_reply_episode_id_0B\x1a\n" +
	"\x18_last_reply_episode_id_1B\x1a\n" +
	"\x18_last_reply_episode_id_2B#\n" +
	"!_num_load_show_ok_is_online_falseB\"\n" +
	" _num_load_show_ok_is_online_trueB%\n" +
	"#_num_load_show_fail_is_online_falseB$\n" +
	"\"_num_load_show_fail_is_online_trueB!\n" +
	"\x1f_last_load_show_v4_episode_id_0B1\n" +
	"/_last_load_show_v4_episode_0_cache_availabilityB!\n" +
	"\x1f_last_load_show_v4_episode_id_1B1\n" +
	"/_last_load_show_v4_episode_1_cache_availabilityB!\n" +
	"\x1f_last_load_show_v4_episode_id_2B1\n" +
	"/_last_load_show_v4_episode_2_cache_availabilityB\x19\n" +
	"\x17_last_load_show_v4_etagB\x12\n" +
	"\x10_last_load_errorB\f\n" +
	"\n" +
	"_is_onlineB\x15\n" +
	"\x13_optimization_levelB\n" +
	"\n" +
	"\b_env_nowB\v\n" +
	"\t_show_uriB(\n" +
	"&_last_load_show_v4_stored_at_timestamp\"\xb8\x01\n" +
	"\x14StreamReportingError\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x12\"\n" +
	"\n" +
	"error_type\x18\x02 \x01(\tH\x01R\terrorType\x88\x01\x01\x12&\n" +
	"\ferror_reason\x18\x03 \x01(\tH\x02R\verrorReason\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\r\n" +
	"\v_error_typeB\x0f\n" +
	"\r_error_reason\"\xc4\x03\n" +
	"\x1cStreamReportingSegmentsDebug\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x12\x1a\n" +
	"\bsegments\x18\x02 \x03(\tR\bsegments\x12\x14\n" +
	"\x05start\x18\x03 \x03(\x03R\x05start\x12\x10\n" +
	"\x03end\x18\x04 \x03(\x03R\x03end\x12\x14\n" +
	"\x05video\x18\x05 \x03(\bR\x05video\x12 \n" +
	"\voverlapping\x18\x06 \x03(\bR\voverlapping\x12\x1e\n" +
	"\n" +
	"background\x18\a \x03(\bR\n" +
	"background\x12\x1e\n" +
	"\n" +
	"fullscreen\x18\b \x03(\bR\n" +
	"fullscreen\x12\x1a\n" +
	"\bexternal\x18\t \x03(\bR\bexternal\x12%\n" +
	"\x0eplayback_speed\x18\n" +
	" \x03(\x02R\rplaybackSpeed\x127\n" +
	"\x15app_session_timestamp\x18\v \x01(\x03H\x01R\x13appSessionTimestamp\x88\x01\x01\x12\x1c\n" +
	"\tnarration\x18\f \x03(\bR\tnarrationB\x0e\n" +
	"\f_playback_idB\x18\n" +
	"\x16_app_session_timestamp\"\xab\x06\n" +
	"\x1eStreamReportingDebugTracerTest\x125\n" +
	"\x14event_schema_version\x18\x01 \x01(\x03H\x00R\x12eventSchemaVersion\x88\x01\x01\x12,\n" +
	"\x0fmessage_version\x18\x02 \x01(\x03H\x01R\x0emessageVersion\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x03 \x01(\fH\x02R\n" +
	"playbackId\x88\x01\x01\x12&\n" +
	"\fcore_version\x18\x04 \x01(\x03H\x03R\vcoreVersion\x88\x01\x01\x12\x1a\n" +
	"\bsequence\x18\x05 \x03(\x05R\bsequence\x12$\n" +
	"\vreason_send\x18\x06 \x01(\tH\x04R\n" +
	"reasonSend\x88\x01\x01\x12*\n" +
	"\x0esend_iteration\x18\a \x01(\x03H\x05R\rsendIteration\x88\x01\x01\x12\"\n" +
	"\n" +
	"total_send\x18\b \x01(\x03H\x06R\ttotalSend\x88\x01\x01\x12#\n" +
	"\rstream_handle\x18\t \x03(\x05R\fstreamHandle\x125\n" +
	"\x17stream_data_holder_size\x18\n" +
	" \x03(\x03R\x14streamDataHolderSize\x12\x1c\n" +
	"\ttimestamp\x18\v \x03(\x03R\ttimestamp\x120\n" +
	"\x11initial_timestamp\x18\f \x01(\x03H\aR\x10initialTimestamp\x88\x01\x01\x12/\n" +
	"\x11core_version_tiny\x18\r \x01(\x03H\bR\x0fcoreVersionTiny\x88\x01\x01\x12)\n" +
	"\rconfiguration\x18\x0e \x01(\tH\tR\rconfiguration\x88\x01\x01B\x17\n" +
	"\x15_event_schema_versionB\x12\n" +
	"\x10_message_versionB\x0e\n" +
	"\f_playback_idB\x0f\n" +
	"\r_core_versionB\x0e\n" +
	"\f_reason_sendB\x11\n" +
	"\x0f_send_iterationB\r\n" +
	"\v_total_sendB\x14\n" +
	"\x12_initial_timestampB\x14\n" +
	"\x12_core_version_tinyB\x10\n" +
	"\x0e_configuration\"\xff\x03\n" +
	"\aStutter\x12\x1c\n" +
	"\afile_id\x18\x01 \x01(\fH\x00R\x06fileId\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x02 \x01(\fH\x01R\n" +
	"playbackId\x88\x01\x01\x12\x19\n" +
	"\x05track\x18\x03 \x01(\tH\x02R\x05track\x88\x01\x01\x12$\n" +
	"\vbuffer_size\x18\x04 \x01(\x03H\x03R\n" +
	"bufferSize\x88\x01\x01\x12+\n" +
	"\x0fmax_buffer_size\x18\x05 \x01(\x03H\x04R\rmaxBufferSize\x88\x01\x01\x12-\n" +
	"\x10file_byte_offset\x18\x06 \x01(\x03H\x05R\x0efileByteOffset\x88\x01\x01\x12+\n" +
	"\x0ffile_byte_total\x18\a \x01(\x03H\x06R\rfileByteTotal\x88\x01\x01\x12(\n" +
	"\rtarget_buffer\x18\b \x01(\x03H\aR\ftargetBuffer\x88\x01\x01\x12&\n" +
	"\faudio_driver\x18\t \x01(\tH\bR\vaudioDriver\x88\x01\x01B\n" +
	"\n" +
	"\b_file_idB\x0e\n" +
	"\f_playback_idB\b\n" +
	"\x06_trackB\x0e\n" +
	"\f_buffer_sizeB\x12\n" +
	"\x10_max_buffer_sizeB\x13\n" +
	"\x11_file_byte_offsetB\x12\n" +
	"\x10_file_byte_totalB\x10\n" +
	"\x0e_target_bufferB\x0f\n" +
	"\r_audio_driver\"\xaf\x03\n" +
	"\x1cTimeStretcherInstrumentation\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x123\n" +
	"\x13was_playback_paused\x18\x02 \x01(\bH\x01R\x11wasPlaybackPaused\x88\x01\x01\x12/\n" +
	"\x11total_buffer_size\x18\x03 \x01(\x03H\x02R\x0ftotalBufferSize\x88\x01\x01\x12+\n" +
	"\x0fnumber_of_calls\x18\x04 \x01(\x03H\x03R\rnumberOfCalls\x88\x01\x01\x12*\n" +
	"\x0etotal_duration\x18\x05 \x01(\x03H\x04R\rtotalDuration\x88\x01\x01\x12/\n" +
	"\x11duration_per_byte\x18\x06 \x01(\x02H\x05R\x0fdurationPerByte\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\x16\n" +
	"\x14_was_playback_pausedB\x14\n" +
	"\x12_total_buffer_sizeB\x12\n" +
	"\x10_number_of_callsB\x11\n" +
	"\x0f_total_durationB\x14\n" +
	"\x12_duration_per_byte\"\xa2\x06\n" +
	"\x0eTrackNotPlayed\x12$\n" +
	"\vplayback_id\x18\x01 \x01(\fH\x00R\n" +
	"playbackId\x88\x01\x01\x12&\n" +
	"\fsource_start\x18\x02 \x01(\tH\x01R\vsourceStart\x88\x01\x01\x12&\n" +
	"\freason_start\x18\x03 \x01(\tH\x02R\vreasonStart\x88\x01\x01\x12\"\n" +
	"\n" +
	"source_end\x18\x04 \x01(\tH\x03R\tsourceEnd\x88\x01\x01\x12\"\n" +
	"\n" +
	"reason_end\x18\x05 \x01(\tH\x04R\treasonEnd\x88\x01\x01\x12&\n" +
	"\fplay_context\x18\x06 \x01(\tH\x05R\vplayContext\x88\x01\x01\x12\"\n" +
	"\n" +
	"play_track\x18\a \x01(\tH\x06R\tplayTrack\x88\x01\x01\x12(\n" +
	"\rdisplay_track\x18\b \x01(\tH\aR\fdisplayTrack\x88\x01\x01\x12\x1f\n" +
	"\bprovider\x18\t \x01(\tH\bR\bprovider\x88\x01\x01\x12\x1d\n" +
	"\areferer\x18\n" +
	" \x01(\tH\tR\areferer\x88\x01\x01\x12.\n" +
	"\x10referrer_version\x18\v \x01(\tH\n" +
	"R\x0freferrerVersion\x88\x01\x01\x12,\n" +
	"\x0freferrer_vendor\x18\f \x01(\tH\vR\x0ereferrerVendor\x88\x01\x01\x12#\n" +
	"\vgaia_dev_id\x18\r \x01(\tH\fR\tgaiaDevId\x88\x01\x01\x12/\n" +
	"\x11reason_not_played\x18\x0e \x01(\tH\rR\x0freasonNotPlayed\x88\x01\x01B\x0e\n" +
	"\f_playback_idB\x0f\n" +
	"\r_source_startB\x0f\n" +
	"\r_reason_startB\r\n" +
	"\v_source_endB\r\n" +
	"\v_reason_endB\x0f\n" +
	"\r_play_contextB\r\n" +
	"\v_play_trackB\x10\n" +
	"\x0e_display_trackB\v\n" +
	"\t_providerB\n" +
	"\n" +
	"\b_refererB\x13\n" +
	"\x11_referrer_versionB\x12\n" +
	"\x10_referrer_vendorB\x0e\n" +
	"\f_gaia_dev_idB\x14\n" +
	"\x12_reason_not_played\"\x90\x03\n" +
	"\n" +
	"TrackStuck\x12\x19\n" +
	"\x05track\x18\x01 \x01(\tH\x00R\x05track\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x02 \x01(\fH\x01R\n" +
	"playbackId\x88\x01\x01\x12&\n" +
	"\fsource_start\x18\x03 \x01(\tH\x02R\vsourceStart\x88\x01\x01\x12&\n" +
	"\freason_start\x18\x04 \x01(\tH\x03R\vreasonStart\x88\x01\x01\x12\x1d\n" +
	"\aoffline\x18\x05 \x01(\bH\x04R\aoffline\x88\x01\x01\x12\x1f\n" +
	"\bposition\x18\x06 \x01(\x03H\x05R\bposition\x88\x01\x01\x12\x19\n" +
	"\x05count\x18\a \x01(\x03H\x06R\x05count\x88\x01\x01\x12&\n" +
	"\faudio_driver\x18\b \x01(\tH\aR\vaudioDriver\x88\x01\x01B\b\n" +
	"\x06_trackB\x0e\n" +
	"\f_playback_idB\x0f\n" +
	"\r_source_startB\x0f\n" +
	"\r_reason_startB\n" +
	"\n" +
	"\b_offlineB\v\n" +
	"\t_positionB\b\n" +
	"\x06_countB\x0f\n" +
	"\r_audio_driver\"\xdc\x01\n" +
	"\x13UctStreamedDecision\x12$\n" +
	"\vdecision_id\x18\x01 \x01(\tH\x00R\n" +
	"decisionId\x88\x01\x01\x12$\n" +
	"\vplayback_id\x18\x02 \x01(\fH\x01R\n" +
	"playbackId\x88\x01\x01\x12<\n" +
	"\x18play_context_decision_id\x18\x03 \x01(\tH\x02R\x15playContextDecisionId\x88\x01\x01B\x0e\n" +
	"\f_decision_idB\x0e\n" +
	"\f_playback_idB\x1b\n" +
	"\x19_play_context_decision_idB\xd2\x01\n" +
	"\x18com.spotify.event_senderB\vGabitoProtoP\x01Z<github.com/devgianlu/go-librespot/proto/spotify/event_sender\xa2\x02\x03SEX\xaa\x02\x13Spotify.EventSender\xca\x02\x13Spotify\\EventSender\xe2\x02\x1fSpotify\\EventSender\\GPBMetadata\xea\x02\x14Spotify::EventSenderb\x06proto3"

var (
	file_spotify_event_sender_gabito_proto_rawDescOnce sync.Once
	file_spotify_event_sender_gabito_proto_rawDescData []byte
)

func file_spotify_event_sender_gabito_proto_rawDescGZIP() []byte {
	file_spotify_event_sender_gabito_proto_rawDescOnce.Do(func() {
		file_spotify_event_sender_gabito_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spotify_event_sender_gabito_proto_rawDesc), len(file_spotify_event_sender_gabito_proto_rawDesc)))
	})
	return file_spotify_event_sender_gabito_proto_rawDescData
}

var file_spotify_event_sender_gabito_proto_msgTypes = make([]protoimpl.MessageInfo, 176)
var file_spotify_event_sender_gabito_proto_goTypes = []any{
	(*Application)(nil),                               // 0: spotify.event_sender.Application
	(*ApplicationDesktop)(nil),                        // 1: spotify.event_sender.ApplicationDesktop
	(*ClientContextId)(nil),                           // 2: spotify.event_sender.ClientContextId
	(*ClientId)(nil),                                  // 3: spotify.event_sender.ClientId
	(*Device)(nil),                                    // 4: spotify.event_sender.Device
	(*DeviceDesktop)(nil),                             // 5: spotify.event_sender.DeviceDesktop
	(*InstallationId)(nil),                            // 6: spotify.event_sender.InstallationId
	(*MonotonicClock)(nil),                            // 7: spotify.event_sender.MonotonicClock
	(*Os)(nil),                                        // 8: spotify.event_sender.Os
	(*Sdk)(nil),                                       // 9: spotify.event_sender.Sdk
	(*Time)(nil),                                      // 10: spotify.event_sender.Time
	(*DroppedEvents)(nil),                             // 11: spotify.event_sender.DroppedEvents
	(*DroppedEventByEventName)(nil),                   // 12: spotify.event_sender.DroppedEventByEventName
	(*EventEntity)(nil),                               // 13: spotify.event_sender.EventEntity
	(*EventEnvelope)(nil),                             // 14: spotify.event_sender.EventEnvelope
	(*PublishEventsRequest)(nil),                      // 15: spotify.event_sender.PublishEventsRequest
	(*PublishEventsResponse)(nil),                     // 16: spotify.event_sender.PublishEventsResponse
	(*InstallationEntity)(nil),                        // 17: spotify.event_sender.InstallationEntity
	(*InstallationData)(nil),                          // 18: spotify.event_sender.InstallationData
	(*RateLimitedEventsEntity)(nil),                   // 19: spotify.event_sender.RateLimitedEventsEntity
	(*RecordId)(nil),                                  // 20: spotify.event_sender.RecordId
	(*SequenceNumberEntity)(nil),                      // 21: spotify.event_sender.SequenceNumberEntity
	(*AdContext)(nil),                                 // 22: spotify.event_sender.AdContext
	(*AdDecisionEvent)(nil),                           // 23: spotify.event_sender.AdDecisionEvent
	(*AdError)(nil),                                   // 24: spotify.event_sender.AdError
	(*AdEvent)(nil),                                   // 25: spotify.event_sender.AdEvent
	(*AdRequestEvent)(nil),                            // 26: spotify.event_sender.AdRequestEvent
	(*AdOpportunityEvent)(nil),                        // 27: spotify.event_sender.AdOpportunityEvent
	(*AdSlotEvent)(nil),                               // 28: spotify.event_sender.AdSlotEvent
	(*AmazonWakeUpTime)(nil),                          // 29: spotify.event_sender.AmazonWakeUpTime
	(*AudioDriverInfo)(nil),                           // 30: spotify.event_sender.AudioDriverInfo
	(*AudioIndexRepairReport)(nil),                    // 31: spotify.event_sender.AudioIndexRepairReport
	(*AudioOffliningSettingsReport)(nil),              // 32: spotify.event_sender.AudioOffliningSettingsReport
	(*AudioSettingsReport)(nil),                       // 33: spotify.event_sender.AudioSettingsReport
	(*AudioStreamingSettingsReport)(nil),              // 34: spotify.event_sender.AudioStreamingSettingsReport
	(*ClientCoreConnectActiveDeviceRace)(nil),         // 35: spotify.event_sender.ClientCoreConnectActiveDeviceRace
	(*ClientCoreConnectCommand)(nil),                  // 36: spotify.event_sender.ClientCoreConnectCommand
	(*ClientCoreConnectPlayCommand)(nil),              // 37: spotify.event_sender.ClientCoreConnectPlayCommand
	(*ClientLocale)(nil),                              // 38: spotify.event_sender.ClientLocale
	(*CollectionLevelDbInfo)(nil),                     // 39: spotify.event_sender.CollectionLevelDbInfo
	(*CollectionOfflineControllerEmptyTrackList)(nil), // 40: spotify.event_sender.CollectionOfflineControllerEmptyTrackList
	(*ConfigurationApplied)(nil),                      // 41: spotify.event_sender.ConfigurationApplied
	(*ConfigurationFetched)(nil),                      // 42: spotify.event_sender.ConfigurationFetched
	(*ConfigurationFetchedNonAuth)(nil),               // 43: spotify.event_sender.ConfigurationFetchedNonAuth
	(*ConnectConnectivityError)(nil),                  // 44: spotify.event_sender.ConnectConnectivityError
	(*ConnectCredentialsRequest)(nil),                 // 45: spotify.event_sender.ConnectCredentialsRequest
	(*ConnectDeviceDiscovered)(nil),                   // 46: spotify.event_sender.ConnectDeviceDiscovered
	(*ConnectMdnsPacketParseError)(nil),               // 47: spotify.event_sender.ConnectMdnsPacketParseError
	(*ConnectTransferIncarnation)(nil),                // 48: spotify.event_sender.ConnectTransferIncarnation
	(*ConnectTransferResult)(nil),                     // 49: spotify.event_sender.ConnectTransferResult
	(*ConnectionError)(nil),                           // 50: spotify.event_sender.ConnectionError
	(*ConnectionInfo)(nil),                            // 51: spotify.event_sender.ConnectionInfo
	(*ConnectionStateChange)(nil),                     // 52: spotify.event_sender.ConnectionStateChange
	(*CoreAutoplayLoadingResults)(nil),                // 53: spotify.event_sender.CoreAutoplayLoadingResults
	(*DefaultConfigurationApplied)(nil),               // 54: spotify.event_sender.DefaultConfigurationApplied
	(*DesktopAuthenticationFailureNonAuth)(nil),       // 55: spotify.event_sender.DesktopAuthenticationFailureNonAuth
	(*DesktopAuthenticationSuccess)(nil),              // 56: spotify.event_sender.DesktopAuthenticationSuccess
	(*DesktopGPUAccelerationInfo)(nil),                // 57: spotify.event_sender.DesktopGPUAccelerationInfo
	(*DesktopHighMemoryUsage)(nil),                    // 58: spotify.event_sender.DesktopHighMemoryUsage
	(*DesktopPartnerAPIAuthRequest)(nil),              // 59: spotify.event_sender.DesktopPartnerAPIAuthRequest
	(*DesktopUIShellInteractionNonAuth)(nil),          // 60: spotify.event_sender.DesktopUIShellInteractionNonAuth
	(*DesktopUpdateDownloadComplete)(nil),             // 61: spotify.event_sender.DesktopUpdateDownloadComplete
	(*DesktopUpdateDownloadError)(nil),                // 62: spotify.event_sender.DesktopUpdateDownloadError
	(*DesktopUpdateMessageAction)(nil),                // 63: spotify.event_sender.DesktopUpdateMessageAction
	(*DesktopUpdateMessageProcessed)(nil),             // 64: spotify.event_sender.DesktopUpdateMessageProcessed
	(*DesktopUpdateResponse)(nil),                     // 65: spotify.event_sender.DesktopUpdateResponse
	(*DesktopURIActivationNonAuth)(nil),               // 66: spotify.event_sender.DesktopURIActivationNonAuth
	(*EventSenderCanary)(nil),                         // 67: spotify.event_sender.EventSenderCanary
	(*EventSenderCanaryError)(nil),                    // 68: spotify.event_sender.EventSenderCanaryError
	(*EventSenderInternalError2NonAuth)(nil),          // 69: spotify.event_sender.EventSenderInternalError2NonAuth
	(*EventSenderStats)(nil),                          // 70: spotify.event_sender.EventSenderStats
	(*ExternalAccessoryRemoteInteraction)(nil),        // 71: spotify.event_sender.ExternalAccessoryRemoteInteraction
	(*ExternalDeviceInfo)(nil),                        // 72: spotify.event_sender.ExternalDeviceInfo
	(*GetInfoFailures)(nil),                           // 73: spotify.event_sender.GetInfoFailures
	(*ImageDownload)(nil),                             // 74: spotify.event_sender.ImageDownload
	(*LocalFileSyncError)(nil),                        // 75: spotify.event_sender.LocalFileSyncError
	(*LocalFilesError)(nil),                           // 76: spotify.event_sender.LocalFilesError
	(*LocalFilesImport)(nil),                          // 77: spotify.event_sender.LocalFilesImport
	(*LocalFilesReport)(nil),                          // 78: spotify.event_sender.LocalFilesReport
	(*LocalFilesSourceEvent)(nil),                     // 79: spotify.event_sender.LocalFilesSourceEvent
	(*LocalFilesSourceReport)(nil),                    // 80: spotify.event_sender.LocalFilesSourceReport
	(*Login5TaskNonAuth)(nil),                         // 81: spotify.event_sender.Login5TaskNonAuth
	(*MdnsLoginFailures)(nil),                         // 82: spotify.event_sender.MdnsLoginFailures
	(*Offline2ClientError)(nil),                       // 83: spotify.event_sender.Offline2ClientError
	(*Offline2ClientEvent)(nil),                       // 84: spotify.event_sender.Offline2ClientEvent
	(*OfflineError)(nil),                              // 85: spotify.event_sender.OfflineError
	(*OfflineEvent)(nil),                              // 86: spotify.event_sender.OfflineEvent
	(*OfflinePlayableCacheReport)(nil),                // 87: spotify.event_sender.OfflinePlayableCacheReport
	(*OfflineReport)(nil),                             // 88: spotify.event_sender.OfflineReport
	(*PendingEventsDroppedEventNonAuth)(nil),          // 89: spotify.event_sender.PendingEventsDroppedEventNonAuth
	(*PendingEventsInternalErrorNonAuth)(nil),         // 90: spotify.event_sender.PendingEventsInternalErrorNonAuth
	(*PendingEventsStatsNonAuth)(nil),                 // 91: spotify.event_sender.PendingEventsStatsNonAuth
	(*PickAndShuffleCapStateRestore)(nil),             // 92: spotify.event_sender.PickAndShuffleCapStateRestore
	(*PickAndShuffleCapStateSave)(nil),                // 93: spotify.event_sender.PickAndShuffleCapStateSave
	(*PlayedStateApplied)(nil),                        // 94: spotify.event_sender.PlayedStateApplied
	(*PlayedStateSyncFailure)(nil),                    // 95: spotify.event_sender.PlayedStateSyncFailure
	(*PlayedStatePersisted)(nil),                      // 96: spotify.event_sender.PlayedStatePersisted
	(*PlayerStateRestore)(nil),                        // 97: spotify.event_sender.PlayerStateRestore
	(*PlaylistSyncEvent)(nil),                         // 98: spotify.event_sender.PlaylistSyncEvent
	(*PodcastAdSegmentReceived)(nil),                  // 99: spotify.event_sender.PodcastAdSegmentReceived
	(*PodcastAdSegmentDifference)(nil),                // 100: spotify.event_sender.PodcastAdSegmentDifference
	(*PodcastSAILoopEvent)(nil),                       // 101: spotify.event_sender.PodcastSAILoopEvent
	(*PrefetchError)(nil),                             // 102: spotify.event_sender.PrefetchError
	(*PubSubCountPerIdent)(nil),                       // 103: spotify.event_sender.PubSubCountPerIdent
	(*ReachabilityChanged)(nil),                       // 104: spotify.event_sender.ReachabilityChanged
	(*RejectedClientEventNonAuth)(nil),                // 105: spotify.event_sender.RejectedClientEventNonAuth
	(*RemainingSkips)(nil),                            // 106: spotify.event_sender.RemainingSkips
	(*RequestAccounting)(nil),                         // 107: spotify.event_sender.RequestAccounting
	(*RequestTime)(nil),                               // 108: spotify.event_sender.RequestTime
	(*TimeMeasurement)(nil),                           // 109: spotify.event_sender.TimeMeasurement
	(*AudioFileSelection)(nil),                        // 110: spotify.event_sender.AudioFileSelection
	(*AudioRateLimit)(nil),                            // 111: spotify.event_sender.AudioRateLimit
	(*AudioSessionEvent)(nil),                         // 112: spotify.event_sender.AudioSessionEvent
	(*AudioResolve)(nil),                              // 113: spotify.event_sender.AudioResolve
	(*BoomboxPlaybackInstrumentation)(nil),            // 114: spotify.event_sender.BoomboxPlaybackInstrumentation
	(*BoomboxPlaybackSession)(nil),                    // 115: spotify.event_sender.BoomboxPlaybackSession
	(*BrokenObject)(nil),                              // 116: spotify.event_sender.BrokenObject
	(*CacheError)(nil),                                // 117: spotify.event_sender.CacheError
	(*CachePruningReport)(nil),                        // 118: spotify.event_sender.CachePruningReport
	(*CacheRealmPruningReport)(nil),                   // 119: spotify.event_sender.CacheRealmPruningReport
	(*CacheRealmReport)(nil),                          // 120: spotify.event_sender.CacheRealmReport
	(*CacheReport)(nil),                               // 121: spotify.event_sender.CacheReport
	(*ConnectPullFailure)(nil),                        // 122: spotify.event_sender.ConnectPullFailure
	(*CorePlaybackFinished)(nil),                      // 123: spotify.event_sender.CorePlaybackFinished
	(*Download)(nil),                                  // 124: spotify.event_sender.Download
	(*DrmRequestFailure)(nil),                         // 125: spotify.event_sender.DrmRequestFailure
	(*EndAd)(nil),                                     // 126: spotify.event_sender.EndAd
	(*EventSenderStats2NonAuth)(nil),                  // 127: spotify.event_sender.EventSenderStats2NonAuth
	(*HeadFileDownload)(nil),                          // 128: spotify.event_sender.HeadFileDownload
	(*LegacyEndSong)(nil),                             // 129: spotify.event_sender.LegacyEndSong
	(*MetadataExtensionClientStatistic)(nil),          // 130: spotify.event_sender.MetadataExtensionClientStatistic
	(*PlaybackError)(nil),                             // 131: spotify.event_sender.PlaybackError
	(*PlaybackRetry)(nil),                             // 132: spotify.event_sender.PlaybackRetry
	(*PlaybackSegments)(nil),                          // 133: spotify.event_sender.PlaybackSegments
	(*Prefetch)(nil),                                  // 134: spotify.event_sender.Prefetch
	(*PrototypeStreamSegment)(nil),                    // 135: spotify.event_sender.PrototypeStreamSegment
	(*RawCoreStream)(nil),                             // 136: spotify.event_sender.RawCoreStream
	(*RawCoreStreamStart)(nil),                        // 137: spotify.event_sender.RawCoreStreamStart
	(*RawCoreStreamSegment)(nil),                      // 138: spotify.event_sender.RawCoreStreamSegment
	(*ShowRequestDebug)(nil),                          // 139: spotify.event_sender.ShowRequestDebug
	(*StreamReportingError)(nil),                      // 140: spotify.event_sender.StreamReportingError
	(*StreamReportingSegmentsDebug)(nil),              // 141: spotify.event_sender.StreamReportingSegmentsDebug
	(*StreamReportingDebugTracerTest)(nil),            // 142: spotify.event_sender.StreamReportingDebugTracerTest
	(*Stutter)(nil),                                   // 143: spotify.event_sender.Stutter
	(*TimeStretcherInstrumentation)(nil),              // 144: spotify.event_sender.TimeStretcherInstrumentation
	(*TrackNotPlayed)(nil),                            // 145: spotify.event_sender.TrackNotPlayed
	(*TrackStuck)(nil),                                // 146: spotify.event_sender.TrackStuck
	(*UctStreamedDecision)(nil),                       // 147: spotify.event_sender.UctStreamedDecision
	nil,                                               // 148: spotify.event_sender.DroppedEvents.DroppedEventsBySequenceIdEntry
	nil,                                               // 149: spotify.event_sender.DroppedEventByEventName.DroppedEventsByNameEntry
	(*DroppedEventByEventName_DroppedEventsInfo)(nil), // 150: spotify.event_sender.DroppedEventByEventName.DroppedEventsInfo
	(*EventEnvelope_EventFragment)(nil),               // 151: spotify.event_sender.EventEnvelope.EventFragment
	(*PublishEventsResponse_EventError)(nil),          // 152: spotify.event_sender.PublishEventsResponse.EventError
	nil,                                               // 153: spotify.event_sender.RateLimitedEventsEntity.MapFieldEntry
	nil,                                               // 154: spotify.event_sender.ConfigurationApplied.IdentifiersEntry
	nil,                                               // 155: spotify.event_sender.ConfigurationFetched.IdentifiersEntry
	nil,                                               // 156: spotify.event_sender.ConfigurationFetchedNonAuth.IdentifiersEntry
	nil,                                               // 157: spotify.event_sender.DefaultConfigurationApplied.IdentifiersEntry
	nil,                                               // 158: spotify.event_sender.EventSenderStats.StorageSizeEntry
	nil,                                               // 159: spotify.event_sender.EventSenderStats.SequenceNumberMinEntry
	nil,                                               // 160: spotify.event_sender.EventSenderStats.SequenceNumberNextEntry
	nil,                                               // 161: spotify.event_sender.OfflineReport.ContextNumLinksMapEntry
	nil,                                               // 162: spotify.event_sender.OfflineReport.LinktypeNumTracksMapEntry
	nil,                                               // 163: spotify.event_sender.OfflineReport.ScheduleStatsMapEntry
	nil,                                               // 164: spotify.event_sender.OfflineReport.UpdateStatsMapEntry
	nil,                                               // 165: spotify.event_sender.TimeMeasurement.DimensionsEntry
	nil,                                               // 166: spotify.event_sender.TimeMeasurement.PointTimestampsEntry
	nil,                                               // 167: spotify.event_sender.TimeMeasurement.PointDurationsEntry
	nil,                                               // 168: spotify.event_sender.TimeMeasurement.PointFeatureIdsEntry
	nil,                                               // 169: spotify.event_sender.TimeMeasurement.MetadataEntry
	nil,                                               // 170: spotify.event_sender.BoomboxPlaybackInstrumentation.TotalBufferSizeEntry
	nil,                                               // 171: spotify.event_sender.BoomboxPlaybackInstrumentation.NumberOfCallsEntry
	nil,                                               // 172: spotify.event_sender.BoomboxPlaybackInstrumentation.TotalDurationEntry
	nil,                                               // 173: spotify.event_sender.BoomboxPlaybackInstrumentation.FirstCallTimeEntry
	nil,                                               // 174: spotify.event_sender.BoomboxPlaybackInstrumentation.LastCallTimeEntry
	nil,                                               // 175: spotify.event_sender.ConnectPullFailure.ReasonsEntry
}
var file_spotify_event_sender_gabito_proto_depIdxs = []int32{
	148, // 0: spotify.event_sender.DroppedEvents.dropped_events_by_sequence_id:type_name -> spotify.event_sender.DroppedEvents.DroppedEventsBySequenceIdEntry
	149, // 1: spotify.event_sender.DroppedEventByEventName.dropped_events_by_name:type_name -> spotify.event_sender.DroppedEventByEventName.DroppedEventsByNameEntry
	151, // 2: spotify.event_sender.EventEnvelope.event_fragment:type_name -> spotify.event_sender.EventEnvelope.EventFragment
	14,  // 3: spotify.event_sender.PublishEventsRequest.event:type_name -> spotify.event_sender.EventEnvelope
	152, // 4: spotify.event_sender.PublishEventsResponse.error:type_name -> spotify.event_sender.PublishEventsResponse.EventError
	153, // 5: spotify.event_sender.RateLimitedEventsEntity.map_field:type_name -> spotify.event_sender.RateLimitedEventsEntity.MapFieldEntry
	154, // 6: spotify.event_sender.ConfigurationApplied.identifiers:type_name -> spotify.event_sender.ConfigurationApplied.IdentifiersEntry
	155, // 7: spotify.event_sender.ConfigurationFetched.identifiers:type_name -> spotify.event_sender.ConfigurationFetched.IdentifiersEntry
	156, // 8: spotify.event_sender.ConfigurationFetchedNonAuth.identifiers:type_name -> spotify.event_sender.ConfigurationFetchedNonAuth.IdentifiersEntry
	157, // 9: spotify.event_sender.DefaultConfigurationApplied.identifiers:type_name -> spotify.event_sender.DefaultConfigurationApplied.IdentifiersEntry
	158, // 10: spotify.event_sender.EventSenderStats.storage_size:type_name -> spotify.event_sender.EventSenderStats.StorageSizeEntry
	159, // 11: spotify.event_sender.EventSenderStats.sequence_number_min:type_name -> spotify.event_sender.EventSenderStats.SequenceNumberMinEntry
	160, // 12: spotify.event_sender.EventSenderStats.sequence_number_next:type_name -> spotify.event_sender.EventSenderStats.SequenceNumberNextEntry
	161, // 13: spotify.event_sender.OfflineReport.context_num_links_map:type_name -> spotify.event_sender.OfflineReport.ContextNumLinksMapEntry
	162, // 14: spotify.event_sender.OfflineReport.linktype_num_tracks_map:type_name -> spotify.event_sender.OfflineReport.LinktypeNumTracksMapEntry
	163, // 15: spotify.event_sender.OfflineReport.schedule_stats_map:type_name -> spotify.event_sender.OfflineReport.ScheduleStatsMapEntry
	164, // 16: spotify.event_sender.OfflineReport.update_stats_map:type_name -> spotify.event_sender.OfflineReport.UpdateStatsMapEntry
	165, // 17: spotify.event_sender.TimeMeasurement.dimensions:type_name -> spotify.event_sender.TimeMeasurement.DimensionsEntry
	166, // 18: spotify.event_sender.TimeMeasurement.point_timestamps:type_name -> spotify.event_sender.TimeMeasurement.PointTimestampsEntry
	167, // 19: spotify.event_sender.TimeMeasurement.point_durations:type_name -> spotify.event_sender.TimeMeasurement.PointDurationsEntry
	168, // 20: spotify.event_sender.TimeMeasurement.point_feature_ids:type_name -> spotify.event_sender.TimeMeasurement.PointFeatureIdsEntry
	169, // 21: spotify.event_sender.TimeMeasurement.metadata:type_name -> spotify.event_sender.TimeMeasurement.MetadataEntry
	170, // 22: spotify.event_sender.BoomboxPlaybackInstrumentation.total_buffer_size:type_name -> spotify.event_sender.BoomboxPlaybackInstrumentation.TotalBufferSizeEntry
	171, // 23: spotify.event_sender.BoomboxPlaybackInstrumentation.number_of_calls:type_name -> spotify.event_sender.BoomboxPlaybackInstrumentation.NumberOfCallsEntry
	172, // 24: spotify.event_sender.BoomboxPlaybackInstrumentation.total_duration:type_name -> spotify.event_sender.BoomboxPlaybackInstrumentation.TotalDurationEntry
	173, // 25: spotify.event_sender.BoomboxPlaybackInstrumentation.first_call_time:type_name -> spotify.event_sender.BoomboxPlaybackInstrumentation.FirstCallTimeEntry
	174, // 26: spotify.event_sender.BoomboxPlaybackInstrumentation.last_call_time:type_name -> spotify.event_sender.BoomboxPlaybackInstrumentation.LastCallTimeEntry
	175, // 27: spotify.event_sender.ConnectPullFailure.reasons:type_name -> spotify.event_sender.ConnectPullFailure.ReasonsEntry
	12,  // 28: spotify.event_sender.DroppedEvents.DroppedEventsBySequenceIdEntry.value:type_name -> spotify.event_sender.DroppedEventByEventName
	150, // 29: spotify.event_sender.DroppedEventByEventName.DroppedEventsByNameEntry.value:type_name -> spotify.event_sender.DroppedEventByEventName.DroppedEventsInfo
	30,  // [30:30] is the sub-list for method output_type
	30,  // [30:30] is the sub-list for method input_type
	30,  // [30:30] is the sub-list for extension type_name
	30,  // [30:30] is the sub-list for extension extendee
	0,   // [0:30] is the sub-list for field type_name
}

func init() { file_spotify_event_sender_gabito_proto_init() }
func file_spotify_event_sender_gabito_proto_init() {
	if File_spotify_event_sender_gabito_proto != nil {
		return
	}
	file_spotify_event_sender_gabito_proto_msgTypes[22].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[23].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[24].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[25].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[26].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[27].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[28].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[29].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[30].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[31].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[32].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[33].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[34].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[35].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[36].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[37].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[38].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[39].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[40].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[41].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[42].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[43].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[44].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[45].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[46].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[47].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[48].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[49].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[50].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[51].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[52].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[53].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[54].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[55].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[56].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[57].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[58].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[59].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[60].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[61].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[62].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[63].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[64].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[65].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[66].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[67].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[68].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[71].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[72].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[73].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[74].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[75].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[76].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[77].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[78].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[79].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[80].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[81].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[82].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[83].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[84].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[85].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[86].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[87].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[88].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[89].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[90].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[92].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[93].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[94].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[95].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[96].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[97].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[98].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[99].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[100].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[101].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[102].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[103].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[104].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[105].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[106].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[107].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[108].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[109].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[110].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[111].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[112].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[113].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[114].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[115].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[116].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[117].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[118].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[119].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[120].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[121].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[122].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[123].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[124].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[125].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[126].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[128].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[129].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[130].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[131].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[132].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[133].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[134].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[135].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[136].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[137].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[138].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[139].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[140].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[141].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[142].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[143].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[144].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[145].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[146].OneofWrappers = []any{}
	file_spotify_event_sender_gabito_proto_msgTypes[147].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spotify_event_sender_gabito_proto_rawDesc), len(file_spotify_event_sender_gabito_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   176,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spotify_event_sender_gabito_proto_goTypes,
		DependencyIndexes: file_spotify_event_sender_gabito_proto_depIdxs,
		MessageInfos:      file_spotify_event_sender_gabito_proto_msgTypes,
	}.Build()
	File_spotify_event_sender_gabito_proto = out.File
	file_spotify_event_sender_gabito_proto_goTypes = nil
	file_spotify_event_sender_gabito_proto_depIdxs = nil
}
