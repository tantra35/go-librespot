// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: spotify/download/storage_resolve.proto

package download

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorageResolveResponse_Result int32

const (
	StorageResolveResponse_CDN        StorageResolveResponse_Result = 0
	StorageResolveResponse_STORAGE    StorageResolveResponse_Result = 1
	StorageResolveResponse_RESTRICTED StorageResolveResponse_Result = 3
)

// Enum value maps for StorageResolveResponse_Result.
var (
	StorageResolveResponse_Result_name = map[int32]string{
		0: "CDN",
		1: "STORAGE",
		3: "RESTRICTED",
	}
	StorageResolveResponse_Result_value = map[string]int32{
		"CDN":        0,
		"STORAGE":    1,
		"RESTRICTED": 3,
	}
)

func (x StorageResolveResponse_Result) Enum() *StorageResolveResponse_Result {
	p := new(StorageResolveResponse_Result)
	*p = x
	return p
}

func (x StorageResolveResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageResolveResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_spotify_download_storage_resolve_proto_enumTypes[0].Descriptor()
}

func (StorageResolveResponse_Result) Type() protoreflect.EnumType {
	return &file_spotify_download_storage_resolve_proto_enumTypes[0]
}

func (x StorageResolveResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageResolveResponse_Result.Descriptor instead.
func (StorageResolveResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_spotify_download_storage_resolve_proto_rawDescGZIP(), []int{0, 0}
}

type StorageResolveResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Result        StorageResolveResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=spotify.download.StorageResolveResponse_Result" json:"result,omitempty"`
	Cdnurl        []string                      `protobuf:"bytes,2,rep,name=cdnurl,proto3" json:"cdnurl,omitempty"`
	Fileid        []byte                        `protobuf:"bytes,4,opt,name=fileid,proto3" json:"fileid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageResolveResponse) Reset() {
	*x = StorageResolveResponse{}
	mi := &file_spotify_download_storage_resolve_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageResolveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageResolveResponse) ProtoMessage() {}

func (x *StorageResolveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_download_storage_resolve_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageResolveResponse.ProtoReflect.Descriptor instead.
func (*StorageResolveResponse) Descriptor() ([]byte, []int) {
	return file_spotify_download_storage_resolve_proto_rawDescGZIP(), []int{0}
}

func (x *StorageResolveResponse) GetResult() StorageResolveResponse_Result {
	if x != nil {
		return x.Result
	}
	return StorageResolveResponse_CDN
}

func (x *StorageResolveResponse) GetCdnurl() []string {
	if x != nil {
		return x.Cdnurl
	}
	return nil
}

func (x *StorageResolveResponse) GetFileid() []byte {
	if x != nil {
		return x.Fileid
	}
	return nil
}

var File_spotify_download_storage_resolve_proto protoreflect.FileDescriptor

const file_spotify_download_storage_resolve_proto_rawDesc = "" +
	"\n" +
	"&spotify/download/storage_resolve.proto\x12\x10spotify.download\"\xc1\x01\n" +
	"\x16StorageResolveResponse\x12G\n" +
	"\x06result\x18\x01 \x01(\x0e2/.spotify.download.StorageResolveResponse.ResultR\x06result\x12\x16\n" +
	"\x06cdnurl\x18\x02 \x03(\tR\x06cdnurl\x12\x16\n" +
	"\x06fileid\x18\x04 \x01(\fR\x06fileid\".\n" +
	"\x06Result\x12\a\n" +
	"\x03CDN\x10\x00\x12\v\n" +
	"\aSTORAGE\x10\x01\x12\x0e\n" +
	"\n" +
	"RESTRICTED\x10\x03B\xc6\x01\n" +
	"\x14com.spotify.downloadB\x13StorageResolveProtoP\x01Z8github.com/devgianlu/go-librespot/proto/spotify/download\xa2\x02\x03SDX\xaa\x02\x10Spotify.Download\xca\x02\x10Spotify\\Download\xe2\x02\x1cSpotify\\Download\\GPBMetadata\xea\x02\x11Spotify::Downloadb\x06proto3"

var (
	file_spotify_download_storage_resolve_proto_rawDescOnce sync.Once
	file_spotify_download_storage_resolve_proto_rawDescData []byte
)

func file_spotify_download_storage_resolve_proto_rawDescGZIP() []byte {
	file_spotify_download_storage_resolve_proto_rawDescOnce.Do(func() {
		file_spotify_download_storage_resolve_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spotify_download_storage_resolve_proto_rawDesc), len(file_spotify_download_storage_resolve_proto_rawDesc)))
	})
	return file_spotify_download_storage_resolve_proto_rawDescData
}

var file_spotify_download_storage_resolve_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spotify_download_storage_resolve_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_spotify_download_storage_resolve_proto_goTypes = []any{
	(StorageResolveResponse_Result)(0), // 0: spotify.download.StorageResolveResponse.Result
	(*StorageResolveResponse)(nil),     // 1: spotify.download.StorageResolveResponse
}
var file_spotify_download_storage_resolve_proto_depIdxs = []int32{
	0, // 0: spotify.download.StorageResolveResponse.result:type_name -> spotify.download.StorageResolveResponse.Result
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_spotify_download_storage_resolve_proto_init() }
func file_spotify_download_storage_resolve_proto_init() {
	if File_spotify_download_storage_resolve_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spotify_download_storage_resolve_proto_rawDesc), len(file_spotify_download_storage_resolve_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spotify_download_storage_resolve_proto_goTypes,
		DependencyIndexes: file_spotify_download_storage_resolve_proto_depIdxs,
		EnumInfos:         file_spotify_download_storage_resolve_proto_enumTypes,
		MessageInfos:      file_spotify_download_storage_resolve_proto_msgTypes,
	}.Build()
	File_spotify_download_storage_resolve_proto = out.File
	file_spotify_download_storage_resolve_proto_goTypes = nil
	file_spotify_download_storage_resolve_proto_depIdxs = nil
}
