// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: spotify/playlist_permission/playlist_permission.proto

package playlist_permission

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PermissionLevel int32

const (
	PermissionLevel_UNKNOWN     PermissionLevel = 0
	PermissionLevel_BLOCKED     PermissionLevel = 1
	PermissionLevel_VIEWER      PermissionLevel = 2
	PermissionLevel_CONTRIBUTOR PermissionLevel = 3
)

// Enum value maps for PermissionLevel.
var (
	PermissionLevel_name = map[int32]string{
		0: "UNKNOWN",
		1: "BLOCKED",
		2: "VIEWER",
		3: "CONTRIBUTOR",
	}
	PermissionLevel_value = map[string]int32{
		"UNKNOWN":     0,
		"BLOCKED":     1,
		"VIEWER":      2,
		"CONTRIBUTOR": 3,
	}
)

func (x PermissionLevel) Enum() *PermissionLevel {
	p := new(PermissionLevel)
	*p = x
	return p
}

func (x PermissionLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_spotify_playlist_permission_playlist_permission_proto_enumTypes[0].Descriptor()
}

func (PermissionLevel) Type() protoreflect.EnumType {
	return &file_spotify_playlist_permission_playlist_permission_proto_enumTypes[0]
}

func (x PermissionLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PermissionLevel) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PermissionLevel(num)
	return nil
}

// Deprecated: Use PermissionLevel.Descriptor instead.
func (PermissionLevel) EnumDescriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{0}
}

type PermissionIdentifierKind int32

const (
	PermissionIdentifierKind_PERMISSION_IDENTIFIER_KIND_UNSPECIFIED PermissionIdentifierKind = 0
	PermissionIdentifierKind_PERMISSION_IDENTIFIER_KIND_BASE        PermissionIdentifierKind = 1
	PermissionIdentifierKind_PERMISSION_IDENTIFIER_KIND_MEMBER      PermissionIdentifierKind = 2
	PermissionIdentifierKind_PERMISSION_IDENTIFIER_KIND_ABUSE       PermissionIdentifierKind = 3
	PermissionIdentifierKind_PERMISSION_IDENTIFIER_KIND_PROFILE     PermissionIdentifierKind = 4
)

// Enum value maps for PermissionIdentifierKind.
var (
	PermissionIdentifierKind_name = map[int32]string{
		0: "PERMISSION_IDENTIFIER_KIND_UNSPECIFIED",
		1: "PERMISSION_IDENTIFIER_KIND_BASE",
		2: "PERMISSION_IDENTIFIER_KIND_MEMBER",
		3: "PERMISSION_IDENTIFIER_KIND_ABUSE",
		4: "PERMISSION_IDENTIFIER_KIND_PROFILE",
	}
	PermissionIdentifierKind_value = map[string]int32{
		"PERMISSION_IDENTIFIER_KIND_UNSPECIFIED": 0,
		"PERMISSION_IDENTIFIER_KIND_BASE":        1,
		"PERMISSION_IDENTIFIER_KIND_MEMBER":      2,
		"PERMISSION_IDENTIFIER_KIND_ABUSE":       3,
		"PERMISSION_IDENTIFIER_KIND_PROFILE":     4,
	}
)

func (x PermissionIdentifierKind) Enum() *PermissionIdentifierKind {
	p := new(PermissionIdentifierKind)
	*p = x
	return p
}

func (x PermissionIdentifierKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionIdentifierKind) Descriptor() protoreflect.EnumDescriptor {
	return file_spotify_playlist_permission_playlist_permission_proto_enumTypes[1].Descriptor()
}

func (PermissionIdentifierKind) Type() protoreflect.EnumType {
	return &file_spotify_playlist_permission_playlist_permission_proto_enumTypes[1]
}

func (x PermissionIdentifierKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PermissionIdentifierKind) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PermissionIdentifierKind(num)
	return nil
}

// Deprecated: Use PermissionIdentifierKind.Descriptor instead.
func (PermissionIdentifierKind) EnumDescriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{1}
}

type PermissionGrantDescription_ClaimFailReason int32

const (
	PermissionGrantDescription_CLAIM_FAIL_REASON_UNSPECIFIED    PermissionGrantDescription_ClaimFailReason = 0
	PermissionGrantDescription_CLAIM_FAIL_REASON_ANONYMOUS      PermissionGrantDescription_ClaimFailReason = 1
	PermissionGrantDescription_CLAIM_FAIL_REASON_NO_GRANT_FOUND PermissionGrantDescription_ClaimFailReason = 2
	PermissionGrantDescription_CLAIM_FAIL_REASON_GRANT_EXPIRED  PermissionGrantDescription_ClaimFailReason = 3
)

// Enum value maps for PermissionGrantDescription_ClaimFailReason.
var (
	PermissionGrantDescription_ClaimFailReason_name = map[int32]string{
		0: "CLAIM_FAIL_REASON_UNSPECIFIED",
		1: "CLAIM_FAIL_REASON_ANONYMOUS",
		2: "CLAIM_FAIL_REASON_NO_GRANT_FOUND",
		3: "CLAIM_FAIL_REASON_GRANT_EXPIRED",
	}
	PermissionGrantDescription_ClaimFailReason_value = map[string]int32{
		"CLAIM_FAIL_REASON_UNSPECIFIED":    0,
		"CLAIM_FAIL_REASON_ANONYMOUS":      1,
		"CLAIM_FAIL_REASON_NO_GRANT_FOUND": 2,
		"CLAIM_FAIL_REASON_GRANT_EXPIRED":  3,
	}
)

func (x PermissionGrantDescription_ClaimFailReason) Enum() *PermissionGrantDescription_ClaimFailReason {
	p := new(PermissionGrantDescription_ClaimFailReason)
	*p = x
	return p
}

func (x PermissionGrantDescription_ClaimFailReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionGrantDescription_ClaimFailReason) Descriptor() protoreflect.EnumDescriptor {
	return file_spotify_playlist_permission_playlist_permission_proto_enumTypes[2].Descriptor()
}

func (PermissionGrantDescription_ClaimFailReason) Type() protoreflect.EnumType {
	return &file_spotify_playlist_permission_playlist_permission_proto_enumTypes[2]
}

func (x PermissionGrantDescription_ClaimFailReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PermissionGrantDescription_ClaimFailReason) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PermissionGrantDescription_ClaimFailReason(num)
	return nil
}

// Deprecated: Use PermissionGrantDescription_ClaimFailReason.Descriptor instead.
func (PermissionGrantDescription_ClaimFailReason) EnumDescriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{18, 0}
}

type Permission struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Revision        []byte                 `protobuf:"bytes,1,opt,name=revision" json:"revision,omitempty"`
	PermissionLevel *PermissionLevel       `protobuf:"varint,2,opt,name=permission_level,json=permissionLevel,enum=spotify.playlist_permission.PermissionLevel" json:"permission_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetRevision() []byte {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *Permission) GetPermissionLevel() PermissionLevel {
	if x != nil && x.PermissionLevel != nil {
		return *x.PermissionLevel
	}
	return PermissionLevel_UNKNOWN
}

type GrantableLevels struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          []PermissionLevel      `protobuf:"varint,1,rep,name=base,enum=spotify.playlist_permission.PermissionLevel" json:"base,omitempty"`
	Member        []PermissionLevel      `protobuf:"varint,2,rep,name=member,enum=spotify.playlist_permission.PermissionLevel" json:"member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrantableLevels) Reset() {
	*x = GrantableLevels{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantableLevels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantableLevels) ProtoMessage() {}

func (x *GrantableLevels) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantableLevels.ProtoReflect.Descriptor instead.
func (*GrantableLevels) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{1}
}

func (x *GrantableLevels) GetBase() []PermissionLevel {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GrantableLevels) GetMember() []PermissionLevel {
	if x != nil {
		return x.Member
	}
	return nil
}

type AttributeCapabilities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CanEdit       *bool                  `protobuf:"varint,1,opt,name=can_edit,json=canEdit" json:"can_edit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeCapabilities) Reset() {
	*x = AttributeCapabilities{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeCapabilities) ProtoMessage() {}

func (x *AttributeCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeCapabilities.ProtoReflect.Descriptor instead.
func (*AttributeCapabilities) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{2}
}

func (x *AttributeCapabilities) GetCanEdit() bool {
	if x != nil && x.CanEdit != nil {
		return *x.CanEdit
	}
	return false
}

type ListAttributeCapabilities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *AttributeCapabilities `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description   *AttributeCapabilities `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Picture       *AttributeCapabilities `protobuf:"bytes,3,opt,name=picture" json:"picture,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAttributeCapabilities) Reset() {
	*x = ListAttributeCapabilities{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAttributeCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttributeCapabilities) ProtoMessage() {}

func (x *ListAttributeCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttributeCapabilities.ProtoReflect.Descriptor instead.
func (*ListAttributeCapabilities) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{3}
}

func (x *ListAttributeCapabilities) GetName() *AttributeCapabilities {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ListAttributeCapabilities) GetDescription() *AttributeCapabilities {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ListAttributeCapabilities) GetPicture() *AttributeCapabilities {
	if x != nil {
		return x.Picture
	}
	return nil
}

type Capabilities struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	CanView                    *bool                  `protobuf:"varint,1,opt,name=can_view,json=canView" json:"can_view,omitempty"`
	CanAdministratePermissions *bool                  `protobuf:"varint,2,opt,name=can_administrate_permissions,json=canAdministratePermissions" json:"can_administrate_permissions,omitempty"`
	// Deprecated: Marked as deprecated in spotify/playlist_permission/playlist_permission.proto.
	GrantableLevel []PermissionLevel `protobuf:"varint,3,rep,name=grantable_level,json=grantableLevel,enum=spotify.playlist_permission.PermissionLevel" json:"grantable_level,omitempty"`
	// Deprecated: Marked as deprecated in spotify/playlist_permission/playlist_permission.proto.
	CanEditMetadata           *bool                      `protobuf:"varint,4,opt,name=can_edit_metadata,json=canEditMetadata" json:"can_edit_metadata,omitempty"`
	CanEditItems              *bool                      `protobuf:"varint,5,opt,name=can_edit_items,json=canEditItems" json:"can_edit_items,omitempty"`
	CanCancelMembership       *bool                      `protobuf:"varint,6,opt,name=can_cancel_membership,json=canCancelMembership" json:"can_cancel_membership,omitempty"`
	GrantableLevels           *GrantableLevels           `protobuf:"bytes,7,opt,name=grantable_levels,json=grantableLevels" json:"grantable_levels,omitempty"`
	ListAttributeCapabilities *ListAttributeCapabilities `protobuf:"bytes,8,opt,name=list_attribute_capabilities,json=listAttributeCapabilities" json:"list_attribute_capabilities,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Capabilities) Reset() {
	*x = Capabilities{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Capabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capabilities) ProtoMessage() {}

func (x *Capabilities) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capabilities.ProtoReflect.Descriptor instead.
func (*Capabilities) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{4}
}

func (x *Capabilities) GetCanView() bool {
	if x != nil && x.CanView != nil {
		return *x.CanView
	}
	return false
}

func (x *Capabilities) GetCanAdministratePermissions() bool {
	if x != nil && x.CanAdministratePermissions != nil {
		return *x.CanAdministratePermissions
	}
	return false
}

// Deprecated: Marked as deprecated in spotify/playlist_permission/playlist_permission.proto.
func (x *Capabilities) GetGrantableLevel() []PermissionLevel {
	if x != nil {
		return x.GrantableLevel
	}
	return nil
}

// Deprecated: Marked as deprecated in spotify/playlist_permission/playlist_permission.proto.
func (x *Capabilities) GetCanEditMetadata() bool {
	if x != nil && x.CanEditMetadata != nil {
		return *x.CanEditMetadata
	}
	return false
}

func (x *Capabilities) GetCanEditItems() bool {
	if x != nil && x.CanEditItems != nil {
		return *x.CanEditItems
	}
	return false
}

func (x *Capabilities) GetCanCancelMembership() bool {
	if x != nil && x.CanCancelMembership != nil {
		return *x.CanCancelMembership
	}
	return false
}

func (x *Capabilities) GetGrantableLevels() *GrantableLevels {
	if x != nil {
		return x.GrantableLevels
	}
	return nil
}

func (x *Capabilities) GetListAttributeCapabilities() *ListAttributeCapabilities {
	if x != nil {
		return x.ListAttributeCapabilities
	}
	return nil
}

type CapabilitiesMultiRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Request          []*CapabilitiesRequest `protobuf:"bytes,1,rep,name=request" json:"request,omitempty"`
	FallbackUsername *string                `protobuf:"bytes,2,opt,name=fallback_username,json=fallbackUsername" json:"fallback_username,omitempty"`
	FallbackUserId   *string                `protobuf:"bytes,3,opt,name=fallback_user_id,json=fallbackUserId" json:"fallback_user_id,omitempty"`
	FallbackUri      *string                `protobuf:"bytes,4,opt,name=fallback_uri,json=fallbackUri" json:"fallback_uri,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CapabilitiesMultiRequest) Reset() {
	*x = CapabilitiesMultiRequest{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapabilitiesMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilitiesMultiRequest) ProtoMessage() {}

func (x *CapabilitiesMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilitiesMultiRequest.ProtoReflect.Descriptor instead.
func (*CapabilitiesMultiRequest) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{5}
}

func (x *CapabilitiesMultiRequest) GetRequest() []*CapabilitiesRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *CapabilitiesMultiRequest) GetFallbackUsername() string {
	if x != nil && x.FallbackUsername != nil {
		return *x.FallbackUsername
	}
	return ""
}

func (x *CapabilitiesMultiRequest) GetFallbackUserId() string {
	if x != nil && x.FallbackUserId != nil {
		return *x.FallbackUserId
	}
	return ""
}

func (x *CapabilitiesMultiRequest) GetFallbackUri() string {
	if x != nil && x.FallbackUri != nil {
		return *x.FallbackUri
	}
	return ""
}

type CapabilitiesRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Username             *string                `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	UserId               *string                `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Uri                  *string                `protobuf:"bytes,3,opt,name=uri" json:"uri,omitempty"`
	UserIsOwner          *bool                  `protobuf:"varint,4,opt,name=user_is_owner,json=userIsOwner" json:"user_is_owner,omitempty"`
	PermissionGrantToken *string                `protobuf:"bytes,5,opt,name=permission_grant_token,json=permissionGrantToken" json:"permission_grant_token,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CapabilitiesRequest) Reset() {
	*x = CapabilitiesRequest{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilitiesRequest) ProtoMessage() {}

func (x *CapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*CapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{6}
}

func (x *CapabilitiesRequest) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *CapabilitiesRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *CapabilitiesRequest) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

func (x *CapabilitiesRequest) GetUserIsOwner() bool {
	if x != nil && x.UserIsOwner != nil {
		return *x.UserIsOwner
	}
	return false
}

func (x *CapabilitiesRequest) GetPermissionGrantToken() string {
	if x != nil && x.PermissionGrantToken != nil {
		return *x.PermissionGrantToken
	}
	return ""
}

type CapabilitiesMultiResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Response      []*CapabilitiesResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapabilitiesMultiResponse) Reset() {
	*x = CapabilitiesMultiResponse{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapabilitiesMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilitiesMultiResponse) ProtoMessage() {}

func (x *CapabilitiesMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilitiesMultiResponse.ProtoReflect.Descriptor instead.
func (*CapabilitiesMultiResponse) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{7}
}

func (x *CapabilitiesMultiResponse) GetResponse() []*CapabilitiesResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CapabilitiesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *ResponseStatus        `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Capabilities  *Capabilities          `protobuf:"bytes,2,opt,name=capabilities" json:"capabilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CapabilitiesResponse) Reset() {
	*x = CapabilitiesResponse{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilitiesResponse) ProtoMessage() {}

func (x *CapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*CapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{8}
}

func (x *CapabilitiesResponse) GetStatus() *ResponseStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CapabilitiesResponse) GetCapabilities() *Capabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type SetPermissionLevelRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PermissionLevel *PermissionLevel       `protobuf:"varint,1,opt,name=permission_level,json=permissionLevel,enum=spotify.playlist_permission.PermissionLevel" json:"permission_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SetPermissionLevelRequest) Reset() {
	*x = SetPermissionLevelRequest{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPermissionLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPermissionLevelRequest) ProtoMessage() {}

func (x *SetPermissionLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPermissionLevelRequest.ProtoReflect.Descriptor instead.
func (*SetPermissionLevelRequest) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{9}
}

func (x *SetPermissionLevelRequest) GetPermissionLevel() PermissionLevel {
	if x != nil && x.PermissionLevel != nil {
		return *x.PermissionLevel
	}
	return PermissionLevel_UNKNOWN
}

type SetPermissionResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ResultingPermission *Permission            `protobuf:"bytes,1,opt,name=resulting_permission,json=resultingPermission" json:"resulting_permission,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SetPermissionResponse) Reset() {
	*x = SetPermissionResponse{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPermissionResponse) ProtoMessage() {}

func (x *SetPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPermissionResponse.ProtoReflect.Descriptor instead.
func (*SetPermissionResponse) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{10}
}

func (x *SetPermissionResponse) GetResultingPermission() *Permission {
	if x != nil {
		return x.ResultingPermission
	}
	return nil
}

type GetMemberPermissionsResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MemberPermissions map[string]*Permission `protobuf:"bytes,1,rep,name=member_permissions,json=memberPermissions" json:"member_permissions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetMemberPermissionsResponse) Reset() {
	*x = GetMemberPermissionsResponse{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMemberPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberPermissionsResponse) ProtoMessage() {}

func (x *GetMemberPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetMemberPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{11}
}

func (x *GetMemberPermissionsResponse) GetMemberPermissions() map[string]*Permission {
	if x != nil {
		return x.MemberPermissions
	}
	return nil
}

type Permissions struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BasePermission *Permission            `protobuf:"bytes,1,opt,name=base_permission,json=basePermission" json:"base_permission,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{12}
}

func (x *Permissions) GetBasePermission() *Permission {
	if x != nil {
		return x.BasePermission
	}
	return nil
}

type PermissionState struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Permissions     *Permissions           `protobuf:"bytes,1,opt,name=permissions" json:"permissions,omitempty"`
	Capabilities    *Capabilities          `protobuf:"bytes,2,opt,name=capabilities" json:"capabilities,omitempty"`
	IsPrivate       *bool                  `protobuf:"varint,3,opt,name=is_private,json=isPrivate" json:"is_private,omitempty"`
	IsCollaborative *bool                  `protobuf:"varint,4,opt,name=is_collaborative,json=isCollaborative" json:"is_collaborative,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PermissionState) Reset() {
	*x = PermissionState{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionState) ProtoMessage() {}

func (x *PermissionState) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionState.ProtoReflect.Descriptor instead.
func (*PermissionState) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{13}
}

func (x *PermissionState) GetPermissions() *Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *PermissionState) GetCapabilities() *Capabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PermissionState) GetIsPrivate() bool {
	if x != nil && x.IsPrivate != nil {
		return *x.IsPrivate
	}
	return false
}

func (x *PermissionState) GetIsCollaborative() bool {
	if x != nil && x.IsCollaborative != nil {
		return *x.IsCollaborative
	}
	return false
}

type PermissionStatePub struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PermissionState *PermissionState       `protobuf:"bytes,1,opt,name=permission_state,json=permissionState" json:"permission_state,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PermissionStatePub) Reset() {
	*x = PermissionStatePub{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionStatePub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionStatePub) ProtoMessage() {}

func (x *PermissionStatePub) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionStatePub.ProtoReflect.Descriptor instead.
func (*PermissionStatePub) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{14}
}

func (x *PermissionStatePub) GetPermissionState() *PermissionState {
	if x != nil {
		return x.PermissionState
	}
	return nil
}

type PermissionGrantOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permission    *Permission            `protobuf:"bytes,1,opt,name=permission" json:"permission,omitempty"`
	TtlMs         *int64                 `protobuf:"varint,2,opt,name=ttl_ms,json=ttlMs" json:"ttl_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionGrantOptions) Reset() {
	*x = PermissionGrantOptions{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionGrantOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionGrantOptions) ProtoMessage() {}

func (x *PermissionGrantOptions) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionGrantOptions.ProtoReflect.Descriptor instead.
func (*PermissionGrantOptions) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{15}
}

func (x *PermissionGrantOptions) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *PermissionGrantOptions) GetTtlMs() int64 {
	if x != nil && x.TtlMs != nil {
		return *x.TtlMs
	}
	return 0
}

type PermissionGrant struct {
	state                  protoimpl.MessageState  `protogen:"open.v1"`
	Token                  *string                 `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	PermissionGrantOptions *PermissionGrantOptions `protobuf:"bytes,2,opt,name=permission_grant_options,json=permissionGrantOptions" json:"permission_grant_options,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PermissionGrant) Reset() {
	*x = PermissionGrant{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionGrant) ProtoMessage() {}

func (x *PermissionGrant) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionGrant.ProtoReflect.Descriptor instead.
func (*PermissionGrant) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{16}
}

func (x *PermissionGrant) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *PermissionGrant) GetPermissionGrantOptions() *PermissionGrantOptions {
	if x != nil {
		return x.PermissionGrantOptions
	}
	return nil
}

type PermissionGrantDetails struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	PermissionLevelDowngraded *bool                  `protobuf:"varint,1,opt,name=permission_level_downgraded,json=permissionLevelDowngraded" json:"permission_level_downgraded,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *PermissionGrantDetails) Reset() {
	*x = PermissionGrantDetails{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionGrantDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionGrantDetails) ProtoMessage() {}

func (x *PermissionGrantDetails) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionGrantDetails.ProtoReflect.Descriptor instead.
func (*PermissionGrantDetails) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{17}
}

func (x *PermissionGrantDetails) GetPermissionLevelDowngraded() bool {
	if x != nil && x.PermissionLevelDowngraded != nil {
		return *x.PermissionLevelDowngraded
	}
	return false
}

type PermissionGrantDescription struct {
	state                  protoimpl.MessageState                      `protogen:"open.v1"`
	PermissionGrantOptions *PermissionGrantOptions                     `protobuf:"bytes,1,opt,name=permission_grant_options,json=permissionGrantOptions" json:"permission_grant_options,omitempty"`
	ClaimFailReason        *PermissionGrantDescription_ClaimFailReason `protobuf:"varint,2,opt,name=claim_fail_reason,json=claimFailReason,enum=spotify.playlist_permission.PermissionGrantDescription_ClaimFailReason" json:"claim_fail_reason,omitempty"`
	IsEffective            *bool                                       `protobuf:"varint,3,opt,name=is_effective,json=isEffective" json:"is_effective,omitempty"`
	Capabilities           *Capabilities                               `protobuf:"bytes,4,opt,name=capabilities" json:"capabilities,omitempty"`
	Details                []*PermissionGrantDetails                   `protobuf:"bytes,5,rep,name=details" json:"details,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PermissionGrantDescription) Reset() {
	*x = PermissionGrantDescription{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionGrantDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionGrantDescription) ProtoMessage() {}

func (x *PermissionGrantDescription) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionGrantDescription.ProtoReflect.Descriptor instead.
func (*PermissionGrantDescription) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{18}
}

func (x *PermissionGrantDescription) GetPermissionGrantOptions() *PermissionGrantOptions {
	if x != nil {
		return x.PermissionGrantOptions
	}
	return nil
}

func (x *PermissionGrantDescription) GetClaimFailReason() PermissionGrantDescription_ClaimFailReason {
	if x != nil && x.ClaimFailReason != nil {
		return *x.ClaimFailReason
	}
	return PermissionGrantDescription_CLAIM_FAIL_REASON_UNSPECIFIED
}

func (x *PermissionGrantDescription) GetIsEffective() bool {
	if x != nil && x.IsEffective != nil {
		return *x.IsEffective
	}
	return false
}

func (x *PermissionGrantDescription) GetCapabilities() *Capabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PermissionGrantDescription) GetDetails() []*PermissionGrantDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ClaimPermissionGrantResponse struct {
	state          protoimpl.MessageState    `protogen:"open.v1"`
	UserPermission *Permission               `protobuf:"bytes,1,opt,name=user_permission,json=userPermission" json:"user_permission,omitempty"`
	Capabilities   *Capabilities             `protobuf:"bytes,2,opt,name=capabilities" json:"capabilities,omitempty"`
	Details        []*PermissionGrantDetails `protobuf:"bytes,3,rep,name=details" json:"details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClaimPermissionGrantResponse) Reset() {
	*x = ClaimPermissionGrantResponse{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimPermissionGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimPermissionGrantResponse) ProtoMessage() {}

func (x *ClaimPermissionGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimPermissionGrantResponse.ProtoReflect.Descriptor instead.
func (*ClaimPermissionGrantResponse) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{19}
}

func (x *ClaimPermissionGrantResponse) GetUserPermission() *Permission {
	if x != nil {
		return x.UserPermission
	}
	return nil
}

func (x *ClaimPermissionGrantResponse) GetCapabilities() *Capabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *ClaimPermissionGrantResponse) GetDetails() []*PermissionGrantDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type ResponseStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    *int32                 `protobuf:"varint,1,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	StatusMessage *string                `protobuf:"bytes,2,opt,name=status_message,json=statusMessage" json:"status_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseStatus) Reset() {
	*x = ResponseStatus{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseStatus) ProtoMessage() {}

func (x *ResponseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseStatus.ProtoReflect.Descriptor instead.
func (*ResponseStatus) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseStatus) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *ResponseStatus) GetStatusMessage() string {
	if x != nil && x.StatusMessage != nil {
		return *x.StatusMessage
	}
	return ""
}

type PermissionIdentifier struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Kind          *PermissionIdentifierKind `protobuf:"varint,1,req,name=kind,enum=spotify.playlist_permission.PermissionIdentifierKind" json:"kind,omitempty"`
	UserId        *string                   `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionIdentifier) Reset() {
	*x = PermissionIdentifier{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionIdentifier) ProtoMessage() {}

func (x *PermissionIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionIdentifier.ProtoReflect.Descriptor instead.
func (*PermissionIdentifier) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{21}
}

func (x *PermissionIdentifier) GetKind() PermissionIdentifierKind {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return PermissionIdentifierKind_PERMISSION_IDENTIFIER_KIND_UNSPECIFIED
}

func (x *PermissionIdentifier) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type PermissionEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Identifier    *PermissionIdentifier  `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Permission    *Permission            `protobuf:"bytes,2,opt,name=permission" json:"permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionEntry) Reset() {
	*x = PermissionEntry{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionEntry) ProtoMessage() {}

func (x *PermissionEntry) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionEntry.ProtoReflect.Descriptor instead.
func (*PermissionEntry) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{22}
}

func (x *PermissionEntry) GetIdentifier() *PermissionIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *PermissionEntry) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

type CreateInitialPermissions struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PermissionEntry []*PermissionEntry     `protobuf:"bytes,1,rep,name=permission_entry,json=permissionEntry" json:"permission_entry,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateInitialPermissions) Reset() {
	*x = CreateInitialPermissions{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInitialPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInitialPermissions) ProtoMessage() {}

func (x *CreateInitialPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInitialPermissions.ProtoReflect.Descriptor instead.
func (*CreateInitialPermissions) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{23}
}

func (x *CreateInitialPermissions) GetPermissionEntry() []*PermissionEntry {
	if x != nil {
		return x.PermissionEntry
	}
	return nil
}

type CreateInitialPermissionsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PermissionEntry []*PermissionEntry     `protobuf:"bytes,1,rep,name=permission_entry,json=permissionEntry" json:"permission_entry,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateInitialPermissionsResponse) Reset() {
	*x = CreateInitialPermissionsResponse{}
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateInitialPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInitialPermissionsResponse) ProtoMessage() {}

func (x *CreateInitialPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_playlist_permission_playlist_permission_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInitialPermissionsResponse.ProtoReflect.Descriptor instead.
func (*CreateInitialPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP(), []int{24}
}

func (x *CreateInitialPermissionsResponse) GetPermissionEntry() []*PermissionEntry {
	if x != nil {
		return x.PermissionEntry
	}
	return nil
}

var File_spotify_playlist_permission_playlist_permission_proto protoreflect.FileDescriptor

const file_spotify_playlist_permission_playlist_permission_proto_rawDesc = "" +
	"\n" +
	"5spotify/playlist_permission/playlist_permission.proto\x12\x1bspotify.playlist_permission\"\x81\x01\n" +
	"\n" +
	"Permission\x12\x1a\n" +
	"\brevision\x18\x01 \x01(\fR\brevision\x12W\n" +
	"\x10permission_level\x18\x02 \x01(\x0e2,.spotify.playlist_permission.PermissionLevelR\x0fpermissionLevel\"\x99\x01\n" +
	"\x0fGrantableLevels\x12@\n" +
	"\x04base\x18\x01 \x03(\x0e2,.spotify.playlist_permission.PermissionLevelR\x04base\x12D\n" +
	"\x06member\x18\x02 \x03(\x0e2,.spotify.playlist_permission.PermissionLevelR\x06member\"2\n" +
	"\x15AttributeCapabilities\x12\x19\n" +
	"\bcan_edit\x18\x01 \x01(\bR\acanEdit\"\x87\x02\n" +
	"\x19ListAttributeCapabilities\x12F\n" +
	"\x04name\x18\x01 \x01(\v22.spotify.playlist_permission.AttributeCapabilitiesR\x04name\x12T\n" +
	"\vdescription\x18\x02 \x01(\v22.spotify.playlist_permission.AttributeCapabilitiesR\vdescription\x12L\n" +
	"\apicture\x18\x03 \x01(\v22.spotify.playlist_permission.AttributeCapabilitiesR\apicture\"\xa1\x04\n" +
	"\fCapabilities\x12\x19\n" +
	"\bcan_view\x18\x01 \x01(\bR\acanView\x12@\n" +
	"\x1ccan_administrate_permissions\x18\x02 \x01(\bR\x1acanAdministratePermissions\x12Y\n" +
	"\x0fgrantable_level\x18\x03 \x03(\x0e2,.spotify.playlist_permission.PermissionLevelB\x02\x18\x01R\x0egrantableLevel\x12.\n" +
	"\x11can_edit_metadata\x18\x04 \x01(\bB\x02\x18\x01R\x0fcanEditMetadata\x12$\n" +
	"\x0ecan_edit_items\x18\x05 \x01(\bR\fcanEditItems\x122\n" +
	"\x15can_cancel_membership\x18\x06 \x01(\bR\x13canCancelMembership\x12W\n" +
	"\x10grantable_levels\x18\a \x01(\v2,.spotify.playlist_permission.GrantableLevelsR\x0fgrantableLevels\x12v\n" +
	"\x1blist_attribute_capabilities\x18\b \x01(\v26.spotify.playlist_permission.ListAttributeCapabilitiesR\x19listAttributeCapabilities\"\xe0\x01\n" +
	"\x18CapabilitiesMultiRequest\x12J\n" +
	"\arequest\x18\x01 \x03(\v20.spotify.playlist_permission.CapabilitiesRequestR\arequest\x12+\n" +
	"\x11fallback_username\x18\x02 \x01(\tR\x10fallbackUsername\x12(\n" +
	"\x10fallback_user_id\x18\x03 \x01(\tR\x0efallbackUserId\x12!\n" +
	"\ffallback_uri\x18\x04 \x01(\tR\vfallbackUri\"\xb6\x01\n" +
	"\x13CapabilitiesRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x10\n" +
	"\x03uri\x18\x03 \x01(\tR\x03uri\x12\"\n" +
	"\ruser_is_owner\x18\x04 \x01(\bR\vuserIsOwner\x124\n" +
	"\x16permission_grant_token\x18\x05 \x01(\tR\x14permissionGrantToken\"j\n" +
	"\x19CapabilitiesMultiResponse\x12M\n" +
	"\bresponse\x18\x01 \x03(\v21.spotify.playlist_permission.CapabilitiesResponseR\bresponse\"\xaa\x01\n" +
	"\x14CapabilitiesResponse\x12C\n" +
	"\x06status\x18\x01 \x01(\v2+.spotify.playlist_permission.ResponseStatusR\x06status\x12M\n" +
	"\fcapabilities\x18\x02 \x01(\v2).spotify.playlist_permission.CapabilitiesR\fcapabilities\"t\n" +
	"\x19SetPermissionLevelRequest\x12W\n" +
	"\x10permission_level\x18\x01 \x01(\x0e2,.spotify.playlist_permission.PermissionLevelR\x0fpermissionLevel\"s\n" +
	"\x15SetPermissionResponse\x12Z\n" +
	"\x14resulting_permission\x18\x01 \x01(\v2'.spotify.playlist_permission.PermissionR\x13resultingPermission\"\x8e\x02\n" +
	"\x1cGetMemberPermissionsResponse\x12\x7f\n" +
	"\x12member_permissions\x18\x01 \x03(\v2P.spotify.playlist_permission.GetMemberPermissionsResponse.MemberPermissionsEntryR\x11memberPermissions\x1am\n" +
	"\x16MemberPermissionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12=\n" +
	"\x05value\x18\x02 \x01(\v2'.spotify.playlist_permission.PermissionR\x05value:\x028\x01\"_\n" +
	"\vPermissions\x12P\n" +
	"\x0fbase_permission\x18\x01 \x01(\v2'.spotify.playlist_permission.PermissionR\x0ebasePermission\"\xf6\x01\n" +
	"\x0fPermissionState\x12J\n" +
	"\vpermissions\x18\x01 \x01(\v2(.spotify.playlist_permission.PermissionsR\vpermissions\x12M\n" +
	"\fcapabilities\x18\x02 \x01(\v2).spotify.playlist_permission.CapabilitiesR\fcapabilities\x12\x1d\n" +
	"\n" +
	"is_private\x18\x03 \x01(\bR\tisPrivate\x12)\n" +
	"\x10is_collaborative\x18\x04 \x01(\bR\x0fisCollaborative\"m\n" +
	"\x12PermissionStatePub\x12W\n" +
	"\x10permission_state\x18\x01 \x01(\v2,.spotify.playlist_permission.PermissionStateR\x0fpermissionState\"x\n" +
	"\x16PermissionGrantOptions\x12G\n" +
	"\n" +
	"permission\x18\x01 \x01(\v2'.spotify.playlist_permission.PermissionR\n" +
	"permission\x12\x15\n" +
	"\x06ttl_ms\x18\x02 \x01(\x03R\x05ttlMs\"\x96\x01\n" +
	"\x0fPermissionGrant\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12m\n" +
	"\x18permission_grant_options\x18\x02 \x01(\v23.spotify.playlist_permission.PermissionGrantOptionsR\x16permissionGrantOptions\"X\n" +
	"\x16PermissionGrantDetails\x12>\n" +
	"\x1bpermission_level_downgraded\x18\x01 \x01(\bR\x19permissionLevelDowngraded\"\xe4\x04\n" +
	"\x1aPermissionGrantDescription\x12m\n" +
	"\x18permission_grant_options\x18\x01 \x01(\v23.spotify.playlist_permission.PermissionGrantOptionsR\x16permissionGrantOptions\x12s\n" +
	"\x11claim_fail_reason\x18\x02 \x01(\x0e2G.spotify.playlist_permission.PermissionGrantDescription.ClaimFailReasonR\x0fclaimFailReason\x12!\n" +
	"\fis_effective\x18\x03 \x01(\bR\visEffective\x12M\n" +
	"\fcapabilities\x18\x04 \x01(\v2).spotify.playlist_permission.CapabilitiesR\fcapabilities\x12M\n" +
	"\adetails\x18\x05 \x03(\v23.spotify.playlist_permission.PermissionGrantDetailsR\adetails\"\xa0\x01\n" +
	"\x0fClaimFailReason\x12!\n" +
	"\x1dCLAIM_FAIL_REASON_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bCLAIM_FAIL_REASON_ANONYMOUS\x10\x01\x12$\n" +
	" CLAIM_FAIL_REASON_NO_GRANT_FOUND\x10\x02\x12#\n" +
	"\x1fCLAIM_FAIL_REASON_GRANT_EXPIRED\x10\x03\"\x8e\x02\n" +
	"\x1cClaimPermissionGrantResponse\x12P\n" +
	"\x0fuser_permission\x18\x01 \x01(\v2'.spotify.playlist_permission.PermissionR\x0euserPermission\x12M\n" +
	"\fcapabilities\x18\x02 \x01(\v2).spotify.playlist_permission.CapabilitiesR\fcapabilities\x12M\n" +
	"\adetails\x18\x03 \x03(\v23.spotify.playlist_permission.PermissionGrantDetailsR\adetails\"X\n" +
	"\x0eResponseStatus\x12\x1f\n" +
	"\vstatus_code\x18\x01 \x01(\x05R\n" +
	"statusCode\x12%\n" +
	"\x0estatus_message\x18\x02 \x01(\tR\rstatusMessage\"z\n" +
	"\x14PermissionIdentifier\x12I\n" +
	"\x04kind\x18\x01 \x02(\x0e25.spotify.playlist_permission.PermissionIdentifierKindR\x04kind\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xad\x01\n" +
	"\x0fPermissionEntry\x12Q\n" +
	"\n" +
	"identifier\x18\x01 \x01(\v21.spotify.playlist_permission.PermissionIdentifierR\n" +
	"identifier\x12G\n" +
	"\n" +
	"permission\x18\x02 \x01(\v2'.spotify.playlist_permission.PermissionR\n" +
	"permission\"s\n" +
	"\x18CreateInitialPermissions\x12W\n" +
	"\x10permission_entry\x18\x01 \x03(\v2,.spotify.playlist_permission.PermissionEntryR\x0fpermissionEntry\"{\n" +
	" CreateInitialPermissionsResponse\x12W\n" +
	"\x10permission_entry\x18\x01 \x03(\v2,.spotify.playlist_permission.PermissionEntryR\x0fpermissionEntry*H\n" +
	"\x0fPermissionLevel\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aBLOCKED\x10\x01\x12\n" +
	"\n" +
	"\x06VIEWER\x10\x02\x12\x0f\n" +
	"\vCONTRIBUTOR\x10\x03*\xe0\x01\n" +
	"\x18PermissionIdentifierKind\x12*\n" +
	"&PERMISSION_IDENTIFIER_KIND_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fPERMISSION_IDENTIFIER_KIND_BASE\x10\x01\x12%\n" +
	"!PERMISSION_IDENTIFIER_KIND_MEMBER\x10\x02\x12$\n" +
	" PERMISSION_IDENTIFIER_KIND_ABUSE\x10\x03\x12&\n" +
	"\"PERMISSION_IDENTIFIER_KIND_PROFILE\x10\x04B\x8a\x02\n" +
	"\x1fcom.spotify.playlist_permissionB\x17PlaylistPermissionProtoH\x01P\x01ZCgithub.com/devgianlu/go-librespot/proto/spotify/playlist_permission\xa2\x02\x03SPX\xaa\x02\x1aSpotify.PlaylistPermission\xca\x02\x1aSpotify\\PlaylistPermission\xe2\x02&Spotify\\PlaylistPermission\\GPBMetadata\xea\x02\x1bSpotify::PlaylistPermission"

var (
	file_spotify_playlist_permission_playlist_permission_proto_rawDescOnce sync.Once
	file_spotify_playlist_permission_playlist_permission_proto_rawDescData []byte
)

func file_spotify_playlist_permission_playlist_permission_proto_rawDescGZIP() []byte {
	file_spotify_playlist_permission_playlist_permission_proto_rawDescOnce.Do(func() {
		file_spotify_playlist_permission_playlist_permission_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spotify_playlist_permission_playlist_permission_proto_rawDesc), len(file_spotify_playlist_permission_playlist_permission_proto_rawDesc)))
	})
	return file_spotify_playlist_permission_playlist_permission_proto_rawDescData
}

var file_spotify_playlist_permission_playlist_permission_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spotify_playlist_permission_playlist_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_spotify_playlist_permission_playlist_permission_proto_goTypes = []any{
	(PermissionLevel)(0),                            // 0: spotify.playlist_permission.PermissionLevel
	(PermissionIdentifierKind)(0),                   // 1: spotify.playlist_permission.PermissionIdentifierKind
	(PermissionGrantDescription_ClaimFailReason)(0), // 2: spotify.playlist_permission.PermissionGrantDescription.ClaimFailReason
	(*Permission)(nil),                              // 3: spotify.playlist_permission.Permission
	(*GrantableLevels)(nil),                         // 4: spotify.playlist_permission.GrantableLevels
	(*AttributeCapabilities)(nil),                   // 5: spotify.playlist_permission.AttributeCapabilities
	(*ListAttributeCapabilities)(nil),               // 6: spotify.playlist_permission.ListAttributeCapabilities
	(*Capabilities)(nil),                            // 7: spotify.playlist_permission.Capabilities
	(*CapabilitiesMultiRequest)(nil),                // 8: spotify.playlist_permission.CapabilitiesMultiRequest
	(*CapabilitiesRequest)(nil),                     // 9: spotify.playlist_permission.CapabilitiesRequest
	(*CapabilitiesMultiResponse)(nil),               // 10: spotify.playlist_permission.CapabilitiesMultiResponse
	(*CapabilitiesResponse)(nil),                    // 11: spotify.playlist_permission.CapabilitiesResponse
	(*SetPermissionLevelRequest)(nil),               // 12: spotify.playlist_permission.SetPermissionLevelRequest
	(*SetPermissionResponse)(nil),                   // 13: spotify.playlist_permission.SetPermissionResponse
	(*GetMemberPermissionsResponse)(nil),            // 14: spotify.playlist_permission.GetMemberPermissionsResponse
	(*Permissions)(nil),                             // 15: spotify.playlist_permission.Permissions
	(*PermissionState)(nil),                         // 16: spotify.playlist_permission.PermissionState
	(*PermissionStatePub)(nil),                      // 17: spotify.playlist_permission.PermissionStatePub
	(*PermissionGrantOptions)(nil),                  // 18: spotify.playlist_permission.PermissionGrantOptions
	(*PermissionGrant)(nil),                         // 19: spotify.playlist_permission.PermissionGrant
	(*PermissionGrantDetails)(nil),                  // 20: spotify.playlist_permission.PermissionGrantDetails
	(*PermissionGrantDescription)(nil),              // 21: spotify.playlist_permission.PermissionGrantDescription
	(*ClaimPermissionGrantResponse)(nil),            // 22: spotify.playlist_permission.ClaimPermissionGrantResponse
	(*ResponseStatus)(nil),                          // 23: spotify.playlist_permission.ResponseStatus
	(*PermissionIdentifier)(nil),                    // 24: spotify.playlist_permission.PermissionIdentifier
	(*PermissionEntry)(nil),                         // 25: spotify.playlist_permission.PermissionEntry
	(*CreateInitialPermissions)(nil),                // 26: spotify.playlist_permission.CreateInitialPermissions
	(*CreateInitialPermissionsResponse)(nil),        // 27: spotify.playlist_permission.CreateInitialPermissionsResponse
	nil,                                             // 28: spotify.playlist_permission.GetMemberPermissionsResponse.MemberPermissionsEntry
}
var file_spotify_playlist_permission_playlist_permission_proto_depIdxs = []int32{
	0,  // 0: spotify.playlist_permission.Permission.permission_level:type_name -> spotify.playlist_permission.PermissionLevel
	0,  // 1: spotify.playlist_permission.GrantableLevels.base:type_name -> spotify.playlist_permission.PermissionLevel
	0,  // 2: spotify.playlist_permission.GrantableLevels.member:type_name -> spotify.playlist_permission.PermissionLevel
	5,  // 3: spotify.playlist_permission.ListAttributeCapabilities.name:type_name -> spotify.playlist_permission.AttributeCapabilities
	5,  // 4: spotify.playlist_permission.ListAttributeCapabilities.description:type_name -> spotify.playlist_permission.AttributeCapabilities
	5,  // 5: spotify.playlist_permission.ListAttributeCapabilities.picture:type_name -> spotify.playlist_permission.AttributeCapabilities
	0,  // 6: spotify.playlist_permission.Capabilities.grantable_level:type_name -> spotify.playlist_permission.PermissionLevel
	4,  // 7: spotify.playlist_permission.Capabilities.grantable_levels:type_name -> spotify.playlist_permission.GrantableLevels
	6,  // 8: spotify.playlist_permission.Capabilities.list_attribute_capabilities:type_name -> spotify.playlist_permission.ListAttributeCapabilities
	9,  // 9: spotify.playlist_permission.CapabilitiesMultiRequest.request:type_name -> spotify.playlist_permission.CapabilitiesRequest
	11, // 10: spotify.playlist_permission.CapabilitiesMultiResponse.response:type_name -> spotify.playlist_permission.CapabilitiesResponse
	23, // 11: spotify.playlist_permission.CapabilitiesResponse.status:type_name -> spotify.playlist_permission.ResponseStatus
	7,  // 12: spotify.playlist_permission.CapabilitiesResponse.capabilities:type_name -> spotify.playlist_permission.Capabilities
	0,  // 13: spotify.playlist_permission.SetPermissionLevelRequest.permission_level:type_name -> spotify.playlist_permission.PermissionLevel
	3,  // 14: spotify.playlist_permission.SetPermissionResponse.resulting_permission:type_name -> spotify.playlist_permission.Permission
	28, // 15: spotify.playlist_permission.GetMemberPermissionsResponse.member_permissions:type_name -> spotify.playlist_permission.GetMemberPermissionsResponse.MemberPermissionsEntry
	3,  // 16: spotify.playlist_permission.Permissions.base_permission:type_name -> spotify.playlist_permission.Permission
	15, // 17: spotify.playlist_permission.PermissionState.permissions:type_name -> spotify.playlist_permission.Permissions
	7,  // 18: spotify.playlist_permission.PermissionState.capabilities:type_name -> spotify.playlist_permission.Capabilities
	16, // 19: spotify.playlist_permission.PermissionStatePub.permission_state:type_name -> spotify.playlist_permission.PermissionState
	3,  // 20: spotify.playlist_permission.PermissionGrantOptions.permission:type_name -> spotify.playlist_permission.Permission
	18, // 21: spotify.playlist_permission.PermissionGrant.permission_grant_options:type_name -> spotify.playlist_permission.PermissionGrantOptions
	18, // 22: spotify.playlist_permission.PermissionGrantDescription.permission_grant_options:type_name -> spotify.playlist_permission.PermissionGrantOptions
	2,  // 23: spotify.playlist_permission.PermissionGrantDescription.claim_fail_reason:type_name -> spotify.playlist_permission.PermissionGrantDescription.ClaimFailReason
	7,  // 24: spotify.playlist_permission.PermissionGrantDescription.capabilities:type_name -> spotify.playlist_permission.Capabilities
	20, // 25: spotify.playlist_permission.PermissionGrantDescription.details:type_name -> spotify.playlist_permission.PermissionGrantDetails
	3,  // 26: spotify.playlist_permission.ClaimPermissionGrantResponse.user_permission:type_name -> spotify.playlist_permission.Permission
	7,  // 27: spotify.playlist_permission.ClaimPermissionGrantResponse.capabilities:type_name -> spotify.playlist_permission.Capabilities
	20, // 28: spotify.playlist_permission.ClaimPermissionGrantResponse.details:type_name -> spotify.playlist_permission.PermissionGrantDetails
	1,  // 29: spotify.playlist_permission.PermissionIdentifier.kind:type_name -> spotify.playlist_permission.PermissionIdentifierKind
	24, // 30: spotify.playlist_permission.PermissionEntry.identifier:type_name -> spotify.playlist_permission.PermissionIdentifier
	3,  // 31: spotify.playlist_permission.PermissionEntry.permission:type_name -> spotify.playlist_permission.Permission
	25, // 32: spotify.playlist_permission.CreateInitialPermissions.permission_entry:type_name -> spotify.playlist_permission.PermissionEntry
	25, // 33: spotify.playlist_permission.CreateInitialPermissionsResponse.permission_entry:type_name -> spotify.playlist_permission.PermissionEntry
	3,  // 34: spotify.playlist_permission.GetMemberPermissionsResponse.MemberPermissionsEntry.value:type_name -> spotify.playlist_permission.Permission
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_spotify_playlist_permission_playlist_permission_proto_init() }
func file_spotify_playlist_permission_playlist_permission_proto_init() {
	if File_spotify_playlist_permission_playlist_permission_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spotify_playlist_permission_playlist_permission_proto_rawDesc), len(file_spotify_playlist_permission_playlist_permission_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spotify_playlist_permission_playlist_permission_proto_goTypes,
		DependencyIndexes: file_spotify_playlist_permission_playlist_permission_proto_depIdxs,
		EnumInfos:         file_spotify_playlist_permission_playlist_permission_proto_enumTypes,
		MessageInfos:      file_spotify_playlist_permission_playlist_permission_proto_msgTypes,
	}.Build()
	File_spotify_playlist_permission_playlist_permission_proto = out.File
	file_spotify_playlist_permission_playlist_permission_proto_goTypes = nil
	file_spotify_playlist_permission_playlist_permission_proto_depIdxs = nil
}
